+/etc/zshrc:11> PROMPT='[%n@%m]%~%# ' 
+/etc/zshrc:16> bindkey ' ' magic-space
+/etc/zshrc:47> _src_etc_profile_d
+_src_etc_profile_d:4> emulate -L ksh
+_src_etc_profile_d:8> [[ ! -o login ]]
+_src_etc_profile_d:9> i=/etc/profile.d/bash_completion.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/bash_completion.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/bash_completion.sh
+/etc/profile.d/bash_completion.sh:2> [ -n '' -a -n '[%n@%m]%~%# ' -a -z '' ']'
+_src_etc_profile_d:9> i=/etc/profile.d/colorgrep.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/colorgrep.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/colorgrep.sh
+/etc/profile.d/colorgrep.sh:3> /usr/libexec/grepconf.sh -c
+/etc/profile.d/colorgrep.sh:5> alias 'grep=grep --color=auto'
+/etc/profile.d/colorgrep.sh:6> alias 'egrep=egrep --color=auto'
+/etc/profile.d/colorgrep.sh:7> alias 'fgrep=fgrep --color=auto'
+_src_etc_profile_d:9> i=/etc/profile.d/colorls.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/colorls.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/colorls.sh
+/etc/profile.d/colorls.sh:4> [ '!' -t 0 ']'
+/etc/profile.d/colorls.sh:7> [ -z '' ']'
+/etc/profile.d/colorls.sh:9> alias 'll=ls -l'
+/etc/profile.d/colorls.sh:10> alias 'l.=ls -d .*'
+/etc/profile.d/colorls.sh:12> INCLUDE='' 
+/etc/profile.d/colorls.sh:13> COLORS='' 
+/etc/profile.d/colorls.sh:15> colors=/root/.dir_colors.screen
+/etc/profile.d/colorls.sh:17> [ -e /root/.dir_colors.screen ']'
+/etc/profile.d/colorls.sh:15> colors=/root/.dircolors.screen
+/etc/profile.d/colorls.sh:17> [ -e /root/.dircolors.screen ']'
+/etc/profile.d/colorls.sh:15> colors=/root/.dir_colors
+/etc/profile.d/colorls.sh:17> [ -e /root/.dir_colors ']'
+/etc/profile.d/colorls.sh:15> colors=/root/.dircolors
+/etc/profile.d/colorls.sh:17> [ -e /root/.dircolors ']'
+/etc/profile.d/colorls.sh:22> [ -z '' ']'
+/etc/profile.d/colorls.sh:22> [ -e /etc/DIR_COLORS.screen ']'
+/etc/profile.d/colorls.sh:25> [ -z '' ']'
+/etc/profile.d/colorls.sh:25> [ -e /etc/DIR_COLORS.256color ']'
+/etc/profile.d/colorls.sh:26> /usr/bin/tty -s
+/etc/profile.d/colorls.sh:26> /usr/bin/tput colors
+/etc/profile.d/colorls.sh:26> [ x8 '=' x256 ']'
+/etc/profile.d/colorls.sh:29> [ -z '' ']'
+/etc/profile.d/colorls.sh:29> [ -e /etc/DIR_COLORS ']'
+/etc/profile.d/colorls.sh:30> COLORS=/etc/DIR_COLORS 
+/etc/profile.d/colorls.sh:33> [ -n /etc/DIR_COLORS ']'
+/etc/profile.d/colorls.sh:35> [ -e '' ']'
+/etc/profile.d/colorls.sh:46> /usr/bin/dircolors --sh /etc/DIR_COLORS
+/etc/profile.d/colorls.sh:46> eval $'LS_COLORS=\'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:\';\nexport LS_COLORS'
+/etc/profile.d/colorls.sh:46> LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:' 
+/etc/profile.d/colorls.sh:46> export LS_COLORS
+/etc/profile.d/colorls.sh:49> [ -z 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:' ']'
+/etc/profile.d/colorls.sh:50> /usr/bin/grep -qi '^COLOR.*none' /etc/DIR_COLORS
+/etc/profile.d/colorls.sh:53> unset TMP COLORS INCLUDE
+/etc/profile.d/colorls.sh:55> alias 'll=ls -l --color=auto'
+/etc/profile.d/colorls.sh:56> alias 'l.=ls -d .* --color=auto'
+/etc/profile.d/colorls.sh:57> alias 'ls=ls --color=auto'
+_src_etc_profile_d:9> i=/etc/profile.d/colorxzgrep.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/colorxzgrep.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/colorxzgrep.sh
+/etc/profile.d/colorxzgrep.sh:1> /usr/libexec/grepconf.sh -c
+/etc/profile.d/colorxzgrep.sh:2> alias 'xzgrep=xzgrep --color=auto'
+/etc/profile.d/colorxzgrep.sh:3> alias 'xzegrep=xzegrep --color=auto'
+/etc/profile.d/colorxzgrep.sh:4> alias 'xzfgrep=xzfgrep --color=auto'
+_src_etc_profile_d:9> i=/etc/profile.d/colorzgrep.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/colorzgrep.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/colorzgrep.sh
+/etc/profile.d/colorzgrep.sh:1> [ -f /usr/libexec/grepconf.sh ']'
+/etc/profile.d/colorzgrep.sh:3> /usr/libexec/grepconf.sh -c
+/etc/profile.d/colorzgrep.sh:4> alias 'zgrep=zgrep --color=auto'
+/etc/profile.d/colorzgrep.sh:5> alias 'zfgrep=zfgrep --color=auto'
+/etc/profile.d/colorzgrep.sh:6> alias 'zegrep=zegrep --color=auto'
+_src_etc_profile_d:9> i=/etc/profile.d/flatpak.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/flatpak.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/flatpak.sh
+/etc/profile.d/flatpak.sh:3> [ /exports/share/:/var/lib/flatpak/exports/share/:/usr/local/share/:/usr/share/ '=' /root/.local/share/flatpak/exports/share/:/var/lib/flatpak/exports/share/:/usr/local/share/:/usr/share/ ']'
+/etc/profile.d/flatpak.sh:7> export XDG_DATA_DIRS
+_src_etc_profile_d:9> i=/etc/profile.d/lang.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/lang.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/lang.sh
+/etc/profile.d/lang.sh:3> sourced=0 
+/etc/profile.d/lang.sh:5> [ -n en_US.UTF-8 ']'
+/etc/profile.d/lang.sh:6> saved_lang=en_US.UTF-8 
+/etc/profile.d/lang.sh:7> [ -f /root/.i18n ']'
+/etc/profile.d/lang.sh:8> LANG=en_US.UTF-8 
+/etc/profile.d/lang.sh:9> unset saved_lang
+/etc/profile.d/lang.sh:16> [ 0 '=' 1 ']'
+/etc/profile.d/lang.sh:89> unset sourced
+/etc/profile.d/lang.sh:90> unset langfile
+_src_etc_profile_d:9> i=/etc/profile.d/less.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/less.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/less.sh
+/etc/profile.d/less.sh:5> [ -z '||/usr/bin/lesspipe.sh %s' ']'
+_src_etc_profile_d:9> i=/etc/profile.d/modules.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/modules.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/modules.sh
+/etc/profile.d/modules.sh:1> shell=+/etc/profile.d/modules.sh:1> /bin/ps -p 3545 '-ocomm='
+/etc/profile.d/modules.sh:1> shell=+/etc/profile.d/modules.sh:1> /bin/basename zsh
+/etc/profile.d/modules.sh:1> shell=zsh 
+/etc/profile.d/modules.sh:2> [ -f /usr/share/Modules/init/zsh ']'
+/etc/profile.d/modules.sh:4> . /usr/share/Modules/init/zsh
+/usr/share/Modules/init/zsh:4> MODULESHOME=/usr/share/Modules 
+/usr/share/Modules/init/zsh:5> export MODULESHOME
+/usr/share/Modules/init/zsh:7> [ '' '=' '' ']'
+/usr/share/Modules/init/zsh:8> LOADEDMODULES='' 
+/usr/share/Modules/init/zsh:9> export LOADEDMODULES
+/usr/share/Modules/init/zsh:12> [ /etc/scl/modulefiles:/etc/scl/modulefiles:/etc/scl/modulefiles:/usr/share/Modules/modulefiles:/etc/modulefiles:/usr/share/modulefiles '=' '' ']'
+_src_etc_profile_d:9> i=/etc/profile.d/PackageKit.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/PackageKit.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/PackageKit.sh
+/etc/profile.d/PackageKit.sh:37> [[ -n 5.4.1 ]]
+_src_etc_profile_d:9> i=/etc/profile.d/scl-init.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/scl-init.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/scl-init.sh
+/etc/profile.d/scl-init.sh:12> shell=+/etc/profile.d/scl-init.sh:12> /bin/ps -p 3545 '-ocomm='
+/etc/profile.d/scl-init.sh:12> shell=+/etc/profile.d/scl-init.sh:12> /bin/basename zsh
+/etc/profile.d/scl-init.sh:12> shell=zsh 
+/etc/profile.d/scl-init.sh:13> [ zsh '=' bash ']'
+/etc/profile.d/scl-init.sh:15> MODULESHOME=/usr/share/Modules 
+/etc/profile.d/scl-init.sh:16> export MODULESHOME
+/etc/profile.d/scl-init.sh:18> [ /etc/scl/modulefiles:/etc/scl/modulefiles:/etc/scl/modulefiles:/usr/share/Modules/modulefiles:/etc/modulefiles:/usr/share/modulefiles '=' '' ']'
+/etc/profile.d/scl-init.sh:22> MODULEPATH=/etc/scl/modulefiles:/etc/scl/modulefiles:/etc/scl/modulefiles:/etc/scl/modulefiles:/usr/share/Modules/modulefiles:/etc/modulefiles:/usr/share/modulefiles 
+/etc/profile.d/scl-init.sh:24> export MODULEPATH
+_src_etc_profile_d:9> i=/etc/profile.d/vim.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/vim.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/vim.sh
+/etc/profile.d/vim.sh:1> [ -n '' -o -n '' -o -n 5.4.1 ']'
+/etc/profile.d/vim.sh:2> /usr/bin/id -u
+/etc/profile.d/vim.sh:2> [ 0 -le 200 ']'
+/etc/profile.d/vim.sh:2> return
+_src_etc_profile_d:9> i=/etc/profile.d/vte.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/vte.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/vte.sh
+/etc/profile.d/vte.sh:18> [ -n '' -o -n 5.4.1 ']'
+/etc/profile.d/vte.sh:21> [[ bimx == *i* ]]
+/etc/profile.d/vte.sh:24> [ 5001 -ge 3405 ']'
+/etc/profile.d/vte.sh:60> case screen (xterm*vte*)
+/etc/profile.d/vte.sh:67> true
 | +_src_etc_profile_d:9> i=/etc/profile.d/which2.sh
+_src_etc_profile_d:10> [ -r /etc/profile.d/which2.sh ']'
+_src_etc_profile_d:11> . /etc/profile.d/which2.sh
+/etc/profile.d/which2.sh:3> alias 'which=(alias; declare -f) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot'
+_src_etc_profile_d:14> unset i
+/etc/zshrc:49> unset -f pathmunge _src_etc_profile_d
+/root/.zshrc:5> export ZSH=/root/.oh-my-zsh
+/root/.zshrc:10> ZSH_THEME=bira 
+/root/.zshrc:61> plugins=( git ) 
+/root/.zshrc:65> source /root/.oh-my-zsh/oh-my-zsh.sh
+/root/.oh-my-zsh/oh-my-zsh.sh:2> [ '' '!=' true ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:3> env 'ZSH=/root/.oh-my-zsh' 'DISABLE_UPDATE_PROMPT=' zsh -f /root/.oh-my-zsh/tools/check_for_upgrade.sh
+/root/.oh-my-zsh/oh-my-zsh.sh:9> fpath=( /root/.oh-my-zsh/functions /root/.oh-my-zsh/completions /usr/local/share/zsh/site-functions /usr/share/zsh/site-functions /usr/share/zsh/5.4.1/functions ) 
+/root/.oh-my-zsh/oh-my-zsh.sh:12> autoload -U compaudit compinit
+/root/.oh-my-zsh/oh-my-zsh.sh:14> : true
+/root/.oh-my-zsh/oh-my-zsh.sh:18> [[ -z '' ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:19> ZSH_CUSTOM=/root/.oh-my-zsh/custom 
+/root/.oh-my-zsh/oh-my-zsh.sh:24> [[ -z '' ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:25> ZSH_CACHE_DIR=/root/.oh-my-zsh/cache 
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/bzr.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/bzr.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/bzr.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/bzr.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/clipboard.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/clipboard.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/clipboard.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/clipboard.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/compfix.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/compfix.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/compfix.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/compfix.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/completion.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/completion.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/completion.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/completion.zsh
+/root/.oh-my-zsh/lib/completion.zsh:2> zmodload -i zsh/complist
+/root/.oh-my-zsh/lib/completion.zsh:4> WORDCHARS='' 
+/root/.oh-my-zsh/lib/completion.zsh:6> unsetopt menu_complete
+/root/.oh-my-zsh/lib/completion.zsh:7> unsetopt flowcontrol
+/root/.oh-my-zsh/lib/completion.zsh:8> setopt auto_menu
+/root/.oh-my-zsh/lib/completion.zsh:9> setopt complete_in_word
+/root/.oh-my-zsh/lib/completion.zsh:10> setopt always_to_end
+/root/.oh-my-zsh/lib/completion.zsh:13> bindkey -M menuselect '^o' accept-and-infer-next-history
+/root/.oh-my-zsh/lib/completion.zsh:14> zstyle ':completion:*:*:*:*:*' menu select
+/root/.oh-my-zsh/lib/completion.zsh:17> [[ '' = true ]]
+/root/.oh-my-zsh/lib/completion.zsh:20> [[ '' = true ]]
+/root/.oh-my-zsh/lib/completion.zsh:23> zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
+/root/.oh-my-zsh/lib/completion.zsh:26> unset CASE_SENSITIVE HYPHEN_INSENSITIVE
+/root/.oh-my-zsh/lib/completion.zsh:28> zstyle ':completion:*' list-colors ''
+/root/.oh-my-zsh/lib/completion.zsh:29> zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
+/root/.oh-my-zsh/lib/completion.zsh:31> [[ linux-gnu = solaris* ]]
+/root/.oh-my-zsh/lib/completion.zsh:34> zstyle ':completion:*:*:*:*:processes' command 'ps -u root -o pid,user,comm -w -w'
+/root/.oh-my-zsh/lib/completion.zsh:38> zstyle ':completion:*:cd:*' tag-order local-directories directory-stack path-directories
+/root/.oh-my-zsh/lib/completion.zsh:41> zstyle ':completion::complete:*' use-cache 1
+/root/.oh-my-zsh/lib/completion.zsh:42> zstyle ':completion::complete:*' cache-path /root/.oh-my-zsh/cache
+/root/.oh-my-zsh/lib/completion.zsh:45> zstyle ':completion:*:*:*:users' ignored-patterns adm amanda apache at avahi avahi-autoipd beaglidx bin cacti canna clamav daemon dbus distcache dnsmasq dovecot fax ftp games gdm gkrellmd gopher hacluster haldaemon halt hsqldb ident junkbust kdm ldap lp mail mailman mailnull man messagebus mldonkey mysql nagios named netdump news nfsnobody nobody nscd ntp nut nx obsrun openvpn operator pcap polkitd postfix postgres privoxy pulse pvm quagga radvd rpc rpcuser rpm rtkit scard shutdown squid sshd statd svn sync tftp usbmux uucp vcsa wwwrun xfs '_*'
+/root/.oh-my-zsh/lib/completion.zsh:56> zstyle '*' single-ignored show
+/root/.oh-my-zsh/lib/completion.zsh:58> [[ '' = true ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/correction.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/correction.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/correction.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/correction.zsh
+/root/.oh-my-zsh/lib/correction.zsh:1> [[ '' == true ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/diagnostics.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/diagnostics.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/diagnostics.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/diagnostics.zsh
+/root/.oh-my-zsh/lib/diagnostics.zsh:56> autoload -Uz is-at-least
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/directories.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/directories.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/directories.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/directories.zsh
+/root/.oh-my-zsh/lib/directories.zsh:2> setopt auto_pushd
+/root/.oh-my-zsh/lib/directories.zsh:3> setopt pushd_ignore_dups
+/root/.oh-my-zsh/lib/directories.zsh:4> setopt pushdminus
+/root/.oh-my-zsh/lib/directories.zsh:6> alias -g '...=../..'
+/root/.oh-my-zsh/lib/directories.zsh:7> alias -g '....=../../..'
+/root/.oh-my-zsh/lib/directories.zsh:8> alias -g '.....=../../../..'
+/root/.oh-my-zsh/lib/directories.zsh:9> alias -g '......=../../../../..'
+/root/.oh-my-zsh/lib/directories.zsh:11> alias -- '-=cd -'
+/root/.oh-my-zsh/lib/directories.zsh:12> alias '1=cd -'
+/root/.oh-my-zsh/lib/directories.zsh:13> alias '2=cd -2'
+/root/.oh-my-zsh/lib/directories.zsh:14> alias '3=cd -3'
+/root/.oh-my-zsh/lib/directories.zsh:15> alias '4=cd -4'
+/root/.oh-my-zsh/lib/directories.zsh:16> alias '5=cd -5'
+/root/.oh-my-zsh/lib/directories.zsh:17> alias '6=cd -6'
+/root/.oh-my-zsh/lib/directories.zsh:18> alias '7=cd -7'
+/root/.oh-my-zsh/lib/directories.zsh:19> alias '8=cd -8'
+/root/.oh-my-zsh/lib/directories.zsh:20> alias '9=cd -9'
+/root/.oh-my-zsh/lib/directories.zsh:22> alias 'md=mkdir -p'
+/root/.oh-my-zsh/lib/directories.zsh:23> alias 'rd=rmdir'
+/root/.oh-my-zsh/lib/directories.zsh:24> alias 'd=dirs -v | head -10'
+/root/.oh-my-zsh/lib/directories.zsh:27> alias 'lsa=ls -lah'
+/root/.oh-my-zsh/lib/directories.zsh:28> alias 'l=ls -lah'
+/root/.oh-my-zsh/lib/directories.zsh:29> alias 'll=ls -lh'
+/root/.oh-my-zsh/lib/directories.zsh:30> alias 'la=ls -lAh'
+/root/.oh-my-zsh/lib/directories.zsh:33> alias 'pu=pushd'
+/root/.oh-my-zsh/lib/directories.zsh:34> alias 'po=popd'
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/functions.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/functions.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/functions.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/functions.zsh
+/root/.oh-my-zsh/lib/functions.zsh:104> zmodload zsh/langinfo
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/git.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/git.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/git.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/git.zsh
+/root/.oh-my-zsh/lib/git.zsh:219> POST_1_7_2_GIT=+/root/.oh-my-zsh/lib/git.zsh:219> git_compare_version 1.7.2
+git_compare_version:1> local INPUT_GIT_VERSION INSTALLED_GIT_VERSION
+git_compare_version:2> INPUT_GIT_VERSION=( 1 7 2 ) 
+git_compare_version:3> INSTALLED_GIT_VERSION=+git_compare_version:3> git --version
+git_compare_version:3> INSTALLED_GIT_VERSION=( git version 2.14.2 ) 
+git_compare_version:4> INSTALLED_GIT_VERSION=( 2 14 2 ) 
+git_compare_version:6> i=1
+git_compare_version:7> [[ 2 -gt 1 ]]
+git_compare_version:8> echo 1
+git_compare_version:9> return 0
+/root/.oh-my-zsh/lib/git.zsh:219> POST_1_7_2_GIT=1 
+/root/.oh-my-zsh/lib/git.zsh:221> unfunction git_compare_version
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/grep.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/grep.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/grep.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/grep.zsh
+/root/.oh-my-zsh/lib/grep.zsh:6> GREP_OPTIONS='' 
+/root/.oh-my-zsh/lib/grep.zsh:9> grep-flag-available '--color=auto'
+grep-flag-available:1> echo
+grep-flag-available:1> grep '--color=auto' '--color=auto' ''
+/root/.oh-my-zsh/lib/grep.zsh:10> GREP_OPTIONS+=' --color=auto' 
+/root/.oh-my-zsh/lib/grep.zsh:14> VCS_FOLDERS='{.bzr,CVS,.git,.hg,.svn}' 
+/root/.oh-my-zsh/lib/grep.zsh:16> grep-flag-available '--exclude-dir=.cvs'
+grep-flag-available:1> echo
+grep-flag-available:1> grep '--color=auto' '--exclude-dir=.cvs' ''
+/root/.oh-my-zsh/lib/grep.zsh:17> GREP_OPTIONS+=' --exclude-dir={.bzr,CVS,.git,.hg,.svn}' 
+/root/.oh-my-zsh/lib/grep.zsh:23> alias 'grep=grep  --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
+/root/.oh-my-zsh/lib/grep.zsh:26> unset GREP_OPTIONS
+/root/.oh-my-zsh/lib/grep.zsh:27> unset VCS_FOLDERS
+/root/.oh-my-zsh/lib/grep.zsh:28> unfunction grep-flag-available
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/history.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/history.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/history.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/history.zsh
+/root/.oh-my-zsh/lib/history.zsh:2> [ -z '' ']'
+/root/.oh-my-zsh/lib/history.zsh:3> HISTFILE=/root/.zsh_history 
+/root/.oh-my-zsh/lib/history.zsh:6> HISTSIZE=10000 
+/root/.oh-my-zsh/lib/history.zsh:7> SAVEHIST=10000 
+/root/.oh-my-zsh/lib/history.zsh:10> case  (mm/dd/yyyy)
+/root/.oh-my-zsh/lib/history.zsh:10> case  (dd.mm.yyyy)
+/root/.oh-my-zsh/lib/history.zsh:10> case  (yyyy-mm-dd)
+/root/.oh-my-zsh/lib/history.zsh:10> case  (*)
+/root/.oh-my-zsh/lib/history.zsh:14> alias 'history=fc -l 1'
+/root/.oh-my-zsh/lib/history.zsh:17> setopt append_history
+/root/.oh-my-zsh/lib/history.zsh:18> setopt extended_history
+/root/.oh-my-zsh/lib/history.zsh:19> setopt hist_expire_dups_first
+/root/.oh-my-zsh/lib/history.zsh:20> setopt hist_ignore_dups
+/root/.oh-my-zsh/lib/history.zsh:21> setopt hist_ignore_space
+/root/.oh-my-zsh/lib/history.zsh:22> setopt hist_verify
+/root/.oh-my-zsh/lib/history.zsh:23> setopt inc_append_history
+/root/.oh-my-zsh/lib/history.zsh:24> setopt share_history
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/key-bindings.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/key-bindings.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/key-bindings.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/key-bindings.zsh
+/root/.oh-my-zsh/lib/key-bindings.zsh:7> ((  1  ))
+/root/.oh-my-zsh/lib/key-bindings.zsh:7> ((  1  ))
+/root/.oh-my-zsh/lib/key-bindings.zsh:14> zle -N zle-line-init
+/root/.oh-my-zsh/lib/key-bindings.zsh:15> zle -N zle-line-finish
+/root/.oh-my-zsh/lib/key-bindings.zsh:18> bindkey -e
+/root/.oh-my-zsh/lib/key-bindings.zsh:20> bindkey '\ew' kill-region
+/root/.oh-my-zsh/lib/key-bindings.zsh:21> bindkey -s '\el' 'ls\n'
+/root/.oh-my-zsh/lib/key-bindings.zsh:22> bindkey '^r' history-incremental-search-backward
+/root/.oh-my-zsh/lib/key-bindings.zsh:23> [[ $'\C-[[5~' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:24> bindkey $'\C-[[5~' up-line-or-history
+/root/.oh-my-zsh/lib/key-bindings.zsh:26> [[ $'\C-[[6~' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:27> bindkey $'\C-[[6~' down-line-or-history
+/root/.oh-my-zsh/lib/key-bindings.zsh:31> [[ $'\C-[OA' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:32> autoload -U up-line-or-beginning-search
+/root/.oh-my-zsh/lib/key-bindings.zsh:33> zle -N up-line-or-beginning-search
+/root/.oh-my-zsh/lib/key-bindings.zsh:34> bindkey $'\C-[OA' up-line-or-beginning-search
+/root/.oh-my-zsh/lib/key-bindings.zsh:37> [[ $'\C-[OB' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:38> autoload -U down-line-or-beginning-search
+/root/.oh-my-zsh/lib/key-bindings.zsh:39> zle -N down-line-or-beginning-search
+/root/.oh-my-zsh/lib/key-bindings.zsh:40> bindkey $'\C-[OB' down-line-or-beginning-search
+/root/.oh-my-zsh/lib/key-bindings.zsh:43> [[ $'\C-[[1~' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:44> bindkey $'\C-[[1~' beginning-of-line
+/root/.oh-my-zsh/lib/key-bindings.zsh:46> [[ $'\C-[[4~' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:47> bindkey $'\C-[[4~' end-of-line
+/root/.oh-my-zsh/lib/key-bindings.zsh:50> bindkey ' ' magic-space
+/root/.oh-my-zsh/lib/key-bindings.zsh:52> bindkey '^[[1;5C' forward-word
+/root/.oh-my-zsh/lib/key-bindings.zsh:53> bindkey '^[[1;5D' backward-word
+/root/.oh-my-zsh/lib/key-bindings.zsh:55> [[ $'\C-[[Z' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:56> bindkey $'\C-[[Z' reverse-menu-complete
+/root/.oh-my-zsh/lib/key-bindings.zsh:59> bindkey '^?' backward-delete-char
+/root/.oh-my-zsh/lib/key-bindings.zsh:60> [[ $'\C-[[3~' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:61> bindkey $'\C-[[3~' delete-char
+/root/.oh-my-zsh/lib/key-bindings.zsh:69> autoload -U edit-command-line
+/root/.oh-my-zsh/lib/key-bindings.zsh:70> zle -N edit-command-line
+/root/.oh-my-zsh/lib/key-bindings.zsh:71> bindkey '\C-x\C-e' edit-command-line
+/root/.oh-my-zsh/lib/key-bindings.zsh:74> bindkey '^[m' copy-prev-shell-word
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/misc.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/misc.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/misc.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/misc.zsh
+/root/.oh-my-zsh/lib/misc.zsh:3> autoload -Uz is-at-least
+/root/.oh-my-zsh/lib/misc.zsh:4> [[ 5.4.1 != 5.1.1 ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/root/.oh-my-zsh/functions
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /root/.oh-my-zsh/functions/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/root/.oh-my-zsh/completions
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /root/.oh-my-zsh/completions/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/usr/local/share/zsh/site-functions
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /usr/local/share/zsh/site-functions/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/usr/share/zsh/site-functions
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /usr/share/zsh/site-functions/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/usr/share/zsh/5.4.1/functions
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /usr/share/zsh/5.4.1/functions/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:7> is-at-least 5.1
+is-at-least:23> emulate -L zsh
+is-at-least:25> local IFS=.- min_cnt=0 ver_cnt=0 part min_ver version order
+is-at-least:27> min_ver=( 5 1 ) 
+is-at-least:28> version=( 5 4 1 0 ) 
+is-at-least:30> ((  0 <= 2  ))
+is-at-least:31> [[ '' != <-> ]]
+is-at-least:32> ((  ++ver_cnt > 4  ))
+is-at-least:33> [[ 5 = *[0-9][^0-9]* ]]
+is-at-least:45> part=5 
+is-at-least:31> [[ 5 != <-> ]]
+is-at-least:48> true
+is-at-least:49> ((  ++min_cnt > 2  ))
+is-at-least:50> [[ 5 = <-> ]]
+is-at-least:50> break
+is-at-least:53> ((  part > min_ver[min_cnt]  ))
+is-at-least:54> ((  part < min_ver[min_cnt]  ))
+is-at-least:55> part='' 
+is-at-least:30> ((  1 <= 2  ))
+is-at-least:31> [[ '' != <-> ]]
+is-at-least:32> ((  ++ver_cnt > 4  ))
+is-at-least:33> [[ 4 = *[0-9][^0-9]* ]]
+is-at-least:45> part=4 
+is-at-least:31> [[ 4 != <-> ]]
+is-at-least:48> true
+is-at-least:49> ((  ++min_cnt > 2  ))
+is-at-least:50> [[ 1 = <-> ]]
+is-at-least:50> break
+is-at-least:53> ((  part > min_ver[min_cnt]  ))
+is-at-least:53> return 0
+/root/.oh-my-zsh/lib/misc.zsh:8> autoload -Uz bracketed-paste-magic
+/root/.oh-my-zsh/lib/misc.zsh:9> zle -N bracketed-paste bracketed-paste-magic
+/root/.oh-my-zsh/lib/misc.zsh:11> autoload -Uz url-quote-magic
+/root/.oh-my-zsh/lib/misc.zsh:12> zle -N self-insert url-quote-magic
+/root/.oh-my-zsh/lib/misc.zsh:13> break
+/root/.oh-my-zsh/lib/misc.zsh:19> setopt long_list_jobs
+/root/.oh-my-zsh/lib/misc.zsh:22> env_default PAGER less
+env_default:1> env
+env_default:1> grep '--color=auto' -q '^PAGER='
+env_default:1> return 0
+/root/.oh-my-zsh/lib/misc.zsh:23> env_default LESS -R
+env_default:1> env
+env_default:1> grep '--color=auto' -q '^LESS='
+env_default:1> return 0
+/root/.oh-my-zsh/lib/misc.zsh:26> alias '_=sudo'
+/root/.oh-my-zsh/lib/misc.zsh:27> alias 'please=sudo'
+/root/.oh-my-zsh/lib/misc.zsh:30> alias
+/root/.oh-my-zsh/lib/misc.zsh:30> declare -f
+/root/.oh-my-zsh/lib/misc.zsh:30> /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot ack-grep
+/root/.oh-my-zsh/lib/misc.zsh:33> alias 'afind=ack -il'
+/root/.oh-my-zsh/lib/misc.zsh:37> [[ -z en_US.UTF-8 ]]
+/root/.oh-my-zsh/lib/misc.zsh:42> setopt interactivecomments
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/nvm.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/nvm.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/nvm.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/nvm.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/prompt_info_functions.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/prompt_info_functions.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/prompt_info_functions.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/prompt_info_functions.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/spectrum.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/spectrum.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/spectrum.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/spectrum.zsh
+/root/.oh-my-zsh/lib/spectrum.zsh:6> typeset -AHg FX FG BG
+/root/.oh-my-zsh/lib/spectrum.zsh:8> FX=( reset $'%{\C-[[00m%}' bold $'%{\C-[[01m%}' no-bold $'%{\C-[[22m%}' italic $'%{\C-[[03m%}' no-italic $'%{\C-[[23m%}' underline $'%{\C-[[04m%}' no-underline $'%{\C-[[24m%}' blink $'%{\C-[[05m%}' no-blink $'%{\C-[[25m%}' reverse $'%{\C-[[07m%}' no-reverse $'%{\C-[[27m%}' ) 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=000
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;000m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;000m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=001
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;001m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;001m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=002
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;002m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;002m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=003
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;003m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;003m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=004
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;004m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;004m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=005
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;005m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;005m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=006
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;006m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;006m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=007
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;007m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;007m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=008
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;008m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;008m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=009
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;009m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;009m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=010
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;010m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;010m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=011
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;011m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;011m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=012
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;012m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;012m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=013
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;013m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;013m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=014
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;014m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;014m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=015
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;015m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;015m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=016
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;016m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;016m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=017
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;017m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;017m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=018
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;018m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;018m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=019
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;019m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;019m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=020
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;020m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;020m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=021
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;021m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;021m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=022
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;022m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;022m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=023
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;023m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;023m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=024
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;024m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;024m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=025
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;025m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;025m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=026
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;026m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;026m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=027
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;027m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;027m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=028
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;028m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;028m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=029
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;029m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;029m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=030
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;030m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;030m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=031
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;031m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;031m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=032
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;032m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;032m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=033
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;033m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;033m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=034
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;034m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;034m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=035
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;035m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;035m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=036
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;036m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;036m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=037
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;037m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;037m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=038
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;038m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;038m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=039
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;039m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;039m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=040
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;040m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;040m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=041
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;041m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;041m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=042
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;042m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;042m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=043
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;043m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;043m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=044
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;044m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;044m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=045
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;045m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;045m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=046
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;046m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;046m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=047
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;047m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;047m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=048
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;048m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;048m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=049
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;049m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;049m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=050
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;050m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;050m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=051
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;051m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;051m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=052
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;052m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;052m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=053
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;053m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;053m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=054
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;054m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;054m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=055
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;055m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;055m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=056
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;056m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;056m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=057
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;057m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;057m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=058
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;058m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;058m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=059
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;059m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;059m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=060
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;060m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;060m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=061
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;061m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;061m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=062
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;062m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;062m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=063
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;063m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;063m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=064
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;064m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;064m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=065
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;065m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;065m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=066
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;066m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;066m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=067
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;067m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;067m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=068
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;068m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;068m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=069
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;069m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;069m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=070
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;070m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;070m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=071
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;071m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;071m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=072
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;072m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;072m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=073
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;073m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;073m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=074
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;074m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;074m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=075
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;075m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;075m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=076
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;076m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;076m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=077
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;077m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;077m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=078
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;078m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;078m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=079
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;079m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;079m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=080
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;080m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;080m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=081
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;081m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;081m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=082
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;082m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;082m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=083
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;083m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;083m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=084
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;084m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;084m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=085
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;085m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;085m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=086
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;086m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;086m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=087
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;087m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;087m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=088
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;088m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;088m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=089
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;089m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;089m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=090
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;090m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;090m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=091
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;091m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;091m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=092
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;092m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;092m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=093
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;093m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;093m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=094
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;094m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;094m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=095
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;095m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;095m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=096
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;096m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;096m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=097
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;097m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;097m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=098
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;098m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;098m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=099
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;099m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;099m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=100
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;100m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;100m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=101
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;101m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;101m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=102
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;102m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;102m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=103
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;103m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;103m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=104
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;104m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;104m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=105
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;105m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;105m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=106
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;106m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;106m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=107
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;107m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;107m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=108
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;108m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;108m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=109
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;109m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;109m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=110
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;110m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;110m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=111
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;111m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;111m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=112
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;112m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;112m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=113
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;113m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;113m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=114
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;114m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;114m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=115
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;115m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;115m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=116
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;116m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;116m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=117
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;117m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;117m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=118
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;118m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;118m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=119
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;119m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;119m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=120
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;120m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;120m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=121
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;121m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;121m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=122
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;122m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;122m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=123
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;123m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;123m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=124
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;124m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;124m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=125
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;125m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;125m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=126
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;126m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;126m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=127
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;127m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;127m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=128
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;128m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;128m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=129
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;129m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;129m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=130
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;130m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;130m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=131
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;131m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;131m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=132
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;132m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;132m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=133
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;133m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;133m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=134
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;134m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;134m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=135
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;135m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;135m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=136
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;136m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;136m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=137
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;137m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;137m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=138
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;138m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;138m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=139
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;139m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;139m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=140
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;140m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;140m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=141
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;141m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;141m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=142
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;142m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;142m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=143
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;143m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;143m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=144
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;144m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;144m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=145
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;145m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;145m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=146
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;146m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;146m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=147
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;147m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;147m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=148
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;148m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;148m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=149
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;149m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;149m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=150
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;150m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;150m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=151
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;151m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;151m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=152
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;152m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;152m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=153
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;153m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;153m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=154
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;154m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;154m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=155
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;155m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;155m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=156
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;156m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;156m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=157
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;157m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;157m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=158
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;158m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;158m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=159
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;159m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;159m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=160
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;160m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;160m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=161
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;161m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;161m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=162
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;162m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;162m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=163
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;163m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;163m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=164
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;164m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;164m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=165
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;165m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;165m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=166
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;166m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;166m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=167
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;167m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;167m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=168
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;168m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;168m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=169
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;169m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;169m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=170
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;170m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;170m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=171
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;171m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;171m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=172
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;172m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;172m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=173
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;173m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;173m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=174
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;174m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;174m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=175
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;175m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;175m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=176
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;176m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;176m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=177
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;177m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;177m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=178
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;178m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;178m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=179
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;179m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;179m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=180
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;180m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;180m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=181
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;181m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;181m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=182
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;182m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;182m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=183
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;183m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;183m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=184
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;184m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;184m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=185
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;185m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;185m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=186
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;186m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;186m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=187
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;187m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;187m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=188
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;188m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;188m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=189
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;189m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;189m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=190
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;190m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;190m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=191
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;191m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;191m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=192
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;192m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;192m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=193
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;193m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;193m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=194
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;194m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;194m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=195
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;195m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;195m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=196
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;196m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;196m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=197
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;197m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;197m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=198
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;198m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;198m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=199
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;199m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;199m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=200
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;200m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;200m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=201
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;201m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;201m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=202
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;202m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;202m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=203
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;203m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;203m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=204
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;204m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;204m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=205
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;205m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;205m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=206
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;206m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;206m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=207
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;207m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;207m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=208
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;208m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;208m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=209
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;209m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;209m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=210
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;210m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;210m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=211
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;211m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;211m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=212
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;212m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;212m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=213
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;213m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;213m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=214
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;214m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;214m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=215
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;215m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;215m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=216
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;216m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;216m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=217
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;217m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;217m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=218
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;218m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;218m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=219
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;219m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;219m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=220
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;220m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;220m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=221
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;221m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;221m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=222
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;222m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;222m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=223
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;223m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;223m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=224
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;224m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;224m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=225
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;225m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;225m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=226
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;226m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;226m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=227
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;227m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;227m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=228
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;228m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;228m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=229
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;229m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;229m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=230
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;230m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;230m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=231
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;231m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;231m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=232
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;232m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;232m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=233
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;233m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;233m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=234
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;234m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;234m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=235
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;235m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;235m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=236
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;236m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;236m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=237
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;237m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;237m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=238
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;238m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;238m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=239
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;239m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;239m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=240
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;240m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;240m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=241
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;241m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;241m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=242
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;242m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;242m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=243
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;243m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;243m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=244
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;244m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;244m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=245
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;245m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;245m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=246
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;246m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;246m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=247
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;247m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;247m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=248
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;248m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;248m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=249
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;249m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;249m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=250
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;250m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;250m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=251
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;251m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;251m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=252
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;252m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;252m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=253
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;253m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;253m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=254
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;254m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;254m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=255
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;255m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;255m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:23> ZSH_SPECTRUM_TEXT='Arma virumque cano Troiae qui primus ab oris' 
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/termsupport.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/termsupport.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/termsupport.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/termsupport.zsh
+/root/.oh-my-zsh/lib/termsupport.zsh:44> ZSH_THEME_TERM_TAB_TITLE_IDLE='%15<..<%~%<<' 
+/root/.oh-my-zsh/lib/termsupport.zsh:45> ZSH_THEME_TERM_TITLE_IDLE='%n@%m: %~' 
+/root/.oh-my-zsh/lib/termsupport.zsh:47> [[ '' == Apple_Terminal ]]
+/root/.oh-my-zsh/lib/termsupport.zsh:78> precmd_functions+=( omz_termsupport_precmd ) 
+/root/.oh-my-zsh/lib/termsupport.zsh:79> preexec_functions+=( omz_termsupport_preexec ) 
+/root/.oh-my-zsh/lib/termsupport.zsh:86> [[ '' == Apple_Terminal ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/theme-and-appearance.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/theme-and-appearance.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/theme-and-appearance.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/theme-and-appearance.zsh
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:2> autoload -U colors
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:2> colors
+colors:4> emulate -L zsh
+colors:6> typeset -Ag color colour
+colors:8> color=( 00 none 01 bold 02 faint 22 normal 03 standout 23 no-standout 04 underline 24 no-underline 05 blink 25 no-blink 07 reverse 27 no-reverse 08 conceal 28 no-conceal 30 black 40 bg-black 31 red 41 bg-red 32 green 42 bg-green 33 yellow 43 bg-yellow 34 blue 44 bg-blue 35 magenta 45 bg-magenta 36 cyan 46 bg-cyan 37 white 47 bg-white 39 default 49 bg-default ) 
+colors:76> local k
+colors:77> k=44
+colors:77> color[${color[$k]}]=44 
+colors:77> k=33
+colors:77> color[${color[$k]}]=33 
+colors:77> k=22
+colors:77> color[${color[$k]}]=22 
+colors:77> k=00
+colors:77> color[${color[$k]}]=00 
+colors:77> k=45
+colors:77> color[${color[$k]}]=45 
+colors:77> k=34
+colors:77> color[${color[$k]}]=34 
+colors:77> k=23
+colors:77> color[${color[$k]}]=23 
+colors:77> k=01
+colors:77> color[${color[$k]}]=01 
+colors:77> k=46
+colors:77> color[${color[$k]}]=46 
+colors:77> k=35
+colors:77> color[${color[$k]}]=35 
+colors:77> k=24
+colors:77> color[${color[$k]}]=24 
+colors:77> k=02
+colors:77> color[${color[$k]}]=02 
+colors:77> k=47
+colors:77> color[${color[$k]}]=47 
+colors:77> k=36
+colors:77> color[${color[$k]}]=36 
+colors:77> k=25
+colors:77> color[${color[$k]}]=25 
+colors:77> k=03
+colors:77> color[${color[$k]}]=03 
+colors:77> k=37
+colors:77> color[${color[$k]}]=37 
+colors:77> k=04
+colors:77> color[${color[$k]}]=04 
+colors:77> k=49
+colors:77> color[${color[$k]}]=49 
+colors:77> k=27
+colors:77> color[${color[$k]}]=27 
+colors:77> k=05
+colors:77> color[${color[$k]}]=05 
+colors:77> k=39
+colors:77> color[${color[$k]}]=39 
+colors:77> k=28
+colors:77> color[${color[$k]}]=28 
+colors:77> k=07
+colors:77> color[${color[$k]}]=07 
+colors:77> k=08
+colors:77> color[${color[$k]}]=08 
+colors:77> k=40
+colors:77> color[${color[$k]}]=40 
+colors:77> k=41
+colors:77> color[${color[$k]}]=41 
+colors:77> k=30
+colors:77> color[${color[$k]}]=30 
+colors:77> k=42
+colors:77> color[${color[$k]}]=42 
+colors:77> k=31
+colors:77> color[${color[$k]}]=31 
+colors:77> k=43
+colors:77> color[${color[$k]}]=43 
+colors:77> k=32
+colors:77> color[${color[$k]}]=32 
+colors:81> k=30
+colors:81> color[fg-${color[$k]}]=30 
+colors:81> k=31
+colors:81> color[fg-${color[$k]}]=31 
+colors:81> k=32
+colors:81> color[fg-${color[$k]}]=32 
+colors:81> k=33
+colors:81> color[fg-${color[$k]}]=33 
+colors:81> k=34
+colors:81> color[fg-${color[$k]}]=34 
+colors:81> k=35
+colors:81> color[fg-${color[$k]}]=35 
+colors:81> k=36
+colors:81> color[fg-${color[$k]}]=36 
+colors:81> k=37
+colors:81> color[fg-${color[$k]}]=37 
+colors:81> k=39
+colors:81> color[fg-${color[$k]}]=39 
+colors:85> color[grey]=30 
+colors:86> color[fg-grey]=30 
+colors:87> color[bg-grey]=40 
+colors:91> colour=( 00 none 22 normal 44 bg-blue fg-red 31 01 bold 23 no-standout 45 bg-magenta 02 faint 24 no-underline 46 bg-cyan 03 standout 25 no-blink 47 bg-white 04 underline yellow 33 bg-red 41 bold 01 05 blink 27 no-reverse 49 bg-default no-reverse 27 28 no-conceal 07 reverse 08 conceal fg-black 30 red 31 conceal 08 default 39 faint 02 fg-green 32 no-underline 24 bg-magenta 45 magenta 35 blink 05 blue 34 grey 30 fg-default 39 bg-white 47 30 black no-standout 23 31 red 32 green bg-yellow 43 33 yellow cyan 36 34 blue 35 magenta white 37 36 cyan standout 03 37 white bg-blue 44 fg-magenta 35 39 default bg-grey 40 no-conceal 28 reverse 07 bg-cyan 46 underline 04 fg-yellow 33 fg-white 37 bg-black 40 normal 22 fg-blue 34 bg-green 42 none 00 fg-grey 30 black 30 no-blink 25 bg-default 49 40 bg-black fg-cyan 36 green 32 41 bg-red 42 bg-green 43 bg-yellow ) 
+colors:95> local lc=$'\C-[[' rc=m
+colors:97> typeset -Hg reset_color bold_color
+colors:98> reset_color=$'\C-[[00m' 
+colors:99> bold_color=$'\C-[[01m' 
+colors:103> typeset -AHg fg fg_bold fg_no_bold
+colors:104> k=fg-red
+colors:105> fg[${k#fg-}]=$'\C-[[31m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;31m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;31m' 
+colors:104> k=fg-black
+colors:105> fg[${k#fg-}]=$'\C-[[30m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;30m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;30m' 
+colors:104> k=fg-green
+colors:105> fg[${k#fg-}]=$'\C-[[32m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;32m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;32m' 
+colors:104> k=fg-default
+colors:105> fg[${k#fg-}]=$'\C-[[39m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;39m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;39m' 
+colors:104> k=fg-magenta
+colors:105> fg[${k#fg-}]=$'\C-[[35m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;35m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;35m' 
+colors:104> k=fg-yellow
+colors:105> fg[${k#fg-}]=$'\C-[[33m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;33m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;33m' 
+colors:104> k=fg-white
+colors:105> fg[${k#fg-}]=$'\C-[[37m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;37m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;37m' 
+colors:104> k=fg-blue
+colors:105> fg[${k#fg-}]=$'\C-[[34m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;34m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;34m' 
+colors:104> k=fg-grey
+colors:105> fg[${k#fg-}]=$'\C-[[30m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;30m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;30m' 
+colors:104> k=fg-cyan
+colors:105> fg[${k#fg-}]=$'\C-[[36m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;36m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;36m' 
+colors:112> typeset -AHg bg bg_bold bg_no_bold
+colors:113> k=bg-red
+colors:114> bg[${k#bg-}]=$'\C-[[41m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;41m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;41m' 
+colors:113> k=bg-magenta
+colors:114> bg[${k#bg-}]=$'\C-[[45m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;45m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;45m' 
+colors:113> k=bg-white
+colors:114> bg[${k#bg-}]=$'\C-[[47m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;47m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;47m' 
+colors:113> k=bg-yellow
+colors:114> bg[${k#bg-}]=$'\C-[[43m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;43m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;43m' 
+colors:113> k=bg-blue
+colors:114> bg[${k#bg-}]=$'\C-[[44m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;44m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;44m' 
+colors:113> k=bg-grey
+colors:114> bg[${k#bg-}]=$'\C-[[40m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;40m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;40m' 
+colors:113> k=bg-cyan
+colors:114> bg[${k#bg-}]=$'\C-[[46m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;46m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;46m' 
+colors:113> k=bg-black
+colors:114> bg[${k#bg-}]=$'\C-[[40m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;40m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;40m' 
+colors:113> k=bg-green
+colors:114> bg[${k#bg-}]=$'\C-[[42m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;42m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;42m' 
+colors:113> k=bg-default
+colors:114> bg[${k#bg-}]=$'\C-[[49m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;49m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;49m' 
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:5> export LSCOLORS=Gxfxcxdxbxegedabagacad
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:9> [[ '' != true ]]
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:11> [[ linux-gnu == netbsd* ]]
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:15> [[ linux-gnu == openbsd* ]]
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:22> [[ linux-gnu == darwin* ]]
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:31> [[ -z 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:' ]]
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:35> ls '--color=auto' --color -d .
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:35> alias 'ls=ls --color=tty'
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:38> zstyle ':completion:*' list-colors 'rs=0' 'di=01;34' 'ln=01;36' 'mh=00' 'pi=40;33' 'so=01;35' 'do=01;35' 'bd=40;33;01' 'cd=40;33;01' 'or=40;31;01' 'mi=01;05;37;41' 'su=37;41' 'sg=30;43' 'ca=30;41' 'tw=30;42' 'ow=34;42' 'st=37;44' 'ex=01;32' '*.tar=01;31' '*.tgz=01;31' '*.arc=01;31' '*.arj=01;31' '*.taz=01;31' '*.lha=01;31' '*.lz4=01;31' '*.lzh=01;31' '*.lzma=01;31' '*.tlz=01;31' '*.txz=01;31' '*.tzo=01;31' '*.t7z=01;31' '*.zip=01;31' '*.z=01;31' '*.Z=01;31' '*.dz=01;31' '*.gz=01;31' '*.lrz=01;31' '*.lz=01;31' '*.lzo=01;31' '*.xz=01;31' '*.zst=01;31' '*.tzst=01;31' '*.bz2=01;31' '*.bz=01;31' '*.tbz=01;31' '*.tbz2=01;31' '*.tz=01;31' '*.deb=01;31' '*.rpm=01;31' '*.jar=01;31' '*.war=01;31' '*.ear=01;31' '*.sar=01;31' '*.rar=01;31' '*.alz=01;31' '*.ace=01;31' '*.zoo=01;31' '*.cpio=01;31' '*.7z=01;31' '*.rz=01;31' '*.cab=01;31' '*.wim=01;31' '*.swm=01;31' '*.dwm=01;31' '*.esd=01;31' '*.jpg=01;35' '*.jpeg=01;35' '*.mjpg=01;35' '*.mjpeg=01;35' '*.gif=01;35' '*.bmp=01;35' '*.pbm=01;35' '*.pgm=01;35' '*.ppm=01;35' '*.tga=01;35' '*.xbm=01;35' '*.xpm=01;35' '*.tif=01;35' '*.tiff=01;35' '*.png=01;35' '*.svg=01;35' '*.svgz=01;35' '*.mng=01;35' '*.pcx=01;35' '*.mov=01;35' '*.mpg=01;35' '*.mpeg=01;35' '*.m2v=01;35' '*.mkv=01;35' '*.webm=01;35' '*.ogm=01;35' '*.mp4=01;35' '*.m4v=01;35' '*.mp4v=01;35' '*.vob=01;35' '*.qt=01;35' '*.nuv=01;35' '*.wmv=01;35' '*.asf=01;35' '*.rm=01;35' '*.rmvb=01;35' '*.flc=01;35' '*.avi=01;35' '*.fli=01;35' '*.flv=01;35' '*.gl=01;35' '*.dl=01;35' '*.xcf=01;35' '*.xwd=01;35' '*.yuv=01;35' '*.cgm=01;35' '*.emf=01;35' '*.ogv=01;35' '*.ogx=01;35' '*.aac=01;36' '*.au=01;36' '*.flac=01;36' '*.m4a=01;36' '*.mid=01;36' '*.midi=01;36' '*.mka=01;36' '*.mp3=01;36' '*.mpc=01;36' '*.ogg=01;36' '*.ra=01;36' '*.wav=01;36' '*.oga=01;36' '*.opus=01;36' '*.spx=01;36' '*.xspf=01;36' ''
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:42> setopt auto_cd
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:43> setopt multios
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:44> setopt prompt_subst
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:46> [[ -n '' ]]
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:46> SCREEN_NO='' 
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:49> PS1='%n@%m:%~%# ' 
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:52> ZSH_THEME_GIT_PROMPT_PREFIX='git:(' 
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:53> ZSH_THEME_GIT_PROMPT_SUFFIX=')' 
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:54> ZSH_THEME_GIT_PROMPT_DIRTY='*' 
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:55> ZSH_THEME_GIT_PROMPT_CLEAN='' 
+/root/.oh-my-zsh/oh-my-zsh.sh:46> plugin=git
+/root/.oh-my-zsh/oh-my-zsh.sh:47> is_plugin /root/.oh-my-zsh/custom git
+is_plugin:1> local base_dir=/root/.oh-my-zsh/custom
+is_plugin:2> local name=git
+is_plugin:3> test -f /root/.oh-my-zsh/custom/plugins/git/git.plugin.zsh
+is_plugin:4> test -f /root/.oh-my-zsh/custom/plugins/git/_git
+/root/.oh-my-zsh/oh-my-zsh.sh:49> is_plugin /root/.oh-my-zsh git
+is_plugin:1> local base_dir=/root/.oh-my-zsh
+is_plugin:2> local name=git
+is_plugin:3> test -f /root/.oh-my-zsh/plugins/git/git.plugin.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:50> fpath=( /root/.oh-my-zsh/plugins/git /root/.oh-my-zsh/functions /root/.oh-my-zsh/completions /usr/local/share/zsh/site-functions /usr/share/zsh/site-functions /usr/share/zsh/5.4.1/functions ) 
+/root/.oh-my-zsh/oh-my-zsh.sh:55> [[ linux-gnu = darwin* ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:59> SHORT_HOST=localhost 
+/root/.oh-my-zsh/oh-my-zsh.sh:63> [ -z '' ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:64> ZSH_COMPDUMP=/root/.zcompdump-localhost-5.4.1 
+/root/.oh-my-zsh/oh-my-zsh.sh:67> [[ true != true ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:77> compinit -i -d /root/.zcompdump-localhost-5.4.1
+compinit:70> emulate -L zsh
+compinit:71> setopt extendedglob
+compinit:73> typeset _i_dumpfile _i_files _i_line _i_done _i_dir _i_autodump=1
+compinit:74> typeset _i_tag _i_file _i_addfiles _i_fail=ask _i_check=yes _i_name
+compinit:76> [[ 3 -gt 0 && -i = -[dDiuC] ]]
+compinit:77> case -i (-d)
+compinit:77> case -i (-D)
+compinit:77> case -i (-i)
+compinit:91> _i_fail=ign 
+compinit:92> shift
+compinit:76> [[ 2 -gt 0 && -d = -[dDiuC] ]]
+compinit:77> case -d (-d)
+compinit:79> _i_autodump=1 
+compinit:80> shift
+compinit:81> [[ 1 -gt 0 && /root/.zcompdump-localhost-5.4.1 != -[dfQC] ]]
+compinit:82> _i_dumpfile=/root/.zcompdump-localhost-5.4.1 
+compinit:83> shift
+compinit:76> [[ 0 -gt 0 ]]
+compinit:108> typeset -gHA _comps _services _patcomps _postpatcomps
+compinit:113> typeset -gHA _compautos
+compinit:118> typeset -gHA _lastcomp
+compinit:121> [[ -n /root/.zcompdump-localhost-5.4.1 ]]
+compinit:123> typeset -g _comp_dumpfile=/root/.zcompdump-localhost-5.4.1
+compinit:130> typeset -gHa _comp_options
+compinit:131> _comp_options=( bareglobqual extendedglob glob multibyte multifuncdef nullglob rcexpandparam unset NO_allexport NO_aliases NO_cshnullglob NO_cshjunkiequotes NO_errexit NO_errreturn NO_globassign NO_globsubst NO_histsubstpattern NO_ignorebraces NO_ignoreclosebraces NO_kshglob NO_ksharrays NO_kshtypeset NO_markdirs NO_octalzeroes NO_posixbuiltins NO_posixidentifiers NO_shwordsplit NO_shglob NO_warnnestedvar NO_warncreateglobal ) 
+compinit:170> typeset -gH _comp_setup=$'local -A _comp_caller_options;\n             _comp_caller_options=(${(kv)options[@]});\n             setopt localoptions localtraps localpatterns ${_comp_options[@]};\n             local IFS=$\' \\t\\r\\n\\0\';\n             builtin enable -p \\| \\~ \\( \\? \\* \\[ \\< \\^ \\# 2>&-;\n             exec </dev/null;\n             trap - ZERR;\n             local -a reply;\n             local REPLY'
+compinit:183> typeset -ga compprefuncs comppostfuncs
+compinit:184> compprefuncs=( ) 
+compinit:185> comppostfuncs=( ) 
+compinit:189> : compinit /root/.oh-my-zsh/oh-my-zsh.sh /root/.zshrc
+compinit:438> typeset _i_wdirs _i_wfiles
+compinit:440> _i_wdirs=( ) 
+compinit:441> _i_wfiles=( ) 
+compinit:443> autoload -Uz compaudit
+compinit:444> [[ -n yes ]]
+compinit:445> typeset _i_q
+compinit:446> eval compaudit
+(eval):1> compaudit
+compaudit:176> compaudit
+compaudit:13> emulate -L zsh
+compaudit:14> setopt extendedglob
+compaudit:16> [[ -n /usr/bin/getent ]]
+compaudit:27> ((  0  ))
+compaudit:29> ((  6 == 0  ))
+compaudit:33> set -- /root/.oh-my-zsh/plugins/git /root/.oh-my-zsh/functions /root/.oh-my-zsh/completions /usr/local/share/zsh/site-functions /usr/share/zsh/site-functions /usr/share/zsh/5.4.1/functions
+compaudit:40> ((  1  ))
+compaudit:46> fpath=( /root/.oh-my-zsh/plugins/git /root/.oh-my-zsh/functions /root/.oh-my-zsh/completions /usr/local/share/zsh/site-functions /usr/share/zsh/site-functions /usr/share/zsh/5.4.1/functions ) 
+compaudit:51> ((  0  ))
+compaudit:52> local _compdir=/usr/share/zsh/5.4.1/functions
+compaudit:53> [[ -z /usr/share/zsh/5.4.1/functions ]]
+compaudit:57> _i_wdirs=( ) 
+compaudit:58> _i_wfiles=( ) 
+compaudit:60> _i_files=( /usr/share/zsh/site-functions/_bootctl /usr/share/zsh/site-functions/_busctl /usr/share/zsh/site-functions/_coredumpctl /usr/share/zsh/site-functions/_curl /usr/share/zsh/site-functions/_hostnamectl /usr/share/zsh/site-functions/_journalctl /usr/share/zsh/site-functions/_kernel-install /usr/share/zsh/site-functions/_localectl /usr/share/zsh/site-functions/_loginctl /usr/share/zsh/site-functions/_machinectl /usr/share/zsh/site-functions/_networkctl /usr/share/zsh/site-functions/_pulseaudio /usr/share/zsh/site-functions/_sd_hosts_or_user_at_host /usr/share/zsh/site-functions/_sd_machines /usr/share/zsh/site-functions/_sd_outputmodes /usr/share/zsh/site-functions/_sd_unit_files /usr/share/zsh/site-functions/_systemctl /usr/share/zsh/site-functions/_systemd /usr/share/zsh/site-functions/_systemd-analyze /usr/share/zsh/site-functions/_systemd-delta /usr/share/zsh/site-functions/_systemd-inhibit /usr/share/zsh/site-functions/_systemd-nspawn /usr/share/zsh/site-functions/_systemd-resolve /usr/share/zsh/site-functions/_systemd-run /usr/share/zsh/site-functions/_systemd-tmpfiles /usr/share/zsh/site-functions/_the_silver_searcher /usr/share/zsh/site-functions/_timedatectl /usr/share/zsh/site-functions/_udevadm /usr/share/zsh/5.4.1/functions/_a2ps /usr/share/zsh/5.4.1/functions/_a2utils /usr/share/zsh/5.4.1/functions/_aap /usr/share/zsh/5.4.1/functions/_absolute_command_paths /usr/share/zsh/5.4.1/functions/_acpi /usr/share/zsh/5.4.1/functions/_acpitool /usr/share/zsh/5.4.1/functions/_acroread /usr/share/zsh/5.4.1/functions/_adb /usr/share/zsh/5.4.1/functions/_add-zle-hook-widget /usr/share/zsh/5.4.1/functions/_add-zsh-hook /usr/share/zsh/5.4.1/functions/_alias /usr/share/zsh/5.4.1/functions/_aliases /usr/share/zsh/5.4.1/functions/_all_labels /usr/share/zsh/5.4.1/functions/_all_matches /usr/share/zsh/5.4.1/functions/_alternative /usr/share/zsh/5.4.1/functions/_analyseplugin /usr/share/zsh/5.4.1/functions/_ant /usr/share/zsh/5.4.1/functions/_antiword /usr/share/zsh/5.4.1/functions/_apachectl /usr/share/zsh/5.4.1/functions/_apm /usr/share/zsh/5.4.1/functions/_approximate /usr/share/zsh/5.4.1/functions/_apt /usr/share/zsh/5.4.1/functions/_apt-file /usr/share/zsh/5.4.1/functions/_aptitude /usr/share/zsh/5.4.1/functions/_apt-move /usr/share/zsh/5.4.1/functions/_apt-show-versions /usr/share/zsh/5.4.1/functions/_arch_archives /usr/share/zsh/5.4.1/functions/_arch_namespace /usr/share/zsh/5.4.1/functions/_arg_compile /usr/share/zsh/5.4.1/functions/_arguments /usr/share/zsh/5.4.1/functions/_arp /usr/share/zsh/5.4.1/functions/_arping /usr/share/zsh/5.4.1/functions/_arrays /usr/share/zsh/5.4.1/functions/_assign /usr/share/zsh/5.4.1/functions/_at /usr/share/zsh/5.4.1/functions/_attr /usr/share/zsh/5.4.1/functions/_augeas /usr/share/zsh/5.4.1/functions/_auto-apt /usr/share/zsh/5.4.1/functions/_autocd /usr/share/zsh/5.4.1/functions/_awk /usr/share/zsh/5.4.1/functions/_axi-cache /usr/share/zsh/5.4.1/functions/_basename /usr/share/zsh/5.4.1/functions/_bash_completions /usr/share/zsh/5.4.1/functions/_baudrates /usr/share/zsh/5.4.1/functions/_baz /usr/share/zsh/5.4.1/functions/_beadm /usr/share/zsh/5.4.1/functions/_beep /usr/share/zsh/5.4.1/functions/_be_name /usr/share/zsh/5.4.1/functions/_bibtex /usr/share/zsh/5.4.1/functions/_bind_addresses /usr/share/zsh/5.4.1/functions/_bindkey /usr/share/zsh/5.4.1/functions/_bison /usr/share/zsh/5.4.1/functions/_bittorrent /usr/share/zsh/5.4.1/functions/_bogofilter /usr/share/zsh/5.4.1/functions/_bpython /usr/share/zsh/5.4.1/functions/_brace_parameter /usr/share/zsh/5.4.1/functions/_brctl /usr/share/zsh/5.4.1/functions/_bsdconfig /usr/share/zsh/5.4.1/functions/_bsdinstall /usr/share/zsh/5.4.1/functions/_bsd_pkg /usr/share/zsh/5.4.1/functions/_btrfs /usr/share/zsh/5.4.1/functions/_bts /usr/share/zsh/5.4.1/functions/_bug /usr/share/zsh/5.4.1/functions/_builtin /usr/share/zsh/5.4.1/functions/_bzip2 /usr/share/zsh/5.4.1/functions/_bzr /usr/share/zsh/5.4.1/functions/_cabal /usr/share/zsh/5.4.1/functions/_cache_invalid /usr/share/zsh/5.4.1/functions/_cal /usr/share/zsh/5.4.1/functions/_calendar /usr/share/zsh/5.4.1/functions/_call_function /usr/share/zsh/5.4.1/functions/_call_program /usr/share/zsh/5.4.1/functions/_canonical_paths /usr/share/zsh/5.4.1/functions/_cat /usr/share/zsh/5.4.1/functions/_ccal /usr/share/zsh/5.4.1/functions/_cd /usr/share/zsh/5.4.1/functions/_cdbs-edit-patch /usr/share/zsh/5.4.1/functions/_cdcd /usr/share/zsh/5.4.1/functions/_cdr /usr/share/zsh/5.4.1/functions/_cdrdao /usr/share/zsh/5.4.1/functions/_cdrecord /usr/share/zsh/5.4.1/functions/_chflags /usr/share/zsh/5.4.1/functions/_chkconfig /usr/share/zsh/5.4.1/functions/_chmod /usr/share/zsh/5.4.1/functions/_chown /usr/share/zsh/5.4.1/functions/_chrt /usr/share/zsh/5.4.1/functions/_chsh /usr/share/zsh/5.4.1/functions/_clay /usr/share/zsh/5.4.1/functions/_cmdambivalent /usr/share/zsh/5.4.1/functions/_cmdstring /usr/share/zsh/5.4.1/functions/_cmp /usr/share/zsh/5.4.1/functions/_combination /usr/share/zsh/5.4.1/functions/_comm /usr/share/zsh/5.4.1/functions/_command /usr/share/zsh/5.4.1/functions/_command_names /usr/share/zsh/5.4.1/functions/_compadd /usr/share/zsh/5.4.1/functions/_compdef /usr/share/zsh/5.4.1/functions/_complete /usr/share/zsh/5.4.1/functions/_complete_debug /usr/share/zsh/5.4.1/functions/_complete_help /usr/share/zsh/5.4.1/functions/_complete_help_generic /usr/share/zsh/5.4.1/functions/_completers /usr/share/zsh/5.4.1/functions/_complete_tag /usr/share/zsh/5.4.1/functions/_comp_locale /usr/share/zsh/5.4.1/functions/_compress /usr/share/zsh/5.4.1/functions/_condition /usr/share/zsh/5.4.1/functions/_configure /usr/share/zsh/5.4.1/functions/_coreadm /usr/share/zsh/5.4.1/functions/_correct /usr/share/zsh/5.4.1/functions/_correct_filename /usr/share/zsh/5.4.1/functions/_correct_word /usr/share/zsh/5.4.1/functions/_cowsay /usr/share/zsh/5.4.1/functions/_cp /usr/share/zsh/5.4.1/functions/_cpio /usr/share/zsh/5.4.1/functions/_cplay /usr/share/zsh/5.4.1/functions/_cpupower /usr/share/zsh/5.4.1/functions/_cryptsetup /usr/share/zsh/5.4.1/functions/_cscope /usr/share/zsh/5.4.1/functions/_cssh /usr/share/zsh/5.4.1/functions/_csup /usr/share/zsh/5.4.1/functions/_ctags_tags /usr/share/zsh/5.4.1/functions/_cu /usr/share/zsh/5.4.1/functions/_curl /usr/share/zsh/5.4.1/functions/_cut /usr/share/zsh/5.4.1/functions/_cvs /usr/share/zsh/5.4.1/functions/_cvsup /usr/share/zsh/5.4.1/functions/_cygcheck /usr/share/zsh/5.4.1/functions/_cygpath /usr/share/zsh/5.4.1/functions/_cygrunsrv /usr/share/zsh/5.4.1/functions/_cygserver /usr/share/zsh/5.4.1/functions/_cygstart /usr/share/zsh/5.4.1/functions/_dak /usr/share/zsh/5.4.1/functions/_darcs /usr/share/zsh/5.4.1/functions/_date /usr/share/zsh/5.4.1/functions/_date_formats /usr/share/zsh/5.4.1/functions/_dates /usr/share/zsh/5.4.1/functions/_dbus /usr/share/zsh/5.4.1/functions/_dchroot /usr/share/zsh/5.4.1/functions/_dchroot-dsa /usr/share/zsh/5.4.1/functions/_dcop /usr/share/zsh/5.4.1/functions/_dcut /usr/share/zsh/5.4.1/functions/_dd /usr/share/zsh/5.4.1/functions/_deb_architectures /usr/share/zsh/5.4.1/functions/_debbugs_bugnumber /usr/share/zsh/5.4.1/functions/_debchange /usr/share/zsh/5.4.1/functions/_debcheckout /usr/share/zsh/5.4.1/functions/_deb_codenames /usr/share/zsh/5.4.1/functions/_debdiff /usr/share/zsh/5.4.1/functions/_debfoster /usr/share/zsh/5.4.1/functions/_deb_packages /usr/share/zsh/5.4.1/functions/_debsign /usr/share/zsh/5.4.1/functions/_default /usr/share/zsh/5.4.1/functions/_defaults /usr/share/zsh/5.4.1/functions/_delimiters /usr/share/zsh/5.4.1/functions/_describe /usr/share/zsh/5.4.1/functions/_description /usr/share/zsh/5.4.1/functions/_devtodo /usr/share/zsh/5.4.1/functions/_df /usr/share/zsh/5.4.1/functions/_dhclient /usr/share/zsh/5.4.1/functions/_dhcpinfo /usr/share/zsh/5.4.1/functions/_dict /usr/share/zsh/5.4.1/functions/_dict_words /usr/share/zsh/5.4.1/functions/_diff /usr/share/zsh/5.4.1/functions/_diff_options /usr/share/zsh/5.4.1/functions/_diffstat /usr/share/zsh/5.4.1/functions/_dig /usr/share/zsh/5.4.1/functions/_directories /usr/share/zsh/5.4.1/functions/_directory_stack /usr/share/zsh/5.4.1/functions/_dir_list /usr/share/zsh/5.4.1/functions/_dirs /usr/share/zsh/5.4.1/functions/_disable /usr/share/zsh/5.4.1/functions/_dispatch /usr/share/zsh/5.4.1/functions/_django /usr/share/zsh/5.4.1/functions/_dladm /usr/share/zsh/5.4.1/functions/_dlocate /usr/share/zsh/5.4.1/functions/_dmesg /usr/share/zsh/5.4.1/functions/_dmidecode /usr/share/zsh/5.4.1/functions/_dnf /usr/share/zsh/5.4.1/functions/_doas /usr/share/zsh/5.4.1/functions/_domains /usr/share/zsh/5.4.1/functions/_dpatch-edit-patch /usr/share/zsh/5.4.1/functions/_dpkg /usr/share/zsh/5.4.1/functions/_dpkg-buildpackage /usr/share/zsh/5.4.1/functions/_dpkg-cross /usr/share/zsh/5.4.1/functions/_dpkg-repack /usr/share/zsh/5.4.1/functions/_dpkg_source /usr/share/zsh/5.4.1/functions/_dput /usr/share/zsh/5.4.1/functions/_dsh /usr/share/zsh/5.4.1/functions/_dtrace /usr/share/zsh/5.4.1/functions/_du /usr/share/zsh/5.4.1/functions/_dumpadm /usr/share/zsh/5.4.1/functions/_dumper /usr/share/zsh/5.4.1/functions/_dupload /usr/share/zsh/5.4.1/functions/_dvi /usr/share/zsh/5.4.1/functions/_dynamic_directory_name /usr/share/zsh/5.4.1/functions/_ecasound /usr/share/zsh/5.4.1/functions/_echotc /usr/share/zsh/5.4.1/functions/_echoti /usr/share/zsh/5.4.1/functions/_elfdump /usr/share/zsh/5.4.1/functions/_elinks /usr/share/zsh/5.4.1/functions/_elm /usr/share/zsh/5.4.1/functions/_email_addresses /usr/share/zsh/5.4.1/functions/_emulate /usr/share/zsh/5.4.1/functions/_enable /usr/share/zsh/5.4.1/functions/_enscript /usr/share/zsh/5.4.1/functions/_entr /usr/share/zsh/5.4.1/functions/_env /usr/share/zsh/5.4.1/functions/_equal /usr/share/zsh/5.4.1/functions/_espeak /usr/share/zsh/5.4.1/functions/_etags /usr/share/zsh/5.4.1/functions/_ethtool /usr/share/zsh/5.4.1/functions/_evince /usr/share/zsh/5.4.1/functions/_expand /usr/share/zsh/5.4.1/functions/_expand_alias /usr/share/zsh/5.4.1/functions/_expand_word /usr/share/zsh/5.4.1/functions/_extensions /usr/share/zsh/5.4.1/functions/_external_pwds /usr/share/zsh/5.4.1/functions/_fakeroot /usr/share/zsh/5.4.1/functions/_fc /usr/share/zsh/5.4.1/functions/_feh /usr/share/zsh/5.4.1/functions/_fetch /usr/share/zsh/5.4.1/functions/_fetchmail /usr/share/zsh/5.4.1/functions/_ffmpeg /usr/share/zsh/5.4.1/functions/_figlet /usr/share/zsh/5.4.1/functions/_file_descriptors /usr/share/zsh/5.4.1/functions/_files /usr/share/zsh/5.4.1/functions/_file_systems /usr/share/zsh/5.4.1/functions/_find /usr/share/zsh/5.4.1/functions/_find_net_interfaces /usr/share/zsh/5.4.1/functions/_finger /usr/share/zsh/5.4.1/functions/_fink /usr/share/zsh/5.4.1/functions/_first /usr/share/zsh/5.4.1/functions/_flasher /usr/share/zsh/5.4.1/functions/_flex /usr/share/zsh/5.4.1/functions/_floppy /usr/share/zsh/5.4.1/functions/_flowadm /usr/share/zsh/5.4.1/functions/_fmadm /usr/share/zsh/5.4.1/functions/_fmt /usr/share/zsh/5.4.1/functions/_fortune /usr/share/zsh/5.4.1/functions/_freebsd-update /usr/share/zsh/5.4.1/functions/_fsh /usr/share/zsh/5.4.1/functions/_fstat /usr/share/zsh/5.4.1/functions/_functions /usr/share/zsh/5.4.1/functions/_fuse_arguments /usr/share/zsh/5.4.1/functions/_fuser /usr/share/zsh/5.4.1/functions/_fusermount /usr/share/zsh/5.4.1/functions/_fuse_values /usr/share/zsh/5.4.1/functions/_fw_update /usr/share/zsh/5.4.1/functions/_gcc /usr/share/zsh/5.4.1/functions/_gcore /usr/share/zsh/5.4.1/functions/_gdb /usr/share/zsh/5.4.1/functions/_generic /usr/share/zsh/5.4.1/functions/_genisoimage /usr/share/zsh/5.4.1/functions/_getclip /usr/share/zsh/5.4.1/functions/_getconf /usr/share/zsh/5.4.1/functions/_getent /usr/share/zsh/5.4.1/functions/_getfacl /usr/share/zsh/5.4.1/functions/_getmail /usr/share/zsh/5.4.1/functions/_git /usr/share/zsh/5.4.1/functions/_git-buildpackage /usr/share/zsh/5.4.1/functions/_global /usr/share/zsh/5.4.1/functions/_global_tags /usr/share/zsh/5.4.1/functions/_globflags /usr/share/zsh/5.4.1/functions/_globqual_delims /usr/share/zsh/5.4.1/functions/_globquals /usr/share/zsh/5.4.1/functions/_gnome-gv /usr/share/zsh/5.4.1/functions/_gnu_generic /usr/share/zsh/5.4.1/functions/_gnupod /usr/share/zsh/5.4.1/functions/_gnutls /usr/share/zsh/5.4.1/functions/_go /usr/share/zsh/5.4.1/functions/_gpasswd /usr/share/zsh/5.4.1/functions/_gpg /usr/share/zsh/5.4.1/functions/_gphoto2 /usr/share/zsh/5.4.1/functions/_gprof /usr/share/zsh/5.4.1/functions/_gqview /usr/share/zsh/5.4.1/functions/_gradle /usr/share/zsh/5.4.1/functions/_graphicsmagick /usr/share/zsh/5.4.1/functions/_grep /usr/share/zsh/5.4.1/functions/_grep-excuses /usr/share/zsh/5.4.1/functions/_groff /usr/share/zsh/5.4.1/functions/_groups /usr/share/zsh/5.4.1/functions/_growisofs /usr/share/zsh/5.4.1/functions/_gs /usr/share/zsh/5.4.1/functions/_gsettings /usr/share/zsh/5.4.1/functions/_gstat /usr/share/zsh/5.4.1/functions/_guard /usr/share/zsh/5.4.1/functions/_guilt /usr/share/zsh/5.4.1/functions/_gv /usr/share/zsh/5.4.1/functions/_gzip /usr/share/zsh/5.4.1/functions/_hash /usr/share/zsh/5.4.1/functions/_have_glob_qual /usr/share/zsh/5.4.1/functions/_hdiutil /usr/share/zsh/5.4.1/functions/_head /usr/share/zsh/5.4.1/functions/_hg /usr/share/zsh/5.4.1/functions/_history /usr/share/zsh/5.4.1/functions/_history_complete_word /usr/share/zsh/5.4.1/functions/_history_modifiers /usr/share/zsh/5.4.1/functions/_hosts /usr/share/zsh/5.4.1/functions/_htop /usr/share/zsh/5.4.1/functions/_hwinfo /usr/share/zsh/5.4.1/functions/_iconv /usr/share/zsh/5.4.1/functions/_iconvconfig /usr/share/zsh/5.4.1/functions/_id /usr/share/zsh/5.4.1/functions/_ifconfig /usr/share/zsh/5.4.1/functions/_iftop /usr/share/zsh/5.4.1/functions/_ignored /usr/share/zsh/5.4.1/functions/_imagemagick /usr/share/zsh/5.4.1/functions/_inetadm /usr/share/zsh/5.4.1/functions/_initctl /usr/share/zsh/5.4.1/functions/_init_d /usr/share/zsh/5.4.1/functions/_in_vared /usr/share/zsh/5.4.1/functions/_invoke-rc.d /usr/share/zsh/5.4.1/functions/_ionice /usr/share/zsh/5.4.1/functions/_iostat /usr/share/zsh/5.4.1/functions/_ip /usr/share/zsh/5.4.1/functions/_ipadm /usr/share/zsh/5.4.1/functions/_ipset /usr/share/zsh/5.4.1/functions/_iptables /usr/share/zsh/5.4.1/functions/_irssi /usr/share/zsh/5.4.1/functions/_ispell /usr/share/zsh/5.4.1/functions/_iwconfig /usr/share/zsh/5.4.1/functions/_jails /usr/share/zsh/5.4.1/functions/_java /usr/share/zsh/5.4.1/functions/_java_class /usr/share/zsh/5.4.1/functions/_jexec /usr/share/zsh/5.4.1/functions/_jls /usr/share/zsh/5.4.1/functions/_jobs /usr/share/zsh/5.4.1/functions/_jobs_bg /usr/share/zsh/5.4.1/functions/_jobs_builtin /usr/share/zsh/5.4.1/functions/_jobs_fg /usr/share/zsh/5.4.1/functions/_joe /usr/share/zsh/5.4.1/functions/_join /usr/share/zsh/5.4.1/functions/_jot /usr/share/zsh/5.4.1/functions/_kfmclient /usr/share/zsh/5.4.1/functions/_kill /usr/share/zsh/5.4.1/functions/_killall /usr/share/zsh/5.4.1/functions/_kld /usr/share/zsh/5.4.1/functions/_knock /usr/share/zsh/5.4.1/functions/_kpartx /usr/share/zsh/5.4.1/functions/_kvno /usr/share/zsh/5.4.1/functions/_last /usr/share/zsh/5.4.1/functions/_ldd /usr/share/zsh/5.4.1/functions/_ld_debug /usr/share/zsh/5.4.1/functions/_less /usr/share/zsh/5.4.1/functions/_lha /usr/share/zsh/5.4.1/functions/_libvirt /usr/share/zsh/5.4.1/functions/_lighttpd /usr/share/zsh/5.4.1/functions/_limit /usr/share/zsh/5.4.1/functions/_limits /usr/share/zsh/5.4.1/functions/_links /usr/share/zsh/5.4.1/functions/_lintian /usr/share/zsh/5.4.1/functions/_list /usr/share/zsh/5.4.1/functions/_list_files /usr/share/zsh/5.4.1/functions/_lldb /usr/share/zsh/5.4.1/functions/_ln /usr/share/zsh/5.4.1/functions/_loadkeys /usr/share/zsh/5.4.1/functions/_locale /usr/share/zsh/5.4.1/functions/_localedef /usr/share/zsh/5.4.1/functions/_locales /usr/share/zsh/5.4.1/functions/_locate /usr/share/zsh/5.4.1/functions/_logical_volumes /usr/share/zsh/5.4.1/functions/_look /usr/share/zsh/5.4.1/functions/_losetup /usr/share/zsh/5.4.1/functions/_lp /usr/share/zsh/5.4.1/functions/_ls /usr/share/zsh/5.4.1/functions/_lsblk /usr/share/zsh/5.4.1/functions/_lscfg /usr/share/zsh/5.4.1/functions/_lsdev /usr/share/zsh/5.4.1/functions/_lslv /usr/share/zsh/5.4.1/functions/_lsof /usr/share/zsh/5.4.1/functions/_lspv /usr/share/zsh/5.4.1/functions/_lsusb /usr/share/zsh/5.4.1/functions/_lsvg /usr/share/zsh/5.4.1/functions/_ltrace /usr/share/zsh/5.4.1/functions/_lynx /usr/share/zsh/5.4.1/functions/_lzop /usr/share/zsh/5.4.1/functions/_mac_applications /usr/share/zsh/5.4.1/functions/_mac_files_for_application /usr/share/zsh/5.4.1/functions/_madison /usr/share/zsh/5.4.1/functions/_mail /usr/share/zsh/5.4.1/functions/_mailboxes /usr/share/zsh/5.4.1/functions/_main_complete /usr/share/zsh/5.4.1/functions/_make /usr/share/zsh/5.4.1/functions/_make-kpkg /usr/share/zsh/5.4.1/functions/_man /usr/share/zsh/5.4.1/functions/_match /usr/share/zsh/5.4.1/functions/_math /usr/share/zsh/5.4.1/functions/_math_params /usr/share/zsh/5.4.1/functions/_matlab /usr/share/zsh/5.4.1/functions/_md5sum /usr/share/zsh/5.4.1/functions/_mdadm /usr/share/zsh/5.4.1/functions/_members /usr/share/zsh/5.4.1/functions/_mencal /usr/share/zsh/5.4.1/functions/_menu /usr/share/zsh/5.4.1/functions/_mere /usr/share/zsh/5.4.1/functions/_mergechanges /usr/share/zsh/5.4.1/functions/_message /usr/share/zsh/5.4.1/functions/_metaflac /usr/share/zsh/5.4.1/functions/_mh /usr/share/zsh/5.4.1/functions/_mii-tool /usr/share/zsh/5.4.1/functions/_mime_types /usr/share/zsh/5.4.1/functions/_mixerctl /usr/share/zsh/5.4.1/functions/_mkdir /usr/share/zsh/5.4.1/functions/_mkshortcut /usr/share/zsh/5.4.1/functions/_mkzsh /usr/share/zsh/5.4.1/functions/_module /usr/share/zsh/5.4.1/functions/_module-assistant /usr/share/zsh/5.4.1/functions/_module_math_func /usr/share/zsh/5.4.1/functions/_modutils /usr/share/zsh/5.4.1/functions/_mondo /usr/share/zsh/5.4.1/functions/_monotone /usr/share/zsh/5.4.1/functions/_moosic /usr/share/zsh/5.4.1/functions/_mosh /usr/share/zsh/5.4.1/functions/_most_recent_file /usr/share/zsh/5.4.1/functions/_mount /usr/share/zsh/5.4.1/functions/_mozilla /usr/share/zsh/5.4.1/functions/_mpc /usr/share/zsh/5.4.1/functions/_mplayer /usr/share/zsh/5.4.1/functions/_mt /usr/share/zsh/5.4.1/functions/_mtools /usr/share/zsh/5.4.1/functions/_mtr /usr/share/zsh/5.4.1/functions/_multi_parts /usr/share/zsh/5.4.1/functions/_mutt /usr/share/zsh/5.4.1/functions/_my_accounts /usr/share/zsh/5.4.1/functions/_mysqldiff /usr/share/zsh/5.4.1/functions/_mysql_utils /usr/share/zsh/5.4.1/functions/_nautilus /usr/share/zsh/5.4.1/functions/_ncftp /usr/share/zsh/5.4.1/functions/_nedit /usr/share/zsh/5.4.1/functions/_netcat /usr/share/zsh/5.4.1/functions/_net_interfaces /usr/share/zsh/5.4.1/functions/_netscape /usr/share/zsh/5.4.1/functions/_netstat /usr/share/zsh/5.4.1/functions/_newsgroups /usr/share/zsh/5.4.1/functions/_next_label /usr/share/zsh/5.4.1/functions/_next_tags /usr/share/zsh/5.4.1/functions/_nice /usr/share/zsh/5.4.1/functions/_nkf /usr/share/zsh/5.4.1/functions/_nl /usr/share/zsh/5.4.1/functions/_nm /usr/share/zsh/5.4.1/functions/_nmap /usr/share/zsh/5.4.1/functions/_nmcli /usr/share/zsh/5.4.1/functions/_normal /usr/share/zsh/5.4.1/functions/_nothing /usr/share/zsh/5.4.1/functions/_notmuch /usr/share/zsh/5.4.1/functions/_npm /usr/share/zsh/5.4.1/functions/_nslookup /usr/share/zsh/5.4.1/functions/_objdump /usr/share/zsh/5.4.1/functions/_object_classes /usr/share/zsh/5.4.1/functions/_object_files /usr/share/zsh/5.4.1/functions/_od /usr/share/zsh/5.4.1/functions/_okular /usr/share/zsh/5.4.1/functions/_oldlist /usr/share/zsh/5.4.1/functions/_open /usr/share/zsh/5.4.1/functions/_openstack /usr/share/zsh/5.4.1/functions/_options /usr/share/zsh/5.4.1/functions/_options_set /usr/share/zsh/5.4.1/functions/_options_unset /usr/share/zsh/5.4.1/functions/_osc /usr/share/zsh/5.4.1/functions/_other_accounts /usr/share/zsh/5.4.1/functions/_pack /usr/share/zsh/5.4.1/functions/_parameter /usr/share/zsh/5.4.1/functions/_parameters /usr/share/zsh/5.4.1/functions/_paste /usr/share/zsh/5.4.1/functions/_patch /usr/share/zsh/5.4.1/functions/_patchutils /usr/share/zsh/5.4.1/functions/_path_commands /usr/share/zsh/5.4.1/functions/_path_files /usr/share/zsh/5.4.1/functions/_pax /usr/share/zsh/5.4.1/functions/_pbm /usr/share/zsh/5.4.1/functions/_pbuilder /usr/share/zsh/5.4.1/functions/_pdf /usr/share/zsh/5.4.1/functions/_pdftk /usr/share/zsh/5.4.1/functions/_perforce /usr/share/zsh/5.4.1/functions/_perl /usr/share/zsh/5.4.1/functions/_perl_basepods /usr/share/zsh/5.4.1/functions/_perldoc /usr/share/zsh/5.4.1/functions/_perl_modules /usr/share/zsh/5.4.1/functions/_pfctl /usr/share/zsh/5.4.1/functions/_pfexec /usr/share/zsh/5.4.1/functions/_pgrep /usr/share/zsh/5.4.1/functions/_php /usr/share/zsh/5.4.1/functions/_physical_volumes /usr/share/zsh/5.4.1/functions/_pick_variant /usr/share/zsh/5.4.1/functions/_picocom /usr/share/zsh/5.4.1/functions/_pidof /usr/share/zsh/5.4.1/functions/_pids /usr/share/zsh/5.4.1/functions/_pine /usr/share/zsh/5.4.1/functions/_ping /usr/share/zsh/5.4.1/functions/_piuparts /usr/share/zsh/5.4.1/functions/_pkg5 /usr/share/zsh/5.4.1/functions/_pkgadd /usr/share/zsh/5.4.1/functions/_pkg-config /usr/share/zsh/5.4.1/functions/_pkginfo /usr/share/zsh/5.4.1/functions/_pkg_instance /usr/share/zsh/5.4.1/functions/_pkgrm /usr/share/zsh/5.4.1/functions/_pkgtool /usr/share/zsh/5.4.1/functions/_pon /usr/share/zsh/5.4.1/functions/_portaudit /usr/share/zsh/5.4.1/functions/_portlint /usr/share/zsh/5.4.1/functions/_portmaster /usr/share/zsh/5.4.1/functions/_ports /usr/share/zsh/5.4.1/functions/_portsnap /usr/share/zsh/5.4.1/functions/_postfix /usr/share/zsh/5.4.1/functions/_postscript /usr/share/zsh/5.4.1/functions/_powerd /usr/share/zsh/5.4.1/functions/_prcs /usr/share/zsh/5.4.1/functions/_precommand /usr/share/zsh/5.4.1/functions/_prefix /usr/share/zsh/5.4.1/functions/_print /usr/share/zsh/5.4.1/functions/_printenv /usr/share/zsh/5.4.1/functions/_printers /usr/share/zsh/5.4.1/functions/_procstat /usr/share/zsh/5.4.1/functions/_prompt /usr/share/zsh/5.4.1/functions/_prove /usr/share/zsh/5.4.1/functions/_prstat /usr/share/zsh/5.4.1/functions/_ps /usr/share/zsh/5.4.1/functions/_ps1234 /usr/share/zsh/5.4.1/functions/_pscp /usr/share/zsh/5.4.1/functions/_pspdf /usr/share/zsh/5.4.1/functions/_psutils /usr/share/zsh/5.4.1/functions/_ptree /usr/share/zsh/5.4.1/functions/_pump /usr/share/zsh/5.4.1/functions/_putclip /usr/share/zsh/5.4.1/functions/_pydoc /usr/share/zsh/5.4.1/functions/_python /usr/share/zsh/5.4.1/functions/_python_modules /usr/share/zsh/5.4.1/functions/_qdbus /usr/share/zsh/5.4.1/functions/_qemu /usr/share/zsh/5.4.1/functions/_qiv /usr/share/zsh/5.4.1/functions/_qtplay /usr/share/zsh/5.4.1/functions/_quilt /usr/share/zsh/5.4.1/functions/_raggle /usr/share/zsh/5.4.1/functions/_rake /usr/share/zsh/5.4.1/functions/_ranlib /usr/share/zsh/5.4.1/functions/_rar /usr/share/zsh/5.4.1/functions/_rcctl /usr/share/zsh/5.4.1/functions/_rcs /usr/share/zsh/5.4.1/functions/_rdesktop /usr/share/zsh/5.4.1/functions/_read /usr/share/zsh/5.4.1/functions/_read_comp /usr/share/zsh/5.4.1/functions/_readelf /usr/share/zsh/5.4.1/functions/_readshortcut /usr/share/zsh/5.4.1/functions/_rebootin /usr/share/zsh/5.4.1/functions/_redirect /usr/share/zsh/5.4.1/functions/_regex_arguments /usr/share/zsh/5.4.1/functions/_regex_words /usr/share/zsh/5.4.1/functions/_remote_files /usr/share/zsh/5.4.1/functions/_renice /usr/share/zsh/5.4.1/functions/_reprepro /usr/share/zsh/5.4.1/functions/_requested /usr/share/zsh/5.4.1/functions/_retrieve_cache /usr/share/zsh/5.4.1/functions/_retrieve_mac_apps /usr/share/zsh/5.4.1/functions/_ri /usr/share/zsh/5.4.1/functions/_rlogin /usr/share/zsh/5.4.1/functions/_rm /usr/share/zsh/5.4.1/functions/_rpm /usr/share/zsh/5.4.1/functions/_rpmbuild /usr/share/zsh/5.4.1/functions/_rrdtool /usr/share/zsh/5.4.1/functions/_rsync /usr/share/zsh/5.4.1/functions/_rubber /usr/share/zsh/5.4.1/functions/_ruby /usr/share/zsh/5.4.1/functions/_run-help /usr/share/zsh/5.4.1/functions/_runit /usr/share/zsh/5.4.1/functions/_sablotron /usr/share/zsh/5.4.1/functions/_samba /usr/share/zsh/5.4.1/functions/_savecore /usr/share/zsh/5.4.1/functions/_sccs /usr/share/zsh/5.4.1/functions/_sched /usr/share/zsh/5.4.1/functions/_schedtool /usr/share/zsh/5.4.1/functions/_schroot /usr/share/zsh/5.4.1/functions/_scl /usr/share/zsh/5.4.1/functions/_screen /usr/share/zsh/5.4.1/functions/_script /usr/share/zsh/5.4.1/functions/_sed /usr/share/zsh/5.4.1/functions/_sep_parts /usr/share/zsh/5.4.1/functions/_sequence /usr/share/zsh/5.4.1/functions/_service /usr/share/zsh/5.4.1/functions/_services /usr/share/zsh/5.4.1/functions/_set /usr/share/zsh/5.4.1/functions/_set_command /usr/share/zsh/5.4.1/functions/_setfacl /usr/share/zsh/5.4.1/functions/_setopt /usr/share/zsh/5.4.1/functions/_setup /usr/share/zsh/5.4.1/functions/_setxkbmap /usr/share/zsh/5.4.1/functions/_sh /usr/share/zsh/5.4.1/functions/_showmount /usr/share/zsh/5.4.1/functions/_signals /usr/share/zsh/5.4.1/functions/_sisu /usr/share/zsh/5.4.1/functions/_slrn /usr/share/zsh/5.4.1/functions/_smit /usr/share/zsh/5.4.1/functions/_snoop /usr/share/zsh/5.4.1/functions/_socket /usr/share/zsh/5.4.1/functions/_sockstat /usr/share/zsh/5.4.1/functions/_softwareupdate /usr/share/zsh/5.4.1/functions/_sort /usr/share/zsh/5.4.1/functions/_source /usr/share/zsh/5.4.1/functions/_spamassassin /usr/share/zsh/5.4.1/functions/_sqlite /usr/share/zsh/5.4.1/functions/_sqsh /usr/share/zsh/5.4.1/functions/_ss /usr/share/zsh/5.4.1/functions/_ssh /usr/share/zsh/5.4.1/functions/_sshfs /usr/share/zsh/5.4.1/functions/_stat /usr/share/zsh/5.4.1/functions/_stgit /usr/share/zsh/5.4.1/functions/_store_cache /usr/share/zsh/5.4.1/functions/_strace /usr/share/zsh/5.4.1/functions/_strftime /usr/share/zsh/5.4.1/functions/_strip /usr/share/zsh/5.4.1/functions/_stty /usr/share/zsh/5.4.1/functions/_su /usr/share/zsh/5.4.1/functions/_sub_commands /usr/share/zsh/5.4.1/functions/_subscript /usr/share/zsh/5.4.1/functions/_subversion /usr/share/zsh/5.4.1/functions/_sudo /usr/share/zsh/5.4.1/functions/_suffix_alias_files /usr/share/zsh/5.4.1/functions/_surfraw /usr/share/zsh/5.4.1/functions/_SUSEconfig /usr/share/zsh/5.4.1/functions/_svcadm /usr/share/zsh/5.4.1/functions/_svccfg /usr/share/zsh/5.4.1/functions/_svcprop /usr/share/zsh/5.4.1/functions/_svcs /usr/share/zsh/5.4.1/functions/_svcs_fmri /usr/share/zsh/5.4.1/functions/_svn-buildpackage /usr/share/zsh/5.4.1/functions/_swaks /usr/share/zsh/5.4.1/functions/_swift /usr/share/zsh/5.4.1/functions/_sys_calls /usr/share/zsh/5.4.1/functions/_sysctl /usr/share/zsh/5.4.1/functions/_sysrc /usr/share/zsh/5.4.1/functions/_sysstat /usr/share/zsh/5.4.1/functions/_systat /usr/share/zsh/5.4.1/functions/_system_profiler /usr/share/zsh/5.4.1/functions/_tags /usr/share/zsh/5.4.1/functions/_tail /usr/share/zsh/5.4.1/functions/_tar /usr/share/zsh/5.4.1/functions/_tar_archive /usr/share/zsh/5.4.1/functions/_tardy /usr/share/zsh/5.4.1/functions/_tcpdump /usr/share/zsh/5.4.1/functions/_tcpsys /usr/share/zsh/5.4.1/functions/_tcptraceroute /usr/share/zsh/5.4.1/functions/_telnet /usr/share/zsh/5.4.1/functions/_terminals /usr/share/zsh/5.4.1/functions/_tex /usr/share/zsh/5.4.1/functions/_texi /usr/share/zsh/5.4.1/functions/_texinfo /usr/share/zsh/5.4.1/functions/_tidy /usr/share/zsh/5.4.1/functions/_tiff /usr/share/zsh/5.4.1/functions/_tilde /usr/share/zsh/5.4.1/functions/_tilde_files /usr/share/zsh/5.4.1/functions/_time_zone /usr/share/zsh/5.4.1/functions/_tin /usr/share/zsh/5.4.1/functions/_tla /usr/share/zsh/5.4.1/functions/_tmux /usr/share/zsh/5.4.1/functions/_todo.sh /usr/share/zsh/5.4.1/functions/_toilet /usr/share/zsh/5.4.1/functions/_toolchain-source /usr/share/zsh/5.4.1/functions/_top /usr/share/zsh/5.4.1/functions/_topgit /usr/share/zsh/5.4.1/functions/_totd /usr/share/zsh/5.4.1/functions/_touch /usr/share/zsh/5.4.1/functions/_tpb /usr/share/zsh/5.4.1/functions/_tpconfig /usr/share/zsh/5.4.1/functions/_tput /usr/share/zsh/5.4.1/functions/_tr /usr/share/zsh/5.4.1/functions/_tracepath /usr/share/zsh/5.4.1/functions/_trap /usr/share/zsh/5.4.1/functions/_tree /usr/share/zsh/5.4.1/functions/_truss /usr/share/zsh/5.4.1/functions/_ttyctl /usr/share/zsh/5.4.1/functions/_ttys /usr/share/zsh/5.4.1/functions/_tune2fs /usr/share/zsh/5.4.1/functions/_twidge /usr/share/zsh/5.4.1/functions/_twisted /usr/share/zsh/5.4.1/functions/_typeset /usr/share/zsh/5.4.1/functions/_ulimit /usr/share/zsh/5.4.1/functions/_uml /usr/share/zsh/5.4.1/functions/_umountable /usr/share/zsh/5.4.1/functions/_unace /usr/share/zsh/5.4.1/functions/_uname /usr/share/zsh/5.4.1/functions/_unexpand /usr/share/zsh/5.4.1/functions/_unhash /usr/share/zsh/5.4.1/functions/_uniq /usr/share/zsh/5.4.1/functions/_unison /usr/share/zsh/5.4.1/functions/_units /usr/share/zsh/5.4.1/functions/_update-alternatives /usr/share/zsh/5.4.1/functions/_update-rc.d /usr/share/zsh/5.4.1/functions/_urls /usr/share/zsh/5.4.1/functions/_urpmi /usr/share/zsh/5.4.1/functions/_urxvt /usr/share/zsh/5.4.1/functions/_uscan /usr/share/zsh/5.4.1/functions/_user_admin /usr/share/zsh/5.4.1/functions/_user_at_host /usr/share/zsh/5.4.1/functions/_user_expand /usr/share/zsh/5.4.1/functions/_user_math_func /usr/share/zsh/5.4.1/functions/_users /usr/share/zsh/5.4.1/functions/_users_on /usr/share/zsh/5.4.1/functions/_uzbl /usr/share/zsh/5.4.1/functions/_valgrind /usr/share/zsh/5.4.1/functions/_value /usr/share/zsh/5.4.1/functions/_values /usr/share/zsh/5.4.1/functions/_vared /usr/share/zsh/5.4.1/functions/_vars /usr/share/zsh/5.4.1/functions/_vcsh /usr/share/zsh/5.4.1/functions/_vim /usr/share/zsh/5.4.1/functions/_vim-addons /usr/share/zsh/5.4.1/functions/_vmstat /usr/share/zsh/5.4.1/functions/_vnc /usr/share/zsh/5.4.1/functions/_volume_groups /usr/share/zsh/5.4.1/functions/_vorbis /usr/share/zsh/5.4.1/functions/_vorbiscomment /usr/share/zsh/5.4.1/functions/_vserver /usr/share/zsh/5.4.1/functions/_vux /usr/share/zsh/5.4.1/functions/_w3m /usr/share/zsh/5.4.1/functions/_wait /usr/share/zsh/5.4.1/functions/_wajig /usr/share/zsh/5.4.1/functions/_wakeup_capable_devices /usr/share/zsh/5.4.1/functions/_wanna-build /usr/share/zsh/5.4.1/functions/_wanted /usr/share/zsh/5.4.1/functions/_watch /usr/share/zsh/5.4.1/functions/_watch-snoop /usr/share/zsh/5.4.1/functions/_wc /usr/share/zsh/5.4.1/functions/_webbrowser /usr/share/zsh/5.4.1/functions/_wget /usr/share/zsh/5.4.1/functions/_whereis /usr/share/zsh/5.4.1/functions/_which /usr/share/zsh/5.4.1/functions/_whois /usr/share/zsh/5.4.1/functions/_widgets /usr/share/zsh/5.4.1/functions/_wiggle /usr/share/zsh/5.4.1/functions/_wpa_cli /usr/share/zsh/5.4.1/functions/_xargs /usr/share/zsh/5.4.1/functions/_x_arguments /usr/share/zsh/5.4.1/functions/_xauth /usr/share/zsh/5.4.1/functions/_xautolock /usr/share/zsh/5.4.1/functions/_x_borderwidth /usr/share/zsh/5.4.1/functions/_xclip /usr/share/zsh/5.4.1/functions/_x_color /usr/share/zsh/5.4.1/functions/_x_colormapid /usr/share/zsh/5.4.1/functions/_x_cursor /usr/share/zsh/5.4.1/functions/_x_display /usr/share/zsh/5.4.1/functions/_xdvi /usr/share/zsh/5.4.1/functions/_x_extension /usr/share/zsh/5.4.1/functions/_xfig /usr/share/zsh/5.4.1/functions/_x_font /usr/share/zsh/5.4.1/functions/_xft_fonts /usr/share/zsh/5.4.1/functions/_x_geometry /usr/share/zsh/5.4.1/functions/_x_keysym /usr/share/zsh/5.4.1/functions/_xloadimage /usr/share/zsh/5.4.1/functions/_x_locale /usr/share/zsh/5.4.1/functions/_xmlsoft /usr/share/zsh/5.4.1/functions/_xmms2 /usr/share/zsh/5.4.1/functions/_x_modifier /usr/share/zsh/5.4.1/functions/_xmodmap /usr/share/zsh/5.4.1/functions/_x_name /usr/share/zsh/5.4.1/functions/_xournal /usr/share/zsh/5.4.1/functions/_xpdf /usr/share/zsh/5.4.1/functions/_xrandr /usr/share/zsh/5.4.1/functions/_x_resource /usr/share/zsh/5.4.1/functions/_xscreensaver /usr/share/zsh/5.4.1/functions/_x_selection_timeout /usr/share/zsh/5.4.1/functions/_xset /usr/share/zsh/5.4.1/functions/_xt_arguments /usr/share/zsh/5.4.1/functions/_xterm /usr/share/zsh/5.4.1/functions/_x_title /usr/share/zsh/5.4.1/functions/_xt_session_id /usr/share/zsh/5.4.1/functions/_x_utils /usr/share/zsh/5.4.1/functions/_xv /usr/share/zsh/5.4.1/functions/_x_visual /usr/share/zsh/5.4.1/functions/_x_window /usr/share/zsh/5.4.1/functions/_xwit /usr/share/zsh/5.4.1/functions/_xxd /usr/share/zsh/5.4.1/functions/_xz /usr/share/zsh/5.4.1/functions/_yafc /usr/share/zsh/5.4.1/functions/_yast /usr/share/zsh/5.4.1/functions/_yodl /usr/share/zsh/5.4.1/functions/_yp /usr/share/zsh/5.4.1/functions/_yum /usr/share/zsh/5.4.1/functions/_zargs /usr/share/zsh/5.4.1/functions/_zattr /usr/share/zsh/5.4.1/functions/_zcalc /usr/share/zsh/5.4.1/functions/_zcalc_line /usr/share/zsh/5.4.1/functions/_zcat /usr/share/zsh/5.4.1/functions/_zcompile /usr/share/zsh/5.4.1/functions/_zdump /usr/share/zsh/5.4.1/functions/_zed /usr/share/zsh/5.4.1/functions/_zfs /usr/share/zsh/5.4.1/functions/_zfs_dataset /usr/share/zsh/5.4.1/functions/_zfs_keysource_props /usr/share/zsh/5.4.1/functions/_zfs_pool /usr/share/zsh/5.4.1/functions/_zftp /usr/share/zsh/5.4.1/functions/_zip /usr/share/zsh/5.4.1/functions/_zle /usr/share/zsh/5.4.1/functions/_zlogin /usr/share/zsh/5.4.1/functions/_zmodload /usr/share/zsh/5.4.1/functions/_zmv /usr/share/zsh/5.4.1/functions/_zoneadm /usr/share/zsh/5.4.1/functions/_zones /usr/share/zsh/5.4.1/functions/_zpool /usr/share/zsh/5.4.1/functions/_zpty /usr/share/zsh/5.4.1/functions/_zsh /usr/share/zsh/5.4.1/functions/_zsh-mime-handler /usr/share/zsh/5.4.1/functions/_zsocket /usr/share/zsh/5.4.1/functions/_zstyle /usr/share/zsh/5.4.1/functions/_ztodo /usr/share/zsh/5.4.1/functions/_zypper ) 
+compaudit:61> [[ -n /usr/share/zsh/5.4.1/functions ]]
+compaudit:62> [[ 832 -lt 20 || /usr/share/zsh/5.4.1/functions = */Base || -d /usr/share/zsh/5.4.1/functions/Base ]]
+compaudit:84> [[ ign == use ]]
+compaudit:88> local _i_owners=u0u0
+compaudit:91> local -a _i_exes
+compaudit:92> _i_exes=( /proc/3545/exe /proc/3545/object/a.out ) 
+compaudit:96> local _i_exe
+compaudit:101> _i_exe=/proc/3545/exe
+compaudit:102> [[ -e /proc/3545/exe ]]
+compaudit:103> zmodload -F zsh/stat b:zstat
+compaudit:104> local -A _i_stathash
+compaudit:105> zstat -H _i_stathash /proc/3545/exe
+compaudit:106> [[ 0 -ne 0 ]]
+compaudit:110> break
+compaudit:123> _i_wdirs=( ) 
+compaudit:132> ((  0  ))
+compaudit:146> [[ -f /etc/debian_version ]]
+compaudit:153> _i_wdirs=( ) 
+compaudit:154> _i_wfiles=( ) 
+compaudit:156> case 0:0 (0:0)
+compaudit:157> _i_q='' 
+compaudit:163> [[ -n '' ]]
+compaudit:170> return 0
+compinit:471> autoload -Uz compdump compinstall
+compinit:475> _i_done='' 
+compinit:477> [[ -f /root/.zcompdump-localhost-5.4.1 ]]
+compinit:478> [[ -n yes ]]
+compinit:479> IFS=$' \t' +compinit:479> read -rA _i_line
+compinit:480> [[ _i_autodump -eq 1 && 831 -eq 832 ]]
+compinit:491> [[ -z '' ]]
+compinit:492> typeset -A _i_test
+compinit:494> _i_dir=/root/.oh-my-zsh/plugins/git
+compinit:495> [[ /root/.oh-my-zsh/plugins/git = . ]]
+compinit:496> ((  0  ))
+compinit:494> _i_dir=/root/.oh-my-zsh/functions
+compinit:495> [[ /root/.oh-my-zsh/functions = . ]]
+compinit:496> ((  0  ))
+compinit:494> _i_dir=/root/.oh-my-zsh/completions
+compinit:495> [[ /root/.oh-my-zsh/completions = . ]]
+compinit:496> ((  0  ))
+compinit:494> _i_dir=/usr/local/share/zsh/site-functions
+compinit:495> [[ /usr/local/share/zsh/site-functions = . ]]
+compinit:496> ((  0  ))
+compinit:494> _i_dir=/usr/share/zsh/site-functions
+compinit:495> [[ /usr/share/zsh/site-functions = . ]]
+compinit:496> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_bootctl
+compinit:498> _i_name=_bootctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bootctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _bootctl bootctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bootctl = *=* ]]
+compdef:79> func=_bootctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bootctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bootctl = -N ]]
+compdef:134> [[ bootctl = -p ]]
+compdef:136> [[ bootctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bootctl = *=* ]]
+compdef:159> cmd=bootctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bootctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_busctl
+compinit:498> _i_name=_busctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ busctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _busctl busctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _busctl = *=* ]]
+compdef:79> func=_busctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _busctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ busctl = -N ]]
+compdef:134> [[ busctl = -p ]]
+compdef:136> [[ busctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ busctl = *=* ]]
+compdef:159> cmd=busctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_busctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_coredumpctl
+compinit:498> _i_name=_coredumpctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ coredumpctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _coredumpctl coredumpctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _coredumpctl = *=* ]]
+compdef:79> func=_coredumpctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _coredumpctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ coredumpctl = -N ]]
+compdef:134> [[ coredumpctl = -p ]]
+compdef:136> [[ coredumpctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ coredumpctl = *=* ]]
+compdef:159> cmd=coredumpctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_coredumpctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_curl
+compinit:498> _i_name=_curl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ curl = -[pPkK](n|) ]]
+compinit:509> compdef -na _curl curl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _curl = *=* ]]
+compdef:79> func=_curl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _curl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ curl = -N ]]
+compdef:134> [[ curl = -p ]]
+compdef:136> [[ curl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ curl = *=* ]]
+compdef:159> cmd=curl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_curl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_hostnamectl
+compinit:498> _i_name=_hostnamectl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ hostnamectl = -[pPkK](n|) ]]
+compinit:509> compdef -na _hostnamectl hostnamectl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _hostnamectl = *=* ]]
+compdef:79> func=_hostnamectl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _hostnamectl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ hostnamectl = -N ]]
+compdef:134> [[ hostnamectl = -p ]]
+compdef:136> [[ hostnamectl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hostnamectl = *=* ]]
+compdef:159> cmd=hostnamectl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hostnamectl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_journalctl
+compinit:498> _i_name=_journalctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ journalctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _journalctl journalctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _journalctl = *=* ]]
+compdef:79> func=_journalctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _journalctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ journalctl = -N ]]
+compdef:134> [[ journalctl = -p ]]
+compdef:136> [[ journalctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ journalctl = *=* ]]
+compdef:159> cmd=journalctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_journalctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_kernel-install
+compinit:498> _i_name=_kernel-install 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ kernel-install = -[pPkK](n|) ]]
+compinit:509> compdef -na _kernel-install kernel-install
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _kernel-install = *=* ]]
+compdef:79> func=_kernel-install 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _kernel-install
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ kernel-install = -N ]]
+compdef:134> [[ kernel-install = -p ]]
+compdef:136> [[ kernel-install = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kernel-install = *=* ]]
+compdef:159> cmd=kernel-install 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kernel-install 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_localectl
+compinit:498> _i_name=_localectl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ localectl = -[pPkK](n|) ]]
+compinit:509> compdef -na _localectl localectl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _localectl = *=* ]]
+compdef:79> func=_localectl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _localectl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ localectl = -N ]]
+compdef:134> [[ localectl = -p ]]
+compdef:136> [[ localectl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ localectl = *=* ]]
+compdef:159> cmd=localectl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_localectl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_loginctl
+compinit:498> _i_name=_loginctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ loginctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _loginctl loginctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _loginctl = *=* ]]
+compdef:79> func=_loginctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _loginctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ loginctl = -N ]]
+compdef:134> [[ loginctl = -p ]]
+compdef:136> [[ loginctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ loginctl = *=* ]]
+compdef:159> cmd=loginctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_loginctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_machinectl
+compinit:498> _i_name=_machinectl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ machinectl = -[pPkK](n|) ]]
+compinit:509> compdef -na _machinectl machinectl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _machinectl = *=* ]]
+compdef:79> func=_machinectl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _machinectl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ machinectl = -N ]]
+compdef:134> [[ machinectl = -p ]]
+compdef:136> [[ machinectl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ machinectl = *=* ]]
+compdef:159> cmd=machinectl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_machinectl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_networkctl
+compinit:498> _i_name=_networkctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ networkctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _networkctl networkctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _networkctl = *=* ]]
+compdef:79> func=_networkctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _networkctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ networkctl = -N ]]
+compdef:134> [[ networkctl = -p ]]
+compdef:136> [[ networkctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ networkctl = *=* ]]
+compdef:159> cmd=networkctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_networkctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_pulseaudio
+compinit:498> _i_name=_pulseaudio 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pulseaudio = -[pPkK](n|) ]]
+compinit:509> compdef -na _pulseaudio pulseaudio pactl pacmd pacat paplay parec parecord padsp pasuspender
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 11  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 10  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pulseaudio = *=* ]]
+compdef:79> func=_pulseaudio 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pulseaudio
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  9  ))
+compdef:132> [[ pulseaudio = -N ]]
+compdef:134> [[ pulseaudio = -p ]]
+compdef:136> [[ pulseaudio = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pulseaudio = *=* ]]
+compdef:159> cmd=pulseaudio 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pulseaudio 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ pactl = -N ]]
+compdef:134> [[ pactl = -p ]]
+compdef:136> [[ pactl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pactl = *=* ]]
+compdef:159> cmd=pactl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pulseaudio 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ pacmd = -N ]]
+compdef:134> [[ pacmd = -p ]]
+compdef:136> [[ pacmd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pacmd = *=* ]]
+compdef:159> cmd=pacmd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pulseaudio 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ pacat = -N ]]
+compdef:134> [[ pacat = -p ]]
+compdef:136> [[ pacat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pacat = *=* ]]
+compdef:159> cmd=pacat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pulseaudio 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ paplay = -N ]]
+compdef:134> [[ paplay = -p ]]
+compdef:136> [[ paplay = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ paplay = *=* ]]
+compdef:159> cmd=paplay 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pulseaudio 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ parec = -N ]]
+compdef:134> [[ parec = -p ]]
+compdef:136> [[ parec = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ parec = *=* ]]
+compdef:159> cmd=parec 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pulseaudio 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ parecord = -N ]]
+compdef:134> [[ parecord = -p ]]
+compdef:136> [[ parecord = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ parecord = *=* ]]
+compdef:159> cmd=parecord 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pulseaudio 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ padsp = -N ]]
+compdef:134> [[ padsp = -p ]]
+compdef:136> [[ padsp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ padsp = *=* ]]
+compdef:159> cmd=padsp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pulseaudio 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ pasuspender = -N ]]
+compdef:134> [[ pasuspender = -p ]]
+compdef:136> [[ pasuspender = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pasuspender = *=* ]]
+compdef:159> cmd=pasuspender 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pulseaudio 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_sd_hosts_or_user_at_host
+compinit:498> _i_name=_sd_hosts_or_user_at_host 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _sd_hosts_or_user_at_host
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/site-functions/_sd_machines
+compinit:498> _i_name=_sd_machines 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _sd_machines
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/site-functions/_sd_outputmodes
+compinit:498> _i_name=_sd_outputmodes 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _sd_outputmodes
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/site-functions/_sd_unit_files
+compinit:498> _i_name=_sd_unit_files 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _sd_unit_files
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/site-functions/_systemctl
+compinit:498> _i_name=_systemctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ systemctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _systemctl systemctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _systemctl = *=* ]]
+compdef:79> func=_systemctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _systemctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ systemctl = -N ]]
+compdef:134> [[ systemctl = -p ]]
+compdef:136> [[ systemctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemctl = *=* ]]
+compdef:159> cmd=systemctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_systemd
+compinit:498> _i_name=_systemd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ systemd-cat = -[pPkK](n|) ]]
+compinit:509> compdef -na _systemd systemd-cat systemd-ask-password systemd-cgls systemd-cgtop systemd-detect-virt systemd-machine-id-setup systemd-notify systemd-tty-ask-password-agent
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _systemd = *=* ]]
+compdef:79> func=_systemd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _systemd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ systemd-cat = -N ]]
+compdef:134> [[ systemd-cat = -p ]]
+compdef:136> [[ systemd-cat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-cat = *=* ]]
+compdef:159> cmd=systemd-cat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ systemd-ask-password = -N ]]
+compdef:134> [[ systemd-ask-password = -p ]]
+compdef:136> [[ systemd-ask-password = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-ask-password = *=* ]]
+compdef:159> cmd=systemd-ask-password 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ systemd-cgls = -N ]]
+compdef:134> [[ systemd-cgls = -p ]]
+compdef:136> [[ systemd-cgls = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-cgls = *=* ]]
+compdef:159> cmd=systemd-cgls 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ systemd-cgtop = -N ]]
+compdef:134> [[ systemd-cgtop = -p ]]
+compdef:136> [[ systemd-cgtop = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-cgtop = *=* ]]
+compdef:159> cmd=systemd-cgtop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ systemd-detect-virt = -N ]]
+compdef:134> [[ systemd-detect-virt = -p ]]
+compdef:136> [[ systemd-detect-virt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-detect-virt = *=* ]]
+compdef:159> cmd=systemd-detect-virt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ systemd-machine-id-setup = -N ]]
+compdef:134> [[ systemd-machine-id-setup = -p ]]
+compdef:136> [[ systemd-machine-id-setup = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-machine-id-setup = *=* ]]
+compdef:159> cmd=systemd-machine-id-setup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ systemd-notify = -N ]]
+compdef:134> [[ systemd-notify = -p ]]
+compdef:136> [[ systemd-notify = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-notify = *=* ]]
+compdef:159> cmd=systemd-notify 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ systemd-tty-ask-password-agent = -N ]]
+compdef:134> [[ systemd-tty-ask-password-agent = -p ]]
+compdef:136> [[ systemd-tty-ask-password-agent = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-tty-ask-password-agent = *=* ]]
+compdef:159> cmd=systemd-tty-ask-password-agent 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_systemd-analyze
+compinit:498> _i_name=_systemd-analyze 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ systemd-analyze = -[pPkK](n|) ]]
+compinit:509> compdef -na _systemd-analyze systemd-analyze
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _systemd-analyze = *=* ]]
+compdef:79> func=_systemd-analyze 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _systemd-analyze
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ systemd-analyze = -N ]]
+compdef:134> [[ systemd-analyze = -p ]]
+compdef:136> [[ systemd-analyze = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-analyze = *=* ]]
+compdef:159> cmd=systemd-analyze 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd-analyze 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_systemd-delta
+compinit:498> _i_name=_systemd-delta 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ systemd-delta = -[pPkK](n|) ]]
+compinit:509> compdef -na _systemd-delta systemd-delta
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _systemd-delta = *=* ]]
+compdef:79> func=_systemd-delta 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _systemd-delta
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ systemd-delta = -N ]]
+compdef:134> [[ systemd-delta = -p ]]
+compdef:136> [[ systemd-delta = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-delta = *=* ]]
+compdef:159> cmd=systemd-delta 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd-delta 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_systemd-inhibit
+compinit:498> _i_name=_systemd-inhibit 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ systemd-inhibit = -[pPkK](n|) ]]
+compinit:509> compdef -na _systemd-inhibit systemd-inhibit
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _systemd-inhibit = *=* ]]
+compdef:79> func=_systemd-inhibit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _systemd-inhibit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ systemd-inhibit = -N ]]
+compdef:134> [[ systemd-inhibit = -p ]]
+compdef:136> [[ systemd-inhibit = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-inhibit = *=* ]]
+compdef:159> cmd=systemd-inhibit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd-inhibit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_systemd-nspawn
+compinit:498> _i_name=_systemd-nspawn 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ systemd-nspawn = -[pPkK](n|) ]]
+compinit:509> compdef -na _systemd-nspawn systemd-nspawn
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _systemd-nspawn = *=* ]]
+compdef:79> func=_systemd-nspawn 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _systemd-nspawn
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ systemd-nspawn = -N ]]
+compdef:134> [[ systemd-nspawn = -p ]]
+compdef:136> [[ systemd-nspawn = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-nspawn = *=* ]]
+compdef:159> cmd=systemd-nspawn 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd-nspawn 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_systemd-resolve
+compinit:498> _i_name=_systemd-resolve 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ systemd-resolve = -[pPkK](n|) ]]
+compinit:509> compdef -na _systemd-resolve systemd-resolve
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _systemd-resolve = *=* ]]
+compdef:79> func=_systemd-resolve 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _systemd-resolve
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ systemd-resolve = -N ]]
+compdef:134> [[ systemd-resolve = -p ]]
+compdef:136> [[ systemd-resolve = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-resolve = *=* ]]
+compdef:159> cmd=systemd-resolve 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd-resolve 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_systemd-run
+compinit:498> _i_name=_systemd-run 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ systemd-run = -[pPkK](n|) ]]
+compinit:509> compdef -na _systemd-run systemd-run
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _systemd-run = *=* ]]
+compdef:79> func=_systemd-run 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _systemd-run
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ systemd-run = -N ]]
+compdef:134> [[ systemd-run = -p ]]
+compdef:136> [[ systemd-run = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-run = *=* ]]
+compdef:159> cmd=systemd-run 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd-run 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_systemd-tmpfiles
+compinit:498> _i_name=_systemd-tmpfiles 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ systemd-tmpfiles = -[pPkK](n|) ]]
+compinit:509> compdef -na _systemd-tmpfiles systemd-tmpfiles
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _systemd-tmpfiles = *=* ]]
+compdef:79> func=_systemd-tmpfiles 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _systemd-tmpfiles
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ systemd-tmpfiles = -N ]]
+compdef:134> [[ systemd-tmpfiles = -p ]]
+compdef:136> [[ systemd-tmpfiles = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systemd-tmpfiles = *=* ]]
+compdef:159> cmd=systemd-tmpfiles 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systemd-tmpfiles 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_the_silver_searcher
+compinit:498> _i_name=_the_silver_searcher 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ag = -[pPkK](n|) ]]
+compinit:509> compdef -na _the_silver_searcher ag
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _the_silver_searcher = *=* ]]
+compdef:79> func=_the_silver_searcher 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _the_silver_searcher
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ag = -N ]]
+compdef:134> [[ ag = -p ]]
+compdef:136> [[ ag = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ag = *=* ]]
+compdef:159> cmd=ag 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_the_silver_searcher 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_timedatectl
+compinit:498> _i_name=_timedatectl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ timedatectl = -[pPkK](n|) ]]
+compinit:509> compdef -na _timedatectl timedatectl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _timedatectl = *=* ]]
+compdef:79> func=_timedatectl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _timedatectl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ timedatectl = -N ]]
+compdef:134> [[ timedatectl = -p ]]
+compdef:136> [[ timedatectl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ timedatectl = *=* ]]
+compdef:159> cmd=timedatectl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_timedatectl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/site-functions/_udevadm
+compinit:498> _i_name=_udevadm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ udevadm = -[pPkK](n|) ]]
+compinit:509> compdef -na _udevadm udevadm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _udevadm = *=* ]]
+compdef:79> func=_udevadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _udevadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ udevadm = -N ]]
+compdef:134> [[ udevadm = -p ]]
+compdef:136> [[ udevadm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ udevadm = *=* ]]
+compdef:159> cmd=udevadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_udevadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:494> _i_dir=/usr/share/zsh/5.4.1/functions
+compinit:495> [[ /usr/share/zsh/5.4.1/functions = . ]]
+compinit:496> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_a2ps
+compinit:498> _i_name=_a2ps 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ a2ps = -[pPkK](n|) ]]
+compinit:509> compdef -na _a2ps a2ps
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _a2ps = *=* ]]
+compdef:79> func=_a2ps 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _a2ps
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ a2ps = -N ]]
+compdef:134> [[ a2ps = -p ]]
+compdef:136> [[ a2ps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ a2ps = *=* ]]
+compdef:159> cmd=a2ps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_a2ps 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_a2utils
+compinit:498> _i_name=_a2utils 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ a2ensite = -[pPkK](n|) ]]
+compinit:509> compdef -na _a2utils a2ensite a2dissite a2enmod a2dismod
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _a2utils = *=* ]]
+compdef:79> func=_a2utils 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _a2utils
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ a2ensite = -N ]]
+compdef:134> [[ a2ensite = -p ]]
+compdef:136> [[ a2ensite = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ a2ensite = *=* ]]
+compdef:159> cmd=a2ensite 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_a2utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ a2dissite = -N ]]
+compdef:134> [[ a2dissite = -p ]]
+compdef:136> [[ a2dissite = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ a2dissite = *=* ]]
+compdef:159> cmd=a2dissite 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_a2utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ a2enmod = -N ]]
+compdef:134> [[ a2enmod = -p ]]
+compdef:136> [[ a2enmod = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ a2enmod = *=* ]]
+compdef:159> cmd=a2enmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_a2utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ a2dismod = -N ]]
+compdef:134> [[ a2dismod = -p ]]
+compdef:136> [[ a2dismod = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ a2dismod = *=* ]]
+compdef:159> cmd=a2dismod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_a2utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_aap
+compinit:498> _i_name=_aap 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ aap = -[pPkK](n|) ]]
+compinit:509> compdef -na _aap aap
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _aap = *=* ]]
+compdef:79> func=_aap 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _aap
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ aap = -N ]]
+compdef:134> [[ aap = -p ]]
+compdef:136> [[ aap = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ aap = *=* ]]
+compdef:159> cmd=aap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_aap 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_absolute_command_paths
+compinit:498> _i_name=_absolute_command_paths 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _absolute_command_paths
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_acpi
+compinit:498> _i_name=_acpi 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ acpi = -[pPkK](n|) ]]
+compinit:509> compdef -na _acpi acpi
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _acpi = *=* ]]
+compdef:79> func=_acpi 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _acpi
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ acpi = -N ]]
+compdef:134> [[ acpi = -p ]]
+compdef:136> [[ acpi = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ acpi = *=* ]]
+compdef:159> cmd=acpi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_acpi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_acpitool
+compinit:498> _i_name=_acpitool 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ acpitool = -[pPkK](n|) ]]
+compinit:509> compdef -na _acpitool acpitool
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _acpitool = *=* ]]
+compdef:79> func=_acpitool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _acpitool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ acpitool = -N ]]
+compdef:134> [[ acpitool = -p ]]
+compdef:136> [[ acpitool = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ acpitool = *=* ]]
+compdef:159> cmd=acpitool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_acpitool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_acroread
+compinit:498> _i_name=_acroread 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ acroread = -[pPkK](n|) ]]
+compinit:509> compdef -na _acroread acroread
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _acroread = *=* ]]
+compdef:79> func=_acroread 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _acroread
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ acroread = -N ]]
+compdef:134> [[ acroread = -p ]]
+compdef:136> [[ acroread = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ acroread = *=* ]]
+compdef:159> cmd=acroread 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_acroread 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_adb
+compinit:498> _i_name=_adb 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ adb = -[pPkK](n|) ]]
+compinit:509> compdef -na _adb adb -value-,ADB_TRACE,-default- -value-,ANDROID_SERIAL,-default- -value-,ANDROID_LOG_TAGS,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _adb = *=* ]]
+compdef:79> func=_adb 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _adb
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ adb = -N ]]
+compdef:134> [[ adb = -p ]]
+compdef:136> [[ adb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ adb = *=* ]]
+compdef:159> cmd=adb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_adb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,ADB_TRACE,-default- = -N ]]
+compdef:134> [[ -value-,ADB_TRACE,-default- = -p ]]
+compdef:136> [[ -value-,ADB_TRACE,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,ADB_TRACE,-default- = *=* ]]
+compdef:159> cmd=-value-,ADB_TRACE,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_adb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,ANDROID_SERIAL,-default- = -N ]]
+compdef:134> [[ -value-,ANDROID_SERIAL,-default- = -p ]]
+compdef:136> [[ -value-,ANDROID_SERIAL,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,ANDROID_SERIAL,-default- = *=* ]]
+compdef:159> cmd=-value-,ANDROID_SERIAL,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_adb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,ANDROID_LOG_TAGS,-default- = -N ]]
+compdef:134> [[ -value-,ANDROID_LOG_TAGS,-default- = -p ]]
+compdef:136> [[ -value-,ANDROID_LOG_TAGS,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,ANDROID_LOG_TAGS,-default- = *=* ]]
+compdef:159> cmd=-value-,ANDROID_LOG_TAGS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_adb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_add-zle-hook-widget
+compinit:498> _i_name=_add-zle-hook-widget 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ add-zle-hook-widget = -[pPkK](n|) ]]
+compinit:509> compdef -na _add-zle-hook-widget add-zle-hook-widget
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _add-zle-hook-widget = *=* ]]
+compdef:79> func=_add-zle-hook-widget 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _add-zle-hook-widget
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ add-zle-hook-widget = -N ]]
+compdef:134> [[ add-zle-hook-widget = -p ]]
+compdef:136> [[ add-zle-hook-widget = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ add-zle-hook-widget = *=* ]]
+compdef:159> cmd=add-zle-hook-widget 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_add-zle-hook-widget 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_add-zsh-hook
+compinit:498> _i_name=_add-zsh-hook 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ add-zsh-hook = -[pPkK](n|) ]]
+compinit:509> compdef -na _add-zsh-hook add-zsh-hook
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _add-zsh-hook = *=* ]]
+compdef:79> func=_add-zsh-hook 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _add-zsh-hook
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ add-zsh-hook = -N ]]
+compdef:134> [[ add-zsh-hook = -p ]]
+compdef:136> [[ add-zsh-hook = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ add-zsh-hook = *=* ]]
+compdef:159> cmd=add-zsh-hook 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_add-zsh-hook 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_alias
+compinit:498> _i_name=_alias 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ alias = -[pPkK](n|) ]]
+compinit:509> compdef -na _alias alias
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _alias = *=* ]]
+compdef:79> func=_alias 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _alias
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ alias = -N ]]
+compdef:134> [[ alias = -p ]]
+compdef:136> [[ alias = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ alias = *=* ]]
+compdef:159> cmd=alias 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_alias 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_aliases
+compinit:498> _i_name=_aliases 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ unalias = -[pPkK](n|) ]]
+compinit:509> compdef -na _aliases unalias
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _aliases = *=* ]]
+compdef:79> func=_aliases 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _aliases
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unalias = -N ]]
+compdef:134> [[ unalias = -p ]]
+compdef:136> [[ unalias = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unalias = *=* ]]
+compdef:159> cmd=unalias 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_aliases 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_all_labels
+compinit:498> _i_name=_all_labels 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _all_labels
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_all_matches
+compinit:498> _i_name=_all_matches 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _all_matches
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_alternative
+compinit:498> _i_name=_alternative 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _alternative
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_analyseplugin
+compinit:498> _i_name=_analyseplugin 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ analyseplugin = -[pPkK](n|) ]]
+compinit:509> compdef -na _analyseplugin analyseplugin
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _analyseplugin = *=* ]]
+compdef:79> func=_analyseplugin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _analyseplugin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ analyseplugin = -N ]]
+compdef:134> [[ analyseplugin = -p ]]
+compdef:136> [[ analyseplugin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ analyseplugin = *=* ]]
+compdef:159> cmd=analyseplugin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_analyseplugin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ant
+compinit:498> _i_name=_ant 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ant = -[pPkK](n|) ]]
+compinit:509> compdef -na _ant ant -value-,ANT_ARGS,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ant = *=* ]]
+compdef:79> func=_ant 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ant
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ ant = -N ]]
+compdef:134> [[ ant = -p ]]
+compdef:136> [[ ant = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ant = *=* ]]
+compdef:159> cmd=ant 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ant 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,ANT_ARGS,-default- = -N ]]
+compdef:134> [[ -value-,ANT_ARGS,-default- = -p ]]
+compdef:136> [[ -value-,ANT_ARGS,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,ANT_ARGS,-default- = *=* ]]
+compdef:159> cmd=-value-,ANT_ARGS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ant 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_antiword
+compinit:498> _i_name=_antiword 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ antiword = -[pPkK](n|) ]]
+compinit:509> compdef -na _antiword antiword
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _antiword = *=* ]]
+compdef:79> func=_antiword 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _antiword
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ antiword = -N ]]
+compdef:134> [[ antiword = -p ]]
+compdef:136> [[ antiword = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ antiword = *=* ]]
+compdef:159> cmd=antiword 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_antiword 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_apachectl
+compinit:498> _i_name=_apachectl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ apachectl = -[pPkK](n|) ]]
+compinit:509> compdef -na _apachectl apachectl apache2ctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _apachectl = *=* ]]
+compdef:79> func=_apachectl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _apachectl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ apachectl = -N ]]
+compdef:134> [[ apachectl = -p ]]
+compdef:136> [[ apachectl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apachectl = *=* ]]
+compdef:159> cmd=apachectl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apachectl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ apache2ctl = -N ]]
+compdef:134> [[ apache2ctl = -p ]]
+compdef:136> [[ apache2ctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apache2ctl = *=* ]]
+compdef:159> cmd=apache2ctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apachectl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_apm
+compinit:498> _i_name=_apm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ apm = -[pPkK](n|) ]]
+compinit:509> compdef -na _apm apm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _apm = *=* ]]
+compdef:79> func=_apm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _apm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ apm = -N ]]
+compdef:134> [[ apm = -p ]]
+compdef:136> [[ apm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apm = *=* ]]
+compdef:159> cmd=apm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_approximate
+compinit:498> _i_name=_approximate 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _approximate
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_apt
+compinit:498> _i_name=_apt 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ apt = -[pPkK](n|) ]]
+compinit:509> compdef -na _apt apt apt-get apt-cache apt-cdrom apt-config apt-mark
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _apt = *=* ]]
+compdef:79> func=_apt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _apt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ apt = -N ]]
+compdef:134> [[ apt = -p ]]
+compdef:136> [[ apt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt = *=* ]]
+compdef:159> cmd=apt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ apt-get = -N ]]
+compdef:134> [[ apt-get = -p ]]
+compdef:136> [[ apt-get = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-get = *=* ]]
+compdef:159> cmd=apt-get 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ apt-cache = -N ]]
+compdef:134> [[ apt-cache = -p ]]
+compdef:136> [[ apt-cache = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-cache = *=* ]]
+compdef:159> cmd=apt-cache 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ apt-cdrom = -N ]]
+compdef:134> [[ apt-cdrom = -p ]]
+compdef:136> [[ apt-cdrom = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-cdrom = *=* ]]
+compdef:159> cmd=apt-cdrom 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ apt-config = -N ]]
+compdef:134> [[ apt-config = -p ]]
+compdef:136> [[ apt-config = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-config = *=* ]]
+compdef:159> cmd=apt-config 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ apt-mark = -N ]]
+compdef:134> [[ apt-mark = -p ]]
+compdef:136> [[ apt-mark = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-mark = *=* ]]
+compdef:159> cmd=apt-mark 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_apt-file
+compinit:498> _i_name=_apt-file 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ apt-file = -[pPkK](n|) ]]
+compinit:509> compdef -na _apt-file apt-file
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _apt-file = *=* ]]
+compdef:79> func=_apt-file 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _apt-file
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ apt-file = -N ]]
+compdef:134> [[ apt-file = -p ]]
+compdef:136> [[ apt-file = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-file = *=* ]]
+compdef:159> cmd=apt-file 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt-file 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_aptitude
+compinit:498> _i_name=_aptitude 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ aptitude = -[pPkK](n|) ]]
+compinit:509> compdef -na _aptitude aptitude
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _aptitude = *=* ]]
+compdef:79> func=_aptitude 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _aptitude
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ aptitude = -N ]]
+compdef:134> [[ aptitude = -p ]]
+compdef:136> [[ aptitude = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ aptitude = *=* ]]
+compdef:159> cmd=aptitude 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_aptitude 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_apt-move
+compinit:498> _i_name=_apt-move 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ apt-move = -[pPkK](n|) ]]
+compinit:509> compdef -na _apt-move apt-move
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _apt-move = *=* ]]
+compdef:79> func=_apt-move 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _apt-move
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ apt-move = -N ]]
+compdef:134> [[ apt-move = -p ]]
+compdef:136> [[ apt-move = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-move = *=* ]]
+compdef:159> cmd=apt-move 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt-move 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_apt-show-versions
+compinit:498> _i_name=_apt-show-versions 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ apt-show-versions = -[pPkK](n|) ]]
+compinit:509> compdef -na _apt-show-versions apt-show-versions
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _apt-show-versions = *=* ]]
+compdef:79> func=_apt-show-versions 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _apt-show-versions
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ apt-show-versions = -N ]]
+compdef:134> [[ apt-show-versions = -p ]]
+compdef:136> [[ apt-show-versions = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apt-show-versions = *=* ]]
+compdef:159> cmd=apt-show-versions 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_apt-show-versions 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_arch_archives
+compinit:498> _i_name=_arch_archives 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _arch_archives
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_arch_namespace
+compinit:498> _i_name=_arch_namespace 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _arch_namespace
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_arg_compile
+compinit:498> _i_name=_arg_compile 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _arg_compile
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_arguments
+compinit:498> _i_name=_arguments 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _arguments
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_arp
+compinit:498> _i_name=_arp 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ arp = -[pPkK](n|) ]]
+compinit:509> compdef -na _arp arp
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _arp = *=* ]]
+compdef:79> func=_arp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _arp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ arp = -N ]]
+compdef:134> [[ arp = -p ]]
+compdef:136> [[ arp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ arp = *=* ]]
+compdef:159> cmd=arp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_arp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_arping
+compinit:498> _i_name=_arping 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ arping = -[pPkK](n|) ]]
+compinit:509> compdef -na _arping arping
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _arping = *=* ]]
+compdef:79> func=_arping 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _arping
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ arping = -N ]]
+compdef:134> [[ arping = -p ]]
+compdef:136> [[ arping = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ arping = *=* ]]
+compdef:159> cmd=arping 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_arping 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_arrays
+compinit:498> _i_name=_arrays 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ shift = -[pPkK](n|) ]]
+compinit:509> compdef -na _arrays shift
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _arrays = *=* ]]
+compdef:79> func=_arrays 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _arrays
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ shift = -N ]]
+compdef:134> [[ shift = -p ]]
+compdef:136> [[ shift = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ shift = *=* ]]
+compdef:159> cmd=shift 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_arrays 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_assign
+compinit:498> _i_name=_assign 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -assign-parameter- = -[pPkK](n|) ]]
+compinit:509> compdef -na _assign -assign-parameter-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _assign = *=* ]]
+compdef:79> func=_assign 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _assign
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -assign-parameter- = -N ]]
+compdef:134> [[ -assign-parameter- = -p ]]
+compdef:136> [[ -assign-parameter- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -assign-parameter- = *=* ]]
+compdef:159> cmd=-assign-parameter- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_assign 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_at
+compinit:498> _i_name=_at 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ atrm = -[pPkK](n|) ]]
+compinit:509> compdef -na _at atrm atq at batch
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _at = *=* ]]
+compdef:79> func=_at 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _at
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ atrm = -N ]]
+compdef:134> [[ atrm = -p ]]
+compdef:136> [[ atrm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ atrm = *=* ]]
+compdef:159> cmd=atrm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_at 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ atq = -N ]]
+compdef:134> [[ atq = -p ]]
+compdef:136> [[ atq = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ atq = *=* ]]
+compdef:159> cmd=atq 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_at 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ at = -N ]]
+compdef:134> [[ at = -p ]]
+compdef:136> [[ at = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ at = *=* ]]
+compdef:159> cmd=at 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_at 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ batch = -N ]]
+compdef:134> [[ batch = -p ]]
+compdef:136> [[ batch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ batch = *=* ]]
+compdef:159> cmd=batch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_at 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_attr
+compinit:498> _i_name=_attr 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ attr = -[pPkK](n|) ]]
+compinit:509> compdef -na _attr attr getfattr setfattr
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _attr = *=* ]]
+compdef:79> func=_attr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _attr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ attr = -N ]]
+compdef:134> [[ attr = -p ]]
+compdef:136> [[ attr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ attr = *=* ]]
+compdef:159> cmd=attr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_attr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ getfattr = -N ]]
+compdef:134> [[ getfattr = -p ]]
+compdef:136> [[ getfattr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getfattr = *=* ]]
+compdef:159> cmd=getfattr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_attr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ setfattr = -N ]]
+compdef:134> [[ setfattr = -p ]]
+compdef:136> [[ setfattr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ setfattr = *=* ]]
+compdef:159> cmd=setfattr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_attr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_augeas
+compinit:498> _i_name=_augeas 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ augtool = -[pPkK](n|) ]]
+compinit:509> compdef -na _augeas augtool
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _augeas = *=* ]]
+compdef:79> func=_augeas 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _augeas
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ augtool = -N ]]
+compdef:134> [[ augtool = -p ]]
+compdef:136> [[ augtool = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ augtool = *=* ]]
+compdef:159> cmd=augtool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_augeas 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_auto-apt
+compinit:498> _i_name=_auto-apt 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ auto-apt = -[pPkK](n|) ]]
+compinit:509> compdef -na _auto-apt auto-apt
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _auto-apt = *=* ]]
+compdef:79> func=_auto-apt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _auto-apt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ auto-apt = -N ]]
+compdef:134> [[ auto-apt = -p ]]
+compdef:136> [[ auto-apt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ auto-apt = *=* ]]
+compdef:159> cmd=auto-apt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_auto-apt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_autocd
+compinit:498> _i_name=_autocd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -command- = -[pPkK](n|) ]]
+compinit:509> compdef -na _autocd -command-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _autocd = *=* ]]
+compdef:79> func=_autocd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _autocd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -command- = -N ]]
+compdef:134> [[ -command- = -p ]]
+compdef:136> [[ -command- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -command- = *=* ]]
+compdef:159> cmd=-command- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_autocd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_awk
+compinit:498> _i_name=_awk 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ awk = -[pPkK](n|) ]]
+compinit:509> compdef -na _awk awk gawk nawk
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _awk = *=* ]]
+compdef:79> func=_awk 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _awk
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ awk = -N ]]
+compdef:134> [[ awk = -p ]]
+compdef:136> [[ awk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ awk = *=* ]]
+compdef:159> cmd=awk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_awk 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ gawk = -N ]]
+compdef:134> [[ gawk = -p ]]
+compdef:136> [[ gawk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gawk = *=* ]]
+compdef:159> cmd=gawk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_awk 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ nawk = -N ]]
+compdef:134> [[ nawk = -p ]]
+compdef:136> [[ nawk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nawk = *=* ]]
+compdef:159> cmd=nawk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_awk 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_axi-cache
+compinit:498> _i_name=_axi-cache 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ axi-cache = -[pPkK](n|) ]]
+compinit:509> compdef -na _axi-cache axi-cache
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _axi-cache = *=* ]]
+compdef:79> func=_axi-cache 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _axi-cache
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ axi-cache = -N ]]
+compdef:134> [[ axi-cache = -p ]]
+compdef:136> [[ axi-cache = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ axi-cache = *=* ]]
+compdef:159> cmd=axi-cache 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_axi-cache 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_basename
+compinit:498> _i_name=_basename 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ basename = -[pPkK](n|) ]]
+compinit:509> compdef -na _basename basename gbasename
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _basename = *=* ]]
+compdef:79> func=_basename 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _basename
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ basename = -N ]]
+compdef:134> [[ basename = -p ]]
+compdef:136> [[ basename = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ basename = *=* ]]
+compdef:159> cmd=basename 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_basename 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gbasename = -N ]]
+compdef:134> [[ gbasename = -p ]]
+compdef:136> [[ gbasename = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gbasename = *=* ]]
+compdef:159> cmd=gbasename 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_basename 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bash_completions
+compinit:498> _i_name=_bash_completions 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -K = -[pPkK](n|) ]]
+compinit:507> compdef -Kna _bash_completions _bash_complete-word complete-word '\e~' _bash_list-choices list-choices '^X~'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case K (a)
+compdef:15> case K (n)
+compdef:15> case K ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ K = p ]]
+compdef:26> [[ K = P ]]
+compdef:28> [[ K = K ]]
+compdef:29> type=widgetkey 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bash_completions = *=* ]]
+compdef:79> func=_bash_completions 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bash_completions
+compdef:81> shift
+compdef:83> case widgetkey (widgetkey)
+compdef:85> [[ -n _bash_complete-word ]]
+compdef:86> [[ 6 -lt 3 ]]
+compdef:90> [[ _bash_complete-word = _* ]]
+compdef:91> [[ complete-word = .* ]]
+compdef:91> 2=.complete-word 
+compdef:92> [[ .complete-word = .menu-select ]]
+compdef:93> zle -C _bash_complete-word .complete-word _bash_completions
+compdef:94> [[ -n yes ]]
+compdef:95> bindkey '\e~'
+compdef:95> IFS=$' \t' +compdef:95> read -A opt
+compdef:96> [[ undefined-key = undefined-key ]]
+compdef:96> bindkey '\e~' _bash_complete-word
+compdef:100> shift 3
+compdef:85> [[ -n _bash_list-choices ]]
+compdef:86> [[ 3 -lt 3 ]]
+compdef:90> [[ _bash_list-choices = _* ]]
+compdef:91> [[ list-choices = .* ]]
+compdef:91> 2=.list-choices 
+compdef:92> [[ .list-choices = .menu-select ]]
+compdef:93> zle -C _bash_list-choices .list-choices _bash_completions
+compdef:94> [[ -n yes ]]
+compdef:95> bindkey '^X~'
+compdef:95> IFS=$' \t' +compdef:95> read -A opt
+compdef:96> [[ undefined-key = undefined-key ]]
+compdef:96> bindkey '^X~' _bash_list-choices
+compdef:100> shift 3
+compdef:85> [[ -n '' ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_baudrates
+compinit:498> _i_name=_baudrates 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _baudrates
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_baz
+compinit:498> _i_name=_baz 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ baz = -[pPkK](n|) ]]
+compinit:509> compdef -na _baz baz
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _baz = *=* ]]
+compdef:79> func=_baz 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _baz
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ baz = -N ]]
+compdef:134> [[ baz = -p ]]
+compdef:136> [[ baz = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ baz = *=* ]]
+compdef:159> cmd=baz 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_baz 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_beadm
+compinit:498> _i_name=_beadm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ beadm = -[pPkK](n|) ]]
+compinit:509> compdef -na _beadm beadm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _beadm = *=* ]]
+compdef:79> func=_beadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _beadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ beadm = -N ]]
+compdef:134> [[ beadm = -p ]]
+compdef:136> [[ beadm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ beadm = *=* ]]
+compdef:159> cmd=beadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_beadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_beep
+compinit:498> _i_name=_beep 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ beep = -[pPkK](n|) ]]
+compinit:509> compdef -na _beep beep
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _beep = *=* ]]
+compdef:79> func=_beep 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _beep
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ beep = -N ]]
+compdef:134> [[ beep = -p ]]
+compdef:136> [[ beep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ beep = *=* ]]
+compdef:159> cmd=beep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_beep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_be_name
+compinit:498> _i_name=_be_name 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _be_name
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bibtex
+compinit:498> _i_name=_bibtex 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bibtex = -[pPkK](n|) ]]
+compinit:509> compdef -na _bibtex bibtex
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bibtex = *=* ]]
+compdef:79> func=_bibtex 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bibtex
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bibtex = -N ]]
+compdef:134> [[ bibtex = -p ]]
+compdef:136> [[ bibtex = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bibtex = *=* ]]
+compdef:159> cmd=bibtex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bibtex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bind_addresses
+compinit:498> _i_name=_bind_addresses 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _bind_addresses
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bindkey
+compinit:498> _i_name=_bindkey 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bindkey = -[pPkK](n|) ]]
+compinit:509> compdef -na _bindkey bindkey
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bindkey = *=* ]]
+compdef:79> func=_bindkey 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bindkey
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bindkey = -N ]]
+compdef:134> [[ bindkey = -p ]]
+compdef:136> [[ bindkey = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bindkey = *=* ]]
+compdef:159> cmd=bindkey 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bindkey 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bison
+compinit:498> _i_name=_bison 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bison = -[pPkK](n|) ]]
+compinit:509> compdef -na _bison bison
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bison = *=* ]]
+compdef:79> func=_bison 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bison
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bison = -N ]]
+compdef:134> [[ bison = -p ]]
+compdef:136> [[ bison = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bison = *=* ]]
+compdef:159> cmd=bison 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bison 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bittorrent
+compinit:498> _i_name=_bittorrent 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ btdownloadcurses = -[pPkK](n|) ]]
+compinit:509> compdef -na _bittorrent btdownloadcurses btdownloadheadless btdownloadgui btlaunchmany btlaunchmanycurses bttrack btshowmetainfo btreannounce btmakemetafile btrename
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 12  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 11  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bittorrent = *=* ]]
+compdef:79> func=_bittorrent 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bittorrent
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  10  ))
+compdef:132> [[ btdownloadcurses = -N ]]
+compdef:134> [[ btdownloadcurses = -p ]]
+compdef:136> [[ btdownloadcurses = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btdownloadcurses = *=* ]]
+compdef:159> cmd=btdownloadcurses 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ btdownloadheadless = -N ]]
+compdef:134> [[ btdownloadheadless = -p ]]
+compdef:136> [[ btdownloadheadless = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btdownloadheadless = *=* ]]
+compdef:159> cmd=btdownloadheadless 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ btdownloadgui = -N ]]
+compdef:134> [[ btdownloadgui = -p ]]
+compdef:136> [[ btdownloadgui = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btdownloadgui = *=* ]]
+compdef:159> cmd=btdownloadgui 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ btlaunchmany = -N ]]
+compdef:134> [[ btlaunchmany = -p ]]
+compdef:136> [[ btlaunchmany = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btlaunchmany = *=* ]]
+compdef:159> cmd=btlaunchmany 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ btlaunchmanycurses = -N ]]
+compdef:134> [[ btlaunchmanycurses = -p ]]
+compdef:136> [[ btlaunchmanycurses = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btlaunchmanycurses = *=* ]]
+compdef:159> cmd=btlaunchmanycurses 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ bttrack = -N ]]
+compdef:134> [[ bttrack = -p ]]
+compdef:136> [[ bttrack = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bttrack = *=* ]]
+compdef:159> cmd=bttrack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ btshowmetainfo = -N ]]
+compdef:134> [[ btshowmetainfo = -p ]]
+compdef:136> [[ btshowmetainfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btshowmetainfo = *=* ]]
+compdef:159> cmd=btshowmetainfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ btreannounce = -N ]]
+compdef:134> [[ btreannounce = -p ]]
+compdef:136> [[ btreannounce = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btreannounce = *=* ]]
+compdef:159> cmd=btreannounce 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ btmakemetafile = -N ]]
+compdef:134> [[ btmakemetafile = -p ]]
+compdef:136> [[ btmakemetafile = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btmakemetafile = *=* ]]
+compdef:159> cmd=btmakemetafile 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ btrename = -N ]]
+compdef:134> [[ btrename = -p ]]
+compdef:136> [[ btrename = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btrename = *=* ]]
+compdef:159> cmd=btrename 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bittorrent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bogofilter
+compinit:498> _i_name=_bogofilter 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bogoutil = -[pPkK](n|) ]]
+compinit:509> compdef -na _bogofilter bogoutil bogotune bogofilter
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bogofilter = *=* ]]
+compdef:79> func=_bogofilter 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bogofilter
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ bogoutil = -N ]]
+compdef:134> [[ bogoutil = -p ]]
+compdef:136> [[ bogoutil = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bogoutil = *=* ]]
+compdef:159> cmd=bogoutil 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bogofilter 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ bogotune = -N ]]
+compdef:134> [[ bogotune = -p ]]
+compdef:136> [[ bogotune = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bogotune = *=* ]]
+compdef:159> cmd=bogotune 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bogofilter 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ bogofilter = -N ]]
+compdef:134> [[ bogofilter = -p ]]
+compdef:136> [[ bogofilter = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bogofilter = *=* ]]
+compdef:159> cmd=bogofilter 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bogofilter 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bpython
+compinit:498> _i_name=_bpython 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bpython = -[pPkK](n|) ]]
+compinit:509> compdef -na _bpython bpython bpython-gtk bpython-urwid bpython2 bpython2-gtk bpython2-urwid bpython3 bpython3-gtk bpython3-urwid
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 11  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 10  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bpython = *=* ]]
+compdef:79> func=_bpython 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bpython
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  9  ))
+compdef:132> [[ bpython = -N ]]
+compdef:134> [[ bpython = -p ]]
+compdef:136> [[ bpython = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bpython = *=* ]]
+compdef:159> cmd=bpython 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bpython 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ bpython-gtk = -N ]]
+compdef:134> [[ bpython-gtk = -p ]]
+compdef:136> [[ bpython-gtk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bpython-gtk = *=* ]]
+compdef:159> cmd=bpython-gtk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bpython 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ bpython-urwid = -N ]]
+compdef:134> [[ bpython-urwid = -p ]]
+compdef:136> [[ bpython-urwid = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bpython-urwid = *=* ]]
+compdef:159> cmd=bpython-urwid 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bpython 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ bpython2 = -N ]]
+compdef:134> [[ bpython2 = -p ]]
+compdef:136> [[ bpython2 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bpython2 = *=* ]]
+compdef:159> cmd=bpython2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bpython 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ bpython2-gtk = -N ]]
+compdef:134> [[ bpython2-gtk = -p ]]
+compdef:136> [[ bpython2-gtk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bpython2-gtk = *=* ]]
+compdef:159> cmd=bpython2-gtk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bpython 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ bpython2-urwid = -N ]]
+compdef:134> [[ bpython2-urwid = -p ]]
+compdef:136> [[ bpython2-urwid = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bpython2-urwid = *=* ]]
+compdef:159> cmd=bpython2-urwid 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bpython 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ bpython3 = -N ]]
+compdef:134> [[ bpython3 = -p ]]
+compdef:136> [[ bpython3 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bpython3 = *=* ]]
+compdef:159> cmd=bpython3 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bpython 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ bpython3-gtk = -N ]]
+compdef:134> [[ bpython3-gtk = -p ]]
+compdef:136> [[ bpython3-gtk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bpython3-gtk = *=* ]]
+compdef:159> cmd=bpython3-gtk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bpython 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ bpython3-urwid = -N ]]
+compdef:134> [[ bpython3-urwid = -p ]]
+compdef:136> [[ bpython3-urwid = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bpython3-urwid = *=* ]]
+compdef:159> cmd=bpython3-urwid 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bpython 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_brace_parameter
+compinit:498> _i_name=_brace_parameter 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -brace-parameter- = -[pPkK](n|) ]]
+compinit:509> compdef -na _brace_parameter -brace-parameter-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _brace_parameter = *=* ]]
+compdef:79> func=_brace_parameter 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _brace_parameter
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -brace-parameter- = -N ]]
+compdef:134> [[ -brace-parameter- = -p ]]
+compdef:136> [[ -brace-parameter- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -brace-parameter- = *=* ]]
+compdef:159> cmd=-brace-parameter- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_brace_parameter 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_brctl
+compinit:498> _i_name=_brctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ brctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _brctl brctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _brctl = *=* ]]
+compdef:79> func=_brctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _brctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ brctl = -N ]]
+compdef:134> [[ brctl = -p ]]
+compdef:136> [[ brctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ brctl = *=* ]]
+compdef:159> cmd=brctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_brctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bsdconfig
+compinit:498> _i_name=_bsdconfig 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bsdconfig = -[pPkK](n|) ]]
+compinit:509> compdef -na _bsdconfig bsdconfig
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bsdconfig = *=* ]]
+compdef:79> func=_bsdconfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bsdconfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bsdconfig = -N ]]
+compdef:134> [[ bsdconfig = -p ]]
+compdef:136> [[ bsdconfig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bsdconfig = *=* ]]
+compdef:159> cmd=bsdconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bsdconfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bsdinstall
+compinit:498> _i_name=_bsdinstall 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bsdinstall = -[pPkK](n|) ]]
+compinit:509> compdef -na _bsdinstall bsdinstall
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bsdinstall = *=* ]]
+compdef:79> func=_bsdinstall 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bsdinstall
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bsdinstall = -N ]]
+compdef:134> [[ bsdinstall = -p ]]
+compdef:136> [[ bsdinstall = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bsdinstall = *=* ]]
+compdef:159> cmd=bsdinstall 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bsdinstall 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bsd_pkg
+compinit:498> _i_name=_bsd_pkg 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pkg_add = -[pPkK](n|) ]]
+compinit:509> compdef -na _bsd_pkg pkg_add pkg_create pkg_delete pkg_info
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bsd_pkg = *=* ]]
+compdef:79> func=_bsd_pkg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bsd_pkg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ pkg_add = -N ]]
+compdef:134> [[ pkg_add = -p ]]
+compdef:136> [[ pkg_add = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkg_add = *=* ]]
+compdef:159> cmd=pkg_add 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bsd_pkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ pkg_create = -N ]]
+compdef:134> [[ pkg_create = -p ]]
+compdef:136> [[ pkg_create = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkg_create = *=* ]]
+compdef:159> cmd=pkg_create 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bsd_pkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ pkg_delete = -N ]]
+compdef:134> [[ pkg_delete = -p ]]
+compdef:136> [[ pkg_delete = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkg_delete = *=* ]]
+compdef:159> cmd=pkg_delete 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bsd_pkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ pkg_info = -N ]]
+compdef:134> [[ pkg_info = -p ]]
+compdef:136> [[ pkg_info = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkg_info = *=* ]]
+compdef:159> cmd=pkg_info 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bsd_pkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_btrfs
+compinit:498> _i_name=_btrfs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ btrfs = -[pPkK](n|) ]]
+compinit:509> compdef -na _btrfs btrfs
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _btrfs = *=* ]]
+compdef:79> func=_btrfs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _btrfs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ btrfs = -N ]]
+compdef:134> [[ btrfs = -p ]]
+compdef:136> [[ btrfs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ btrfs = *=* ]]
+compdef:159> cmd=btrfs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_btrfs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bts
+compinit:498> _i_name=_bts 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bts = -[pPkK](n|) ]]
+compinit:509> compdef -na _bts bts
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bts = *=* ]]
+compdef:79> func=_bts 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bts
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bts = -N ]]
+compdef:134> [[ bts = -p ]]
+compdef:136> [[ bts = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bts = *=* ]]
+compdef:159> cmd=bts 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bug
+compinit:498> _i_name=_bug 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bug = -[pPkK](n|) ]]
+compinit:509> compdef -na _bug bug reportbug querybts
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bug = *=* ]]
+compdef:79> func=_bug 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bug
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ bug = -N ]]
+compdef:134> [[ bug = -p ]]
+compdef:136> [[ bug = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bug = *=* ]]
+compdef:159> cmd=bug 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bug 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ reportbug = -N ]]
+compdef:134> [[ reportbug = -p ]]
+compdef:136> [[ reportbug = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ reportbug = *=* ]]
+compdef:159> cmd=reportbug 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bug 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ querybts = -N ]]
+compdef:134> [[ querybts = -p ]]
+compdef:136> [[ querybts = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ querybts = *=* ]]
+compdef:159> cmd=querybts 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bug 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_builtin
+compinit:498> _i_name=_builtin 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ builtin = -[pPkK](n|) ]]
+compinit:509> compdef -na _builtin builtin
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _builtin = *=* ]]
+compdef:79> func=_builtin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _builtin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ builtin = -N ]]
+compdef:134> [[ builtin = -p ]]
+compdef:136> [[ builtin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ builtin = *=* ]]
+compdef:159> cmd=builtin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_builtin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bzip2
+compinit:498> _i_name=_bzip2 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bzip2 = -[pPkK](n|) ]]
+compinit:509> compdef -na _bzip2 bzip2 bunzip2 'bzcat=bunzip2' bzip2recover '-redirect-,<,bunzip2=bunzip2' '-redirect-,>,bzip2=bunzip2' '-redirect-,<,bzip2=bzip2'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 9  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 8  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bzip2 = *=* ]]
+compdef:79> func=_bzip2 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bzip2
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  7  ))
+compdef:132> [[ bzip2 = -N ]]
+compdef:134> [[ bzip2 = -p ]]
+compdef:136> [[ bzip2 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bzip2 = *=* ]]
+compdef:159> cmd=bzip2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ bunzip2 = -N ]]
+compdef:134> [[ bunzip2 = -p ]]
+compdef:136> [[ bunzip2 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bunzip2 = *=* ]]
+compdef:159> cmd=bunzip2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ 'bzcat=bunzip2' = -N ]]
+compdef:134> [[ 'bzcat=bunzip2' = -p ]]
+compdef:136> [[ 'bzcat=bunzip2' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'bzcat=bunzip2' = *=* ]]
+compdef:156> cmd=bzcat 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=bunzip2 
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ bzip2recover = -N ]]
+compdef:134> [[ bzip2recover = -p ]]
+compdef:136> [[ bzip2recover = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bzip2recover = *=* ]]
+compdef:159> cmd=bzip2recover 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ '-redirect-,<,bunzip2=bunzip2' = -N ]]
+compdef:134> [[ '-redirect-,<,bunzip2=bunzip2' = -p ]]
+compdef:136> [[ '-redirect-,<,bunzip2=bunzip2' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,bunzip2=bunzip2' = *=* ]]
+compdef:156> cmd='-redirect-,<,bunzip2' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=bunzip2 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ '-redirect-,>,bzip2=bunzip2' = -N ]]
+compdef:134> [[ '-redirect-,>,bzip2=bunzip2' = -p ]]
+compdef:136> [[ '-redirect-,>,bzip2=bunzip2' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,>,bzip2=bunzip2' = *=* ]]
+compdef:156> cmd='-redirect-,>,bzip2' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=bunzip2 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-redirect-,<,bzip2=bzip2' = -N ]]
+compdef:134> [[ '-redirect-,<,bzip2=bzip2' = -p ]]
+compdef:136> [[ '-redirect-,<,bzip2=bzip2' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,bzip2=bzip2' = *=* ]]
+compdef:156> cmd='-redirect-,<,bzip2' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzip2 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=bzip2 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_bzr
+compinit:498> _i_name=_bzr 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bzr = -[pPkK](n|) ]]
+compinit:509> compdef -na _bzr bzr
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _bzr = *=* ]]
+compdef:79> func=_bzr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _bzr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bzr = -N ]]
+compdef:134> [[ bzr = -p ]]
+compdef:136> [[ bzr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bzr = *=* ]]
+compdef:159> cmd=bzr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_bzr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cabal
+compinit:498> _i_name=_cabal 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cabal = -[pPkK](n|) ]]
+compinit:509> compdef -na _cabal cabal
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cabal = *=* ]]
+compdef:79> func=_cabal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cabal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cabal = -N ]]
+compdef:134> [[ cabal = -p ]]
+compdef:136> [[ cabal = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cabal = *=* ]]
+compdef:159> cmd=cabal 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cabal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cache_invalid
+compinit:498> _i_name=_cache_invalid 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _cache_invalid
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cal
+compinit:498> _i_name=_cal 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cal = -[pPkK](n|) ]]
+compinit:509> compdef -na _cal cal ncal
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cal = *=* ]]
+compdef:79> func=_cal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cal = -N ]]
+compdef:134> [[ cal = -p ]]
+compdef:136> [[ cal = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cal = *=* ]]
+compdef:159> cmd=cal 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ncal = -N ]]
+compdef:134> [[ ncal = -p ]]
+compdef:136> [[ ncal = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ncal = *=* ]]
+compdef:159> cmd=ncal 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_calendar
+compinit:498> _i_name=_calendar 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ calendar = -[pPkK](n|) ]]
+compinit:509> compdef -na _calendar calendar
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _calendar = *=* ]]
+compdef:79> func=_calendar 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _calendar
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ calendar = -N ]]
+compdef:134> [[ calendar = -p ]]
+compdef:136> [[ calendar = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ calendar = *=* ]]
+compdef:159> cmd=calendar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_calendar 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_call_function
+compinit:498> _i_name=_call_function 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _call_function
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_call_program
+compinit:498> _i_name=_call_program 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz +X _call_program
+compinit:514> [[ +X != \ # ]]
+compinit:514> _compautos[${_i_name}]=+X 
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_canonical_paths
+compinit:498> _i_name=_canonical_paths 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _canonical_paths
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cat
+compinit:498> _i_name=_cat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cat = -[pPkK](n|) ]]
+compinit:509> compdef -na _cat cat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cat = *=* ]]
+compdef:79> func=_cat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cat = -N ]]
+compdef:134> [[ cat = -p ]]
+compdef:136> [[ cat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cat = *=* ]]
+compdef:159> cmd=cat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ccal
+compinit:498> _i_name=_ccal 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ccal = -[pPkK](n|) ]]
+compinit:509> compdef -na _ccal ccal
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ccal = *=* ]]
+compdef:79> func=_ccal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ccal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ccal = -N ]]
+compdef:134> [[ ccal = -p ]]
+compdef:136> [[ ccal = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ccal = *=* ]]
+compdef:159> cmd=ccal 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ccal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cd
+compinit:498> _i_name=_cd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cd = -[pPkK](n|) ]]
+compinit:509> compdef -na _cd cd chdir pushd
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cd = *=* ]]
+compdef:79> func=_cd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ cd = -N ]]
+compdef:134> [[ cd = -p ]]
+compdef:136> [[ cd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cd = *=* ]]
+compdef:159> cmd=cd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ chdir = -N ]]
+compdef:134> [[ chdir = -p ]]
+compdef:136> [[ chdir = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chdir = *=* ]]
+compdef:159> cmd=chdir 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ pushd = -N ]]
+compdef:134> [[ pushd = -p ]]
+compdef:136> [[ pushd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pushd = *=* ]]
+compdef:159> cmd=pushd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cdbs-edit-patch
+compinit:498> _i_name=_cdbs-edit-patch 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cdbs-edit-patch = -[pPkK](n|) ]]
+compinit:509> compdef -na _cdbs-edit-patch cdbs-edit-patch
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cdbs-edit-patch = *=* ]]
+compdef:79> func=_cdbs-edit-patch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cdbs-edit-patch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cdbs-edit-patch = -N ]]
+compdef:134> [[ cdbs-edit-patch = -p ]]
+compdef:136> [[ cdbs-edit-patch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cdbs-edit-patch = *=* ]]
+compdef:159> cmd=cdbs-edit-patch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cdbs-edit-patch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cdcd
+compinit:498> _i_name=_cdcd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cdcd = -[pPkK](n|) ]]
+compinit:509> compdef -na _cdcd cdcd
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cdcd = *=* ]]
+compdef:79> func=_cdcd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cdcd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cdcd = -N ]]
+compdef:134> [[ cdcd = -p ]]
+compdef:136> [[ cdcd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cdcd = *=* ]]
+compdef:159> cmd=cdcd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cdcd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cdr
+compinit:498> _i_name=_cdr 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cdr = -[pPkK](n|) ]]
+compinit:509> compdef -na _cdr cdr
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cdr = *=* ]]
+compdef:79> func=_cdr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cdr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cdr = -N ]]
+compdef:134> [[ cdr = -p ]]
+compdef:136> [[ cdr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cdr = *=* ]]
+compdef:159> cmd=cdr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cdr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cdrdao
+compinit:498> _i_name=_cdrdao 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cdrdao = -[pPkK](n|) ]]
+compinit:509> compdef -na _cdrdao cdrdao
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cdrdao = *=* ]]
+compdef:79> func=_cdrdao 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cdrdao
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cdrdao = -N ]]
+compdef:134> [[ cdrdao = -p ]]
+compdef:136> [[ cdrdao = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cdrdao = *=* ]]
+compdef:159> cmd=cdrdao 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cdrdao 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cdrecord
+compinit:498> _i_name=_cdrecord 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cdrecord = -[pPkK](n|) ]]
+compinit:509> compdef -na _cdrecord cdrecord wodim
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cdrecord = *=* ]]
+compdef:79> func=_cdrecord 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cdrecord
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cdrecord = -N ]]
+compdef:134> [[ cdrecord = -p ]]
+compdef:136> [[ cdrecord = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cdrecord = *=* ]]
+compdef:159> cmd=cdrecord 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cdrecord 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ wodim = -N ]]
+compdef:134> [[ wodim = -p ]]
+compdef:136> [[ wodim = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wodim = *=* ]]
+compdef:159> cmd=wodim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cdrecord 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_chflags
+compinit:498> _i_name=_chflags 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ chflags = -[pPkK](n|) ]]
+compinit:509> compdef -na _chflags chflags
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _chflags = *=* ]]
+compdef:79> func=_chflags 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _chflags
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ chflags = -N ]]
+compdef:134> [[ chflags = -p ]]
+compdef:136> [[ chflags = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chflags = *=* ]]
+compdef:159> cmd=chflags 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chflags 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_chkconfig
+compinit:498> _i_name=_chkconfig 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ chkconfig = -[pPkK](n|) ]]
+compinit:509> compdef -na _chkconfig chkconfig
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _chkconfig = *=* ]]
+compdef:79> func=_chkconfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _chkconfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ chkconfig = -N ]]
+compdef:134> [[ chkconfig = -p ]]
+compdef:136> [[ chkconfig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chkconfig = *=* ]]
+compdef:159> cmd=chkconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chkconfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_chmod
+compinit:498> _i_name=_chmod 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ chmod = -[pPkK](n|) ]]
+compinit:509> compdef -na _chmod chmod gchmod
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _chmod = *=* ]]
+compdef:79> func=_chmod 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _chmod
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ chmod = -N ]]
+compdef:134> [[ chmod = -p ]]
+compdef:136> [[ chmod = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chmod = *=* ]]
+compdef:159> cmd=chmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chmod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gchmod = -N ]]
+compdef:134> [[ gchmod = -p ]]
+compdef:136> [[ gchmod = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gchmod = *=* ]]
+compdef:159> cmd=gchmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chmod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_chown
+compinit:498> _i_name=_chown 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ chown = -[pPkK](n|) ]]
+compinit:509> compdef -na _chown chown chgrp 'zf_chown=chown' 'zf_chgrp=chgrp'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _chown = *=* ]]
+compdef:79> func=_chown 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _chown
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ chown = -N ]]
+compdef:134> [[ chown = -p ]]
+compdef:136> [[ chown = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chown = *=* ]]
+compdef:159> cmd=chown 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chown 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ chgrp = -N ]]
+compdef:134> [[ chgrp = -p ]]
+compdef:136> [[ chgrp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chgrp = *=* ]]
+compdef:159> cmd=chgrp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chown 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ 'zf_chown=chown' = -N ]]
+compdef:134> [[ 'zf_chown=chown' = -p ]]
+compdef:136> [[ 'zf_chown=chown' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'zf_chown=chown' = *=* ]]
+compdef:156> cmd=zf_chown 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chown 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=chown 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'zf_chgrp=chgrp' = -N ]]
+compdef:134> [[ 'zf_chgrp=chgrp' = -p ]]
+compdef:136> [[ 'zf_chgrp=chgrp' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'zf_chgrp=chgrp' = *=* ]]
+compdef:156> cmd=zf_chgrp 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chown 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=chgrp 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_chrt
+compinit:498> _i_name=_chrt 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ chrt = -[pPkK](n|) ]]
+compinit:509> compdef -na _chrt chrt
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _chrt = *=* ]]
+compdef:79> func=_chrt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _chrt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ chrt = -N ]]
+compdef:134> [[ chrt = -p ]]
+compdef:136> [[ chrt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chrt = *=* ]]
+compdef:159> cmd=chrt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chrt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_chsh
+compinit:498> _i_name=_chsh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ chsh = -[pPkK](n|) ]]
+compinit:509> compdef -na _chsh chsh chpass
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _chsh = *=* ]]
+compdef:79> func=_chsh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _chsh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ chsh = -N ]]
+compdef:134> [[ chsh = -p ]]
+compdef:136> [[ chsh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chsh = *=* ]]
+compdef:159> cmd=chsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ chpass = -N ]]
+compdef:134> [[ chpass = -p ]]
+compdef:136> [[ chpass = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chpass = *=* ]]
+compdef:159> cmd=chpass 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_chsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_clay
+compinit:498> _i_name=_clay 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ clay = -[pPkK](n|) ]]
+compinit:509> compdef -na _clay clay
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _clay = *=* ]]
+compdef:79> func=_clay 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _clay
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ clay = -N ]]
+compdef:134> [[ clay = -p ]]
+compdef:136> [[ clay = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ clay = *=* ]]
+compdef:159> cmd=clay 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_clay 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cmdambivalent
+compinit:498> _i_name=_cmdambivalent 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _cmdambivalent
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cmdstring
+compinit:498> _i_name=_cmdstring 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _cmdstring
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cmp
+compinit:498> _i_name=_cmp 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cmp = -[pPkK](n|) ]]
+compinit:509> compdef -na _cmp cmp gcmp
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cmp = *=* ]]
+compdef:79> func=_cmp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cmp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cmp = -N ]]
+compdef:134> [[ cmp = -p ]]
+compdef:136> [[ cmp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cmp = *=* ]]
+compdef:159> cmd=cmp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cmp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gcmp = -N ]]
+compdef:134> [[ gcmp = -p ]]
+compdef:136> [[ gcmp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gcmp = *=* ]]
+compdef:159> cmd=gcmp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cmp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_combination
+compinit:498> _i_name=_combination 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _combination
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_comm
+compinit:498> _i_name=_comm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ comm = -[pPkK](n|) ]]
+compinit:509> compdef -na _comm comm gcomm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _comm = *=* ]]
+compdef:79> func=_comm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _comm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ comm = -N ]]
+compdef:134> [[ comm = -p ]]
+compdef:136> [[ comm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ comm = *=* ]]
+compdef:159> cmd=comm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_comm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gcomm = -N ]]
+compdef:134> [[ gcomm = -p ]]
+compdef:136> [[ gcomm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gcomm = *=* ]]
+compdef:159> cmd=gcomm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_comm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_command
+compinit:498> _i_name=_command 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ command = -[pPkK](n|) ]]
+compinit:509> compdef -na _command command
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _command = *=* ]]
+compdef:79> func=_command 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _command
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ command = -N ]]
+compdef:134> [[ command = -p ]]
+compdef:136> [[ command = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ command = *=* ]]
+compdef:159> cmd=command 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_command 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_command_names
+compinit:498> _i_name=_command_names 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _command_names
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_compadd
+compinit:498> _i_name=_compadd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ compadd = -[pPkK](n|) ]]
+compinit:509> compdef -na _compadd compadd
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _compadd = *=* ]]
+compdef:79> func=_compadd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _compadd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ compadd = -N ]]
+compdef:134> [[ compadd = -p ]]
+compdef:136> [[ compadd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ compadd = *=* ]]
+compdef:159> cmd=compadd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compadd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_compdef
+compinit:498> _i_name=_compdef 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ compdef = -[pPkK](n|) ]]
+compinit:509> compdef -na _compdef compdef
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _compdef = *=* ]]
+compdef:79> func=_compdef 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _compdef
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ compdef = -N ]]
+compdef:134> [[ compdef = -p ]]
+compdef:136> [[ compdef = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ compdef = *=* ]]
+compdef:159> cmd=compdef 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compdef 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_complete
+compinit:498> _i_name=_complete 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _complete
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_complete_debug
+compinit:498> _i_name=_complete_debug 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -k = -[pPkK](n|) ]]
+compinit:507> compdef -kna _complete_debug complete-word '\C-x?'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k = p ]]
+compdef:26> [[ k = P ]]
+compdef:28> [[ k = K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _complete_debug = *=* ]]
+compdef:79> func=_complete_debug 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _complete_debug
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word = .* ]]
+compdef:114> [[ complete-word = menu-select ]]
+compdef:115> zle -C _complete_debug .complete-word _complete_debug
+compdef:117> shift
+compdef:120> i=\C-x?
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-x?'
+compdef:122> IFS=$' \t' +compdef:122> read -A opt
+compdef:123> [[ undefined-key = undefined-key ]]
+compdef:125> bindkey '\C-x?' _complete_debug
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_complete_help
+compinit:498> _i_name=_complete_help 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -k = -[pPkK](n|) ]]
+compinit:507> compdef -kna _complete_help complete-word '\C-xh'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k = p ]]
+compdef:26> [[ k = P ]]
+compdef:28> [[ k = K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _complete_help = *=* ]]
+compdef:79> func=_complete_help 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _complete_help
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word = .* ]]
+compdef:114> [[ complete-word = menu-select ]]
+compdef:115> zle -C _complete_help .complete-word _complete_help
+compdef:117> shift
+compdef:120> i=\C-xh
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-xh'
+compdef:122> IFS=$' \t' +compdef:122> read -A opt
+compdef:123> [[ undefined-key = undefined-key ]]
+compdef:125> bindkey '\C-xh' _complete_help
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_complete_help_generic
+compinit:498> _i_name=_complete_help_generic 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _complete_help_generic
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_completers
+compinit:498> _i_name=_completers 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _completers
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_complete_tag
+compinit:498> _i_name=_complete_tag 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -k = -[pPkK](n|) ]]
+compinit:507> compdef -kna _complete_tag complete-word '\C-xt'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k = p ]]
+compdef:26> [[ k = P ]]
+compdef:28> [[ k = K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _complete_tag = *=* ]]
+compdef:79> func=_complete_tag 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _complete_tag
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word = .* ]]
+compdef:114> [[ complete-word = menu-select ]]
+compdef:115> zle -C _complete_tag .complete-word _complete_tag
+compdef:117> shift
+compdef:120> i=\C-xt
+compdef:121> [[ -n yes ]]
+compdef:122> IFS=$' \t' +compdef:122> read -A opt
+compdef:122> bindkey '\C-xt'
+compdef:123> [[ undefined-key = undefined-key ]]
+compdef:125> bindkey '\C-xt' _complete_tag
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_comp_locale
+compinit:498> _i_name=_comp_locale 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _comp_locale
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_compress
+compinit:498> _i_name=_compress 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ compress = -[pPkK](n|) ]]
+compinit:509> compdef -na _compress compress uncompress '-redirect-,<,uncompress=uncompress' '-redirect-,>,compress=uncompress' '-redirect-,<,compress=compress'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _compress = *=* ]]
+compdef:79> func=_compress 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _compress
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ compress = -N ]]
+compdef:134> [[ compress = -p ]]
+compdef:136> [[ compress = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ compress = *=* ]]
+compdef:159> cmd=compress 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compress 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ uncompress = -N ]]
+compdef:134> [[ uncompress = -p ]]
+compdef:136> [[ uncompress = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uncompress = *=* ]]
+compdef:159> cmd=uncompress 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compress 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ '-redirect-,<,uncompress=uncompress' = -N ]]
+compdef:134> [[ '-redirect-,<,uncompress=uncompress' = -p ]]
+compdef:136> [[ '-redirect-,<,uncompress=uncompress' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,uncompress=uncompress' = *=* ]]
+compdef:156> cmd='-redirect-,<,uncompress' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compress 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=uncompress 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ '-redirect-,>,compress=uncompress' = -N ]]
+compdef:134> [[ '-redirect-,>,compress=uncompress' = -p ]]
+compdef:136> [[ '-redirect-,>,compress=uncompress' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,>,compress=uncompress' = *=* ]]
+compdef:156> cmd='-redirect-,>,compress' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compress 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=uncompress 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-redirect-,<,compress=compress' = -N ]]
+compdef:134> [[ '-redirect-,<,compress=compress' = -p ]]
+compdef:136> [[ '-redirect-,<,compress=compress' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,compress=compress' = *=* ]]
+compdef:156> cmd='-redirect-,<,compress' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_compress 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=compress 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_condition
+compinit:498> _i_name=_condition 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -condition- = -[pPkK](n|) ]]
+compinit:509> compdef -na _condition -condition-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _condition = *=* ]]
+compdef:79> func=_condition 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _condition
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -condition- = -N ]]
+compdef:134> [[ -condition- = -p ]]
+compdef:136> [[ -condition- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -condition- = *=* ]]
+compdef:159> cmd=-condition- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_condition 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_configure
+compinit:498> _i_name=_configure 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ configure = -[pPkK](n|) ]]
+compinit:509> compdef -na _configure configure config.status
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _configure = *=* ]]
+compdef:79> func=_configure 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _configure
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ configure = -N ]]
+compdef:134> [[ configure = -p ]]
+compdef:136> [[ configure = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ configure = *=* ]]
+compdef:159> cmd=configure 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_configure 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ config.status = -N ]]
+compdef:134> [[ config.status = -p ]]
+compdef:136> [[ config.status = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ config.status = *=* ]]
+compdef:159> cmd=config.status 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_configure 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_coreadm
+compinit:498> _i_name=_coreadm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ coreadm = -[pPkK](n|) ]]
+compinit:509> compdef -na _coreadm coreadm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _coreadm = *=* ]]
+compdef:79> func=_coreadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _coreadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ coreadm = -N ]]
+compdef:134> [[ coreadm = -p ]]
+compdef:136> [[ coreadm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ coreadm = *=* ]]
+compdef:159> cmd=coreadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_coreadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_correct
+compinit:498> _i_name=_correct 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _correct
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_correct_filename
+compinit:498> _i_name=_correct_filename 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -k = -[pPkK](n|) ]]
+compinit:507> compdef -kna _correct_filename complete-word '\C-xC'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k = p ]]
+compdef:26> [[ k = P ]]
+compdef:28> [[ k = K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _correct_filename = *=* ]]
+compdef:79> func=_correct_filename 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _correct_filename
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word = .* ]]
+compdef:114> [[ complete-word = menu-select ]]
+compdef:115> zle -C _correct_filename .complete-word _correct_filename
+compdef:117> shift
+compdef:120> i=\C-xC
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-xC'
+compdef:122> IFS=$' \t' +compdef:122> read -A opt
+compdef:123> [[ undefined-key = undefined-key ]]
+compdef:125> bindkey '\C-xC' _correct_filename
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_correct_word
+compinit:498> _i_name=_correct_word 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -k = -[pPkK](n|) ]]
+compinit:507> compdef -kna _correct_word complete-word '\C-xc'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k = p ]]
+compdef:26> [[ k = P ]]
+compdef:28> [[ k = K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _correct_word = *=* ]]
+compdef:79> func=_correct_word 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _correct_word
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word = .* ]]
+compdef:114> [[ complete-word = menu-select ]]
+compdef:115> zle -C _correct_word .complete-word _correct_word
+compdef:117> shift
+compdef:120> i=\C-xc
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-xc'
+compdef:122> IFS=$' \t' +compdef:122> read -A opt
+compdef:123> [[ undefined-key = undefined-key ]]
+compdef:125> bindkey '\C-xc' _correct_word
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cowsay
+compinit:498> _i_name=_cowsay 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cowsay = -[pPkK](n|) ]]
+compinit:509> compdef -na _cowsay cowsay cowthink
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cowsay = *=* ]]
+compdef:79> func=_cowsay 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cowsay
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cowsay = -N ]]
+compdef:134> [[ cowsay = -p ]]
+compdef:136> [[ cowsay = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cowsay = *=* ]]
+compdef:159> cmd=cowsay 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cowsay 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ cowthink = -N ]]
+compdef:134> [[ cowthink = -p ]]
+compdef:136> [[ cowthink = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cowthink = *=* ]]
+compdef:159> cmd=cowthink 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cowsay 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cp
+compinit:498> _i_name=_cp 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cp = -[pPkK](n|) ]]
+compinit:509> compdef -na _cp cp gcp
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cp = *=* ]]
+compdef:79> func=_cp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cp = -N ]]
+compdef:134> [[ cp = -p ]]
+compdef:136> [[ cp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cp = *=* ]]
+compdef:159> cmd=cp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gcp = -N ]]
+compdef:134> [[ gcp = -p ]]
+compdef:136> [[ gcp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gcp = *=* ]]
+compdef:159> cmd=gcp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cpio
+compinit:498> _i_name=_cpio 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cpio = -[pPkK](n|) ]]
+compinit:509> compdef -na _cpio cpio
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cpio = *=* ]]
+compdef:79> func=_cpio 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cpio
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cpio = -N ]]
+compdef:134> [[ cpio = -p ]]
+compdef:136> [[ cpio = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cpio = *=* ]]
+compdef:159> cmd=cpio 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cpio 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cplay
+compinit:498> _i_name=_cplay 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cplay = -[pPkK](n|) ]]
+compinit:509> compdef -na _cplay cplay
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cplay = *=* ]]
+compdef:79> func=_cplay 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cplay
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cplay = -N ]]
+compdef:134> [[ cplay = -p ]]
+compdef:136> [[ cplay = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cplay = *=* ]]
+compdef:159> cmd=cplay 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cplay 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cpupower
+compinit:498> _i_name=_cpupower 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cpupower = -[pPkK](n|) ]]
+compinit:509> compdef -na _cpupower cpupower
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cpupower = *=* ]]
+compdef:79> func=_cpupower 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cpupower
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cpupower = -N ]]
+compdef:134> [[ cpupower = -p ]]
+compdef:136> [[ cpupower = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cpupower = *=* ]]
+compdef:159> cmd=cpupower 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cpupower 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cryptsetup
+compinit:498> _i_name=_cryptsetup 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cryptsetup = -[pPkK](n|) ]]
+compinit:509> compdef -na _cryptsetup cryptsetup
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cryptsetup = *=* ]]
+compdef:79> func=_cryptsetup 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cryptsetup
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cryptsetup = -N ]]
+compdef:134> [[ cryptsetup = -p ]]
+compdef:136> [[ cryptsetup = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cryptsetup = *=* ]]
+compdef:159> cmd=cryptsetup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cryptsetup 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cscope
+compinit:498> _i_name=_cscope 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cscope = -[pPkK](n|) ]]
+compinit:509> compdef -na _cscope cscope
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cscope = *=* ]]
+compdef:79> func=_cscope 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cscope
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cscope = -N ]]
+compdef:134> [[ cscope = -p ]]
+compdef:136> [[ cscope = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cscope = *=* ]]
+compdef:159> cmd=cscope 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cscope 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cssh
+compinit:498> _i_name=_cssh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cssh = -[pPkK](n|) ]]
+compinit:509> compdef -na _cssh cssh crsh
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cssh = *=* ]]
+compdef:79> func=_cssh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cssh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cssh = -N ]]
+compdef:134> [[ cssh = -p ]]
+compdef:136> [[ cssh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cssh = *=* ]]
+compdef:159> cmd=cssh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ crsh = -N ]]
+compdef:134> [[ crsh = -p ]]
+compdef:136> [[ crsh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ crsh = *=* ]]
+compdef:159> cmd=crsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_csup
+compinit:498> _i_name=_csup 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ csup = -[pPkK](n|) ]]
+compinit:509> compdef -na _csup csup
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _csup = *=* ]]
+compdef:79> func=_csup 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _csup
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ csup = -N ]]
+compdef:134> [[ csup = -p ]]
+compdef:136> [[ csup = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ csup = *=* ]]
+compdef:159> cmd=csup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_csup 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ctags_tags
+compinit:498> _i_name=_ctags_tags 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _ctags_tags
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cu
+compinit:498> _i_name=_cu 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cu = -[pPkK](n|) ]]
+compinit:509> compdef -na _cu cu
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cu = *=* ]]
+compdef:79> func=_cu 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cu
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cu = -N ]]
+compdef:134> [[ cu = -p ]]
+compdef:136> [[ cu = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cu = *=* ]]
+compdef:159> cmd=cu 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cu 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_curl
+compinit:498> _i_name=_curl 
+compinit:499> ((  1 + 0  ))
+compinit:499> continue
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cut
+compinit:498> _i_name=_cut 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cut = -[pPkK](n|) ]]
+compinit:509> compdef -na _cut cut
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cut = *=* ]]
+compdef:79> func=_cut 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cut
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cut = -N ]]
+compdef:134> [[ cut = -p ]]
+compdef:136> [[ cut = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cut = *=* ]]
+compdef:159> cmd=cut 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cut 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cvs
+compinit:498> _i_name=_cvs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cvs = -[pPkK](n|) ]]
+compinit:509> compdef -na _cvs cvs
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cvs = *=* ]]
+compdef:79> func=_cvs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cvs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cvs = -N ]]
+compdef:134> [[ cvs = -p ]]
+compdef:136> [[ cvs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cvs = *=* ]]
+compdef:159> cmd=cvs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cvs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cvsup
+compinit:498> _i_name=_cvsup 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cvsup = -[pPkK](n|) ]]
+compinit:509> compdef -na _cvsup cvsup
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cvsup = *=* ]]
+compdef:79> func=_cvsup 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cvsup
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ cvsup = -N ]]
+compdef:134> [[ cvsup = -p ]]
+compdef:136> [[ cvsup = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cvsup = *=* ]]
+compdef:159> cmd=cvsup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cvsup 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cygcheck
+compinit:498> _i_name=_cygcheck 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cygcheck = -[pPkK](n|) ]]
+compinit:509> compdef -na _cygcheck cygcheck cygcheck.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cygcheck = *=* ]]
+compdef:79> func=_cygcheck 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cygcheck
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cygcheck = -N ]]
+compdef:134> [[ cygcheck = -p ]]
+compdef:136> [[ cygcheck = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygcheck = *=* ]]
+compdef:159> cmd=cygcheck 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygcheck 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ cygcheck.exe = -N ]]
+compdef:134> [[ cygcheck.exe = -p ]]
+compdef:136> [[ cygcheck.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygcheck.exe = *=* ]]
+compdef:159> cmd=cygcheck.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygcheck 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cygpath
+compinit:498> _i_name=_cygpath 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cygpath = -[pPkK](n|) ]]
+compinit:509> compdef -na _cygpath cygpath cygpath.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cygpath = *=* ]]
+compdef:79> func=_cygpath 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cygpath
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cygpath = -N ]]
+compdef:134> [[ cygpath = -p ]]
+compdef:136> [[ cygpath = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygpath = *=* ]]
+compdef:159> cmd=cygpath 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygpath 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ cygpath.exe = -N ]]
+compdef:134> [[ cygpath.exe = -p ]]
+compdef:136> [[ cygpath.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygpath.exe = *=* ]]
+compdef:159> cmd=cygpath.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygpath 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cygrunsrv
+compinit:498> _i_name=_cygrunsrv 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cygrunsrv = -[pPkK](n|) ]]
+compinit:509> compdef -na _cygrunsrv cygrunsrv cygrunsrv.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cygrunsrv = *=* ]]
+compdef:79> func=_cygrunsrv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cygrunsrv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cygrunsrv = -N ]]
+compdef:134> [[ cygrunsrv = -p ]]
+compdef:136> [[ cygrunsrv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygrunsrv = *=* ]]
+compdef:159> cmd=cygrunsrv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygrunsrv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ cygrunsrv.exe = -N ]]
+compdef:134> [[ cygrunsrv.exe = -p ]]
+compdef:136> [[ cygrunsrv.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygrunsrv.exe = *=* ]]
+compdef:159> cmd=cygrunsrv.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygrunsrv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cygserver
+compinit:498> _i_name=_cygserver 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cygserver = -[pPkK](n|) ]]
+compinit:509> compdef -na _cygserver cygserver cygserver.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cygserver = *=* ]]
+compdef:79> func=_cygserver 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cygserver
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cygserver = -N ]]
+compdef:134> [[ cygserver = -p ]]
+compdef:136> [[ cygserver = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygserver = *=* ]]
+compdef:159> cmd=cygserver 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygserver 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ cygserver.exe = -N ]]
+compdef:134> [[ cygserver.exe = -p ]]
+compdef:136> [[ cygserver.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygserver.exe = *=* ]]
+compdef:159> cmd=cygserver.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygserver 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_cygstart
+compinit:498> _i_name=_cygstart 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ cygstart = -[pPkK](n|) ]]
+compinit:509> compdef -na _cygstart cygstart cygstart.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _cygstart = *=* ]]
+compdef:79> func=_cygstart 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _cygstart
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ cygstart = -N ]]
+compdef:134> [[ cygstart = -p ]]
+compdef:136> [[ cygstart = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygstart = *=* ]]
+compdef:159> cmd=cygstart 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygstart 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ cygstart.exe = -N ]]
+compdef:134> [[ cygstart.exe = -p ]]
+compdef:136> [[ cygstart.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cygstart.exe = *=* ]]
+compdef:159> cmd=cygstart.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_cygstart 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dak
+compinit:498> _i_name=_dak 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dak = -[pPkK](n|) ]]
+compinit:509> compdef -na _dak dak
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dak = *=* ]]
+compdef:79> func=_dak 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dak
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dak = -N ]]
+compdef:134> [[ dak = -p ]]
+compdef:136> [[ dak = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dak = *=* ]]
+compdef:159> cmd=dak 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dak 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_darcs
+compinit:498> _i_name=_darcs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ darcs = -[pPkK](n|) ]]
+compinit:509> compdef -na _darcs darcs
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _darcs = *=* ]]
+compdef:79> func=_darcs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _darcs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ darcs = -N ]]
+compdef:134> [[ darcs = -p ]]
+compdef:136> [[ darcs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ darcs = *=* ]]
+compdef:159> cmd=darcs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_darcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_date
+compinit:498> _i_name=_date 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ date = -[pPkK](n|) ]]
+compinit:509> compdef -na _date date gdate
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _date = *=* ]]
+compdef:79> func=_date 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _date
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ date = -N ]]
+compdef:134> [[ date = -p ]]
+compdef:136> [[ date = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ date = *=* ]]
+compdef:159> cmd=date 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_date 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gdate = -N ]]
+compdef:134> [[ gdate = -p ]]
+compdef:136> [[ gdate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gdate = *=* ]]
+compdef:159> cmd=gdate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_date 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_date_formats
+compinit:498> _i_name=_date_formats 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _date_formats
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dates
+compinit:498> _i_name=_dates 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _dates
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dbus
+compinit:498> _i_name=_dbus 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dbus-send = -[pPkK](n|) ]]
+compinit:509> compdef -na _dbus dbus-send dbus-monitor
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dbus = *=* ]]
+compdef:79> func=_dbus 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dbus
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ dbus-send = -N ]]
+compdef:134> [[ dbus-send = -p ]]
+compdef:136> [[ dbus-send = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dbus-send = *=* ]]
+compdef:159> cmd=dbus-send 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dbus 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dbus-monitor = -N ]]
+compdef:134> [[ dbus-monitor = -p ]]
+compdef:136> [[ dbus-monitor = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dbus-monitor = *=* ]]
+compdef:159> cmd=dbus-monitor 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dbus 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dchroot
+compinit:498> _i_name=_dchroot 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dchroot = -[pPkK](n|) ]]
+compinit:509> compdef -na _dchroot dchroot
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dchroot = *=* ]]
+compdef:79> func=_dchroot 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dchroot
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dchroot = -N ]]
+compdef:134> [[ dchroot = -p ]]
+compdef:136> [[ dchroot = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dchroot = *=* ]]
+compdef:159> cmd=dchroot 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dchroot 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dchroot-dsa
+compinit:498> _i_name=_dchroot-dsa 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dchroot-dsa = -[pPkK](n|) ]]
+compinit:509> compdef -na _dchroot-dsa dchroot-dsa
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dchroot-dsa = *=* ]]
+compdef:79> func=_dchroot-dsa 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dchroot-dsa
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dchroot-dsa = -N ]]
+compdef:134> [[ dchroot-dsa = -p ]]
+compdef:136> [[ dchroot-dsa = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dchroot-dsa = *=* ]]
+compdef:159> cmd=dchroot-dsa 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dchroot-dsa 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dcop
+compinit:498> _i_name=_dcop 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dcop = -[pPkK](n|) ]]
+compinit:509> compdef -na _dcop dcop dcopstart dcopfind dcopref dcopclient dcopobject
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dcop = *=* ]]
+compdef:79> func=_dcop 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dcop
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ dcop = -N ]]
+compdef:134> [[ dcop = -p ]]
+compdef:136> [[ dcop = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcop = *=* ]]
+compdef:159> cmd=dcop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ dcopstart = -N ]]
+compdef:134> [[ dcopstart = -p ]]
+compdef:136> [[ dcopstart = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcopstart = *=* ]]
+compdef:159> cmd=dcopstart 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ dcopfind = -N ]]
+compdef:134> [[ dcopfind = -p ]]
+compdef:136> [[ dcopfind = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcopfind = *=* ]]
+compdef:159> cmd=dcopfind 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ dcopref = -N ]]
+compdef:134> [[ dcopref = -p ]]
+compdef:136> [[ dcopref = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcopref = *=* ]]
+compdef:159> cmd=dcopref 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ dcopclient = -N ]]
+compdef:134> [[ dcopclient = -p ]]
+compdef:136> [[ dcopclient = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcopclient = *=* ]]
+compdef:159> cmd=dcopclient 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dcopobject = -N ]]
+compdef:134> [[ dcopobject = -p ]]
+compdef:136> [[ dcopobject = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcopobject = *=* ]]
+compdef:159> cmd=dcopobject 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dcut
+compinit:498> _i_name=_dcut 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dcut = -[pPkK](n|) ]]
+compinit:509> compdef -na _dcut dcut
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dcut = *=* ]]
+compdef:79> func=_dcut 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dcut
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dcut = -N ]]
+compdef:134> [[ dcut = -p ]]
+compdef:136> [[ dcut = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dcut = *=* ]]
+compdef:159> cmd=dcut 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dcut 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dd
+compinit:498> _i_name=_dd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dd = -[pPkK](n|) ]]
+compinit:509> compdef -na _dd dd
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dd = *=* ]]
+compdef:79> func=_dd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dd = -N ]]
+compdef:134> [[ dd = -p ]]
+compdef:136> [[ dd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dd = *=* ]]
+compdef:159> cmd=dd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_deb_architectures
+compinit:498> _i_name=_deb_architectures 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _deb_architectures
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_debbugs_bugnumber
+compinit:498> _i_name=_debbugs_bugnumber 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _debbugs_bugnumber
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_debchange
+compinit:498> _i_name=_debchange 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ debchange = -[pPkK](n|) ]]
+compinit:509> compdef -na _debchange debchange 'dch=debchange'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _debchange = *=* ]]
+compdef:79> func=_debchange 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _debchange
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ debchange = -N ]]
+compdef:134> [[ debchange = -p ]]
+compdef:136> [[ debchange = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ debchange = *=* ]]
+compdef:159> cmd=debchange 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_debchange 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'dch=debchange' = -N ]]
+compdef:134> [[ 'dch=debchange' = -p ]]
+compdef:136> [[ 'dch=debchange' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'dch=debchange' = *=* ]]
+compdef:156> cmd=dch 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_debchange 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=debchange 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_debcheckout
+compinit:498> _i_name=_debcheckout 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ debcheckout = -[pPkK](n|) ]]
+compinit:509> compdef -na _debcheckout debcheckout
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _debcheckout = *=* ]]
+compdef:79> func=_debcheckout 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _debcheckout
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ debcheckout = -N ]]
+compdef:134> [[ debcheckout = -p ]]
+compdef:136> [[ debcheckout = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ debcheckout = *=* ]]
+compdef:159> cmd=debcheckout 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_debcheckout 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_deb_codenames
+compinit:498> _i_name=_deb_codenames 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _deb_codenames
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_debdiff
+compinit:498> _i_name=_debdiff 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ debdiff = -[pPkK](n|) ]]
+compinit:509> compdef -na _debdiff debdiff
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _debdiff = *=* ]]
+compdef:79> func=_debdiff 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _debdiff
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ debdiff = -N ]]
+compdef:134> [[ debdiff = -p ]]
+compdef:136> [[ debdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ debdiff = *=* ]]
+compdef:159> cmd=debdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_debdiff 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_debfoster
+compinit:498> _i_name=_debfoster 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ debfoster = -[pPkK](n|) ]]
+compinit:509> compdef -na _debfoster debfoster
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _debfoster = *=* ]]
+compdef:79> func=_debfoster 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _debfoster
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ debfoster = -N ]]
+compdef:134> [[ debfoster = -p ]]
+compdef:136> [[ debfoster = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ debfoster = *=* ]]
+compdef:159> cmd=debfoster 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_debfoster 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_deb_packages
+compinit:498> _i_name=_deb_packages 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _deb_packages
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_debsign
+compinit:498> _i_name=_debsign 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ debsign = -[pPkK](n|) ]]
+compinit:509> compdef -na _debsign debsign
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _debsign = *=* ]]
+compdef:79> func=_debsign 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _debsign
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ debsign = -N ]]
+compdef:134> [[ debsign = -p ]]
+compdef:136> [[ debsign = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ debsign = *=* ]]
+compdef:159> cmd=debsign 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_debsign 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_default
+compinit:498> _i_name=_default 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -default- = -[pPkK](n|) ]]
+compinit:509> compdef -na _default -default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _default = *=* ]]
+compdef:79> func=_default 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _default
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -default- = -N ]]
+compdef:134> [[ -default- = -p ]]
+compdef:136> [[ -default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -default- = *=* ]]
+compdef:159> cmd=-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_default 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_defaults
+compinit:498> _i_name=_defaults 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ defaults = -[pPkK](n|) ]]
+compinit:509> compdef -na _defaults defaults
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _defaults = *=* ]]
+compdef:79> func=_defaults 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _defaults
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ defaults = -N ]]
+compdef:134> [[ defaults = -p ]]
+compdef:136> [[ defaults = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ defaults = *=* ]]
+compdef:159> cmd=defaults 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_defaults 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_delimiters
+compinit:498> _i_name=_delimiters 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _delimiters
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_describe
+compinit:498> _i_name=_describe 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _describe
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_description
+compinit:498> _i_name=_description 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _description
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_devtodo
+compinit:498> _i_name=_devtodo 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ devtodo = -[pPkK](n|) ]]
+compinit:509> compdef -na _devtodo devtodo todo tda tde tdd tdr
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _devtodo = *=* ]]
+compdef:79> func=_devtodo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _devtodo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ devtodo = -N ]]
+compdef:134> [[ devtodo = -p ]]
+compdef:136> [[ devtodo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ devtodo = *=* ]]
+compdef:159> cmd=devtodo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_devtodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ todo = -N ]]
+compdef:134> [[ todo = -p ]]
+compdef:136> [[ todo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ todo = *=* ]]
+compdef:159> cmd=todo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_devtodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ tda = -N ]]
+compdef:134> [[ tda = -p ]]
+compdef:136> [[ tda = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tda = *=* ]]
+compdef:159> cmd=tda 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_devtodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ tde = -N ]]
+compdef:134> [[ tde = -p ]]
+compdef:136> [[ tde = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tde = *=* ]]
+compdef:159> cmd=tde 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_devtodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ tdd = -N ]]
+compdef:134> [[ tdd = -p ]]
+compdef:136> [[ tdd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tdd = *=* ]]
+compdef:159> cmd=tdd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_devtodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ tdr = -N ]]
+compdef:134> [[ tdr = -p ]]
+compdef:136> [[ tdr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tdr = *=* ]]
+compdef:159> cmd=tdr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_devtodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_df
+compinit:498> _i_name=_df 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ df = -[pPkK](n|) ]]
+compinit:509> compdef -na _df df
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _df = *=* ]]
+compdef:79> func=_df 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _df
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ df = -N ]]
+compdef:134> [[ df = -p ]]
+compdef:136> [[ df = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ df = *=* ]]
+compdef:159> cmd=df 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_df 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dhclient
+compinit:498> _i_name=_dhclient 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dhclient = -[pPkK](n|) ]]
+compinit:509> compdef -na _dhclient dhclient dhclient3
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dhclient = *=* ]]
+compdef:79> func=_dhclient 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dhclient
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ dhclient = -N ]]
+compdef:134> [[ dhclient = -p ]]
+compdef:136> [[ dhclient = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dhclient = *=* ]]
+compdef:159> cmd=dhclient 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dhclient 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dhclient3 = -N ]]
+compdef:134> [[ dhclient3 = -p ]]
+compdef:136> [[ dhclient3 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dhclient3 = *=* ]]
+compdef:159> cmd=dhclient3 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dhclient 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dhcpinfo
+compinit:498> _i_name=_dhcpinfo 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dhcpinfo = -[pPkK](n|) ]]
+compinit:509> compdef -na _dhcpinfo dhcpinfo
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dhcpinfo = *=* ]]
+compdef:79> func=_dhcpinfo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dhcpinfo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dhcpinfo = -N ]]
+compdef:134> [[ dhcpinfo = -p ]]
+compdef:136> [[ dhcpinfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dhcpinfo = *=* ]]
+compdef:159> cmd=dhcpinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dhcpinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dict
+compinit:498> _i_name=_dict 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dict = -[pPkK](n|) ]]
+compinit:509> compdef -na _dict dict
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dict = *=* ]]
+compdef:79> func=_dict 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dict
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dict = -N ]]
+compdef:134> [[ dict = -p ]]
+compdef:136> [[ dict = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dict = *=* ]]
+compdef:159> cmd=dict 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dict 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dict_words
+compinit:498> _i_name=_dict_words 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _dict_words
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_diff
+compinit:498> _i_name=_diff 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ diff = -[pPkK](n|) ]]
+compinit:509> compdef -na _diff diff gdiff
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _diff = *=* ]]
+compdef:79> func=_diff 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _diff
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ diff = -N ]]
+compdef:134> [[ diff = -p ]]
+compdef:136> [[ diff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ diff = *=* ]]
+compdef:159> cmd=diff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_diff 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gdiff = -N ]]
+compdef:134> [[ gdiff = -p ]]
+compdef:136> [[ gdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gdiff = *=* ]]
+compdef:159> cmd=gdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_diff 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_diff_options
+compinit:498> _i_name=_diff_options 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _diff_options
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_diffstat
+compinit:498> _i_name=_diffstat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ diffstat = -[pPkK](n|) ]]
+compinit:509> compdef -na _diffstat diffstat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _diffstat = *=* ]]
+compdef:79> func=_diffstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _diffstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ diffstat = -N ]]
+compdef:134> [[ diffstat = -p ]]
+compdef:136> [[ diffstat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ diffstat = *=* ]]
+compdef:159> cmd=diffstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_diffstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dig
+compinit:498> _i_name=_dig 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dig = -[pPkK](n|) ]]
+compinit:509> compdef -na _dig dig
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dig = *=* ]]
+compdef:79> func=_dig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dig = -N ]]
+compdef:134> [[ dig = -p ]]
+compdef:136> [[ dig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dig = *=* ]]
+compdef:159> cmd=dig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_directories
+compinit:498> _i_name=_directories 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rmdir = -[pPkK](n|) ]]
+compinit:509> compdef -na _directories rmdir zf_rmdir dircmp -P '-value-,*path,-default-'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _directories = *=* ]]
+compdef:79> func=_directories 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _directories
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ rmdir = -N ]]
+compdef:134> [[ rmdir = -p ]]
+compdef:136> [[ rmdir = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmdir = *=* ]]
+compdef:159> cmd=rmdir 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_directories 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ zf_rmdir = -N ]]
+compdef:134> [[ zf_rmdir = -p ]]
+compdef:136> [[ zf_rmdir = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zf_rmdir = *=* ]]
+compdef:159> cmd=zf_rmdir 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_directories 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ dircmp = -N ]]
+compdef:134> [[ dircmp = -p ]]
+compdef:136> [[ dircmp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dircmp = *=* ]]
+compdef:159> cmd=dircmp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_directories 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -P = -N ]]
+compdef:134> [[ -P = -p ]]
+compdef:136> [[ -P = -P ]]
+compdef:137> type=postpattern 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-value-,*path,-default-' = -N ]]
+compdef:134> [[ '-value-,*path,-default-' = -p ]]
+compdef:136> [[ '-value-,*path,-default-' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '-value-,*path,-default-' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_directories 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_directory_stack
+compinit:498> _i_name=_directory_stack 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ popd = -[pPkK](n|) ]]
+compinit:509> compdef -na _directory_stack popd
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _directory_stack = *=* ]]
+compdef:79> func=_directory_stack 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _directory_stack
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ popd = -N ]]
+compdef:134> [[ popd = -p ]]
+compdef:136> [[ popd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ popd = *=* ]]
+compdef:159> cmd=popd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_directory_stack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dir_list
+compinit:498> _i_name=_dir_list 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -value-,TERMINFO_DIRS,-default- = -[pPkK](n|) ]]
+compinit:509> compdef -na _dir_list -value-,TERMINFO_DIRS,-default- -P '-value-,*PATH,-default-'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dir_list = *=* ]]
+compdef:79> func=_dir_list 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dir_list
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,TERMINFO_DIRS,-default- = -N ]]
+compdef:134> [[ -value-,TERMINFO_DIRS,-default- = -p ]]
+compdef:136> [[ -value-,TERMINFO_DIRS,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,TERMINFO_DIRS,-default- = *=* ]]
+compdef:159> cmd=-value-,TERMINFO_DIRS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dir_list 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -P = -N ]]
+compdef:134> [[ -P = -p ]]
+compdef:136> [[ -P = -P ]]
+compdef:137> type=postpattern 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-value-,*PATH,-default-' = -N ]]
+compdef:134> [[ '-value-,*PATH,-default-' = -p ]]
+compdef:136> [[ '-value-,*PATH,-default-' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '-value-,*PATH,-default-' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_dir_list 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dirs
+compinit:498> _i_name=_dirs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dirs = -[pPkK](n|) ]]
+compinit:509> compdef -na _dirs dirs
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dirs = *=* ]]
+compdef:79> func=_dirs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dirs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dirs = -N ]]
+compdef:134> [[ dirs = -p ]]
+compdef:136> [[ dirs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dirs = *=* ]]
+compdef:159> cmd=dirs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dirs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_disable
+compinit:498> _i_name=_disable 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ disable = -[pPkK](n|) ]]
+compinit:509> compdef -na _disable disable
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _disable = *=* ]]
+compdef:79> func=_disable 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _disable
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ disable = -N ]]
+compdef:134> [[ disable = -p ]]
+compdef:136> [[ disable = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ disable = *=* ]]
+compdef:159> cmd=disable 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_disable 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dispatch
+compinit:498> _i_name=_dispatch 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _dispatch
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_django
+compinit:498> _i_name=_django 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ django-admin.py = -[pPkK](n|) ]]
+compinit:509> compdef -na _django django-admin.py django-admin manage.py
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _django = *=* ]]
+compdef:79> func=_django 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _django
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ django-admin.py = -N ]]
+compdef:134> [[ django-admin.py = -p ]]
+compdef:136> [[ django-admin.py = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ django-admin.py = *=* ]]
+compdef:159> cmd=django-admin.py 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_django 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ django-admin = -N ]]
+compdef:134> [[ django-admin = -p ]]
+compdef:136> [[ django-admin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ django-admin = *=* ]]
+compdef:159> cmd=django-admin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_django 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ manage.py = -N ]]
+compdef:134> [[ manage.py = -p ]]
+compdef:136> [[ manage.py = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ manage.py = *=* ]]
+compdef:159> cmd=manage.py 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_django 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dladm
+compinit:498> _i_name=_dladm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dladm = -[pPkK](n|) ]]
+compinit:509> compdef -na _dladm dladm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dladm = *=* ]]
+compdef:79> func=_dladm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dladm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dladm = -N ]]
+compdef:134> [[ dladm = -p ]]
+compdef:136> [[ dladm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dladm = *=* ]]
+compdef:159> cmd=dladm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dladm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dlocate
+compinit:498> _i_name=_dlocate 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dlocate = -[pPkK](n|) ]]
+compinit:509> compdef -na _dlocate dlocate
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dlocate = *=* ]]
+compdef:79> func=_dlocate 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dlocate
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dlocate = -N ]]
+compdef:134> [[ dlocate = -p ]]
+compdef:136> [[ dlocate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dlocate = *=* ]]
+compdef:159> cmd=dlocate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dlocate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dmesg
+compinit:498> _i_name=_dmesg 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dmesg = -[pPkK](n|) ]]
+compinit:509> compdef -na _dmesg dmesg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dmesg = *=* ]]
+compdef:79> func=_dmesg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dmesg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dmesg = -N ]]
+compdef:134> [[ dmesg = -p ]]
+compdef:136> [[ dmesg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dmesg = *=* ]]
+compdef:159> cmd=dmesg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dmesg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dmidecode
+compinit:498> _i_name=_dmidecode 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dmidecode = -[pPkK](n|) ]]
+compinit:509> compdef -na _dmidecode dmidecode
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dmidecode = *=* ]]
+compdef:79> func=_dmidecode 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dmidecode
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dmidecode = -N ]]
+compdef:134> [[ dmidecode = -p ]]
+compdef:136> [[ dmidecode = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dmidecode = *=* ]]
+compdef:159> cmd=dmidecode 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dmidecode 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dnf
+compinit:498> _i_name=_dnf 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dnf = -[pPkK](n|) ]]
+compinit:509> compdef -na _dnf dnf dnf-2 dnf-3
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dnf = *=* ]]
+compdef:79> func=_dnf 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dnf
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ dnf = -N ]]
+compdef:134> [[ dnf = -p ]]
+compdef:136> [[ dnf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dnf = *=* ]]
+compdef:159> cmd=dnf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dnf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ dnf-2 = -N ]]
+compdef:134> [[ dnf-2 = -p ]]
+compdef:136> [[ dnf-2 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dnf-2 = *=* ]]
+compdef:159> cmd=dnf-2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dnf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dnf-3 = -N ]]
+compdef:134> [[ dnf-3 = -p ]]
+compdef:136> [[ dnf-3 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dnf-3 = *=* ]]
+compdef:159> cmd=dnf-3 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dnf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_doas
+compinit:498> _i_name=_doas 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ doas = -[pPkK](n|) ]]
+compinit:509> compdef -na _doas doas
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _doas = *=* ]]
+compdef:79> func=_doas 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _doas
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ doas = -N ]]
+compdef:134> [[ doas = -p ]]
+compdef:136> [[ doas = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ doas = *=* ]]
+compdef:159> cmd=doas 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_doas 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_domains
+compinit:498> _i_name=_domains 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _domains
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dpatch-edit-patch
+compinit:498> _i_name=_dpatch-edit-patch 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dpatch-edit-patch = -[pPkK](n|) ]]
+compinit:509> compdef -na _dpatch-edit-patch dpatch-edit-patch
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dpatch-edit-patch = *=* ]]
+compdef:79> func=_dpatch-edit-patch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dpatch-edit-patch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dpatch-edit-patch = -N ]]
+compdef:134> [[ dpatch-edit-patch = -p ]]
+compdef:136> [[ dpatch-edit-patch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpatch-edit-patch = *=* ]]
+compdef:159> cmd=dpatch-edit-patch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpatch-edit-patch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dpkg
+compinit:498> _i_name=_dpkg 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dpkg = -[pPkK](n|) ]]
+compinit:509> compdef -na _dpkg dpkg dpkg-deb dpkg-query dpkg-reconfigure
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dpkg = *=* ]]
+compdef:79> func=_dpkg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dpkg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ dpkg = -N ]]
+compdef:134> [[ dpkg = -p ]]
+compdef:136> [[ dpkg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg = *=* ]]
+compdef:159> cmd=dpkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ dpkg-deb = -N ]]
+compdef:134> [[ dpkg-deb = -p ]]
+compdef:136> [[ dpkg-deb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-deb = *=* ]]
+compdef:159> cmd=dpkg-deb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ dpkg-query = -N ]]
+compdef:134> [[ dpkg-query = -p ]]
+compdef:136> [[ dpkg-query = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-query = *=* ]]
+compdef:159> cmd=dpkg-query 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dpkg-reconfigure = -N ]]
+compdef:134> [[ dpkg-reconfigure = -p ]]
+compdef:136> [[ dpkg-reconfigure = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-reconfigure = *=* ]]
+compdef:159> cmd=dpkg-reconfigure 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dpkg-buildpackage
+compinit:498> _i_name=_dpkg-buildpackage 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dpkg-buildpackage = -[pPkK](n|) ]]
+compinit:509> compdef -na _dpkg-buildpackage dpkg-buildpackage
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dpkg-buildpackage = *=* ]]
+compdef:79> func=_dpkg-buildpackage 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dpkg-buildpackage
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dpkg-buildpackage = -N ]]
+compdef:134> [[ dpkg-buildpackage = -p ]]
+compdef:136> [[ dpkg-buildpackage = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-buildpackage = *=* ]]
+compdef:159> cmd=dpkg-buildpackage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg-buildpackage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dpkg-cross
+compinit:498> _i_name=_dpkg-cross 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dpkg-cross = -[pPkK](n|) ]]
+compinit:509> compdef -na _dpkg-cross dpkg-cross
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dpkg-cross = *=* ]]
+compdef:79> func=_dpkg-cross 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dpkg-cross
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dpkg-cross = -N ]]
+compdef:134> [[ dpkg-cross = -p ]]
+compdef:136> [[ dpkg-cross = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-cross = *=* ]]
+compdef:159> cmd=dpkg-cross 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg-cross 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dpkg-repack
+compinit:498> _i_name=_dpkg-repack 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dpkg-repack = -[pPkK](n|) ]]
+compinit:509> compdef -na _dpkg-repack dpkg-repack
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dpkg-repack = *=* ]]
+compdef:79> func=_dpkg-repack 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dpkg-repack
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dpkg-repack = -N ]]
+compdef:134> [[ dpkg-repack = -p ]]
+compdef:136> [[ dpkg-repack = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-repack = *=* ]]
+compdef:159> cmd=dpkg-repack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg-repack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dpkg_source
+compinit:498> _i_name=_dpkg_source 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dpkg-source = -[pPkK](n|) ]]
+compinit:509> compdef -na _dpkg_source dpkg-source
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dpkg_source = *=* ]]
+compdef:79> func=_dpkg_source 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dpkg_source
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dpkg-source = -N ]]
+compdef:134> [[ dpkg-source = -p ]]
+compdef:136> [[ dpkg-source = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dpkg-source = *=* ]]
+compdef:159> cmd=dpkg-source 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dpkg_source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dput
+compinit:498> _i_name=_dput 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dput = -[pPkK](n|) ]]
+compinit:509> compdef -na _dput dput
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dput = *=* ]]
+compdef:79> func=_dput 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dput
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dput = -N ]]
+compdef:134> [[ dput = -p ]]
+compdef:136> [[ dput = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dput = *=* ]]
+compdef:159> cmd=dput 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dput 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dsh
+compinit:498> _i_name=_dsh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dsh = -[pPkK](n|) ]]
+compinit:509> compdef -na _dsh dsh
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dsh = *=* ]]
+compdef:79> func=_dsh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dsh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dsh = -N ]]
+compdef:134> [[ dsh = -p ]]
+compdef:136> [[ dsh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dsh = *=* ]]
+compdef:159> cmd=dsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dtrace
+compinit:498> _i_name=_dtrace 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dtrace = -[pPkK](n|) ]]
+compinit:509> compdef -na _dtrace dtrace
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dtrace = *=* ]]
+compdef:79> func=_dtrace 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dtrace
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dtrace = -N ]]
+compdef:134> [[ dtrace = -p ]]
+compdef:136> [[ dtrace = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dtrace = *=* ]]
+compdef:159> cmd=dtrace 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dtrace 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_du
+compinit:498> _i_name=_du 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ du = -[pPkK](n|) ]]
+compinit:509> compdef -na _du du gdu
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _du = *=* ]]
+compdef:79> func=_du 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _du
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ du = -N ]]
+compdef:134> [[ du = -p ]]
+compdef:136> [[ du = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ du = *=* ]]
+compdef:159> cmd=du 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_du 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gdu = -N ]]
+compdef:134> [[ gdu = -p ]]
+compdef:136> [[ gdu = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gdu = *=* ]]
+compdef:159> cmd=gdu 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_du 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dumpadm
+compinit:498> _i_name=_dumpadm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dumpadm = -[pPkK](n|) ]]
+compinit:509> compdef -na _dumpadm dumpadm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dumpadm = *=* ]]
+compdef:79> func=_dumpadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dumpadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dumpadm = -N ]]
+compdef:134> [[ dumpadm = -p ]]
+compdef:136> [[ dumpadm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dumpadm = *=* ]]
+compdef:159> cmd=dumpadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dumpadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dumper
+compinit:498> _i_name=_dumper 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dumper = -[pPkK](n|) ]]
+compinit:509> compdef -na _dumper dumper dumper.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dumper = *=* ]]
+compdef:79> func=_dumper 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dumper
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ dumper = -N ]]
+compdef:134> [[ dumper = -p ]]
+compdef:136> [[ dumper = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dumper = *=* ]]
+compdef:159> cmd=dumper 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dumper 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dumper.exe = -N ]]
+compdef:134> [[ dumper.exe = -p ]]
+compdef:136> [[ dumper.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dumper.exe = *=* ]]
+compdef:159> cmd=dumper.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dumper 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dupload
+compinit:498> _i_name=_dupload 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dupload = -[pPkK](n|) ]]
+compinit:509> compdef -na _dupload dupload
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dupload = *=* ]]
+compdef:79> func=_dupload 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dupload
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ dupload = -N ]]
+compdef:134> [[ dupload = -p ]]
+compdef:136> [[ dupload = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dupload = *=* ]]
+compdef:159> cmd=dupload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dupload 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dvi
+compinit:498> _i_name=_dvi 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dvips = -[pPkK](n|) ]]
+compinit:509> compdef -na _dvi dvips dvibook dviconcat dvicopy dvidvi dvipdf dviselect dvitodvi dvitype
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 11  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 10  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _dvi = *=* ]]
+compdef:79> func=_dvi 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _dvi
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  9  ))
+compdef:132> [[ dvips = -N ]]
+compdef:134> [[ dvips = -p ]]
+compdef:136> [[ dvips = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvips = *=* ]]
+compdef:159> cmd=dvips 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ dvibook = -N ]]
+compdef:134> [[ dvibook = -p ]]
+compdef:136> [[ dvibook = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvibook = *=* ]]
+compdef:159> cmd=dvibook 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ dviconcat = -N ]]
+compdef:134> [[ dviconcat = -p ]]
+compdef:136> [[ dviconcat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dviconcat = *=* ]]
+compdef:159> cmd=dviconcat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ dvicopy = -N ]]
+compdef:134> [[ dvicopy = -p ]]
+compdef:136> [[ dvicopy = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvicopy = *=* ]]
+compdef:159> cmd=dvicopy 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ dvidvi = -N ]]
+compdef:134> [[ dvidvi = -p ]]
+compdef:136> [[ dvidvi = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvidvi = *=* ]]
+compdef:159> cmd=dvidvi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ dvipdf = -N ]]
+compdef:134> [[ dvipdf = -p ]]
+compdef:136> [[ dvipdf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvipdf = *=* ]]
+compdef:159> cmd=dvipdf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ dviselect = -N ]]
+compdef:134> [[ dviselect = -p ]]
+compdef:136> [[ dviselect = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dviselect = *=* ]]
+compdef:159> cmd=dviselect 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ dvitodvi = -N ]]
+compdef:134> [[ dvitodvi = -p ]]
+compdef:136> [[ dvitodvi = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvitodvi = *=* ]]
+compdef:159> cmd=dvitodvi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dvitype = -N ]]
+compdef:134> [[ dvitype = -p ]]
+compdef:136> [[ dvitype = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dvitype = *=* ]]
+compdef:159> cmd=dvitype 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_dvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_dynamic_directory_name
+compinit:498> _i_name=_dynamic_directory_name 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _dynamic_directory_name
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ecasound
+compinit:498> _i_name=_ecasound 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ecasound = -[pPkK](n|) ]]
+compinit:509> compdef -na _ecasound ecasound
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ecasound = *=* ]]
+compdef:79> func=_ecasound 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ecasound
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ecasound = -N ]]
+compdef:134> [[ ecasound = -p ]]
+compdef:136> [[ ecasound = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ecasound = *=* ]]
+compdef:159> cmd=ecasound 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ecasound 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_echotc
+compinit:498> _i_name=_echotc 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ echotc = -[pPkK](n|) ]]
+compinit:509> compdef -na _echotc echotc
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _echotc = *=* ]]
+compdef:79> func=_echotc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _echotc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ echotc = -N ]]
+compdef:134> [[ echotc = -p ]]
+compdef:136> [[ echotc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ echotc = *=* ]]
+compdef:159> cmd=echotc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_echotc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_echoti
+compinit:498> _i_name=_echoti 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ echoti = -[pPkK](n|) ]]
+compinit:509> compdef -na _echoti echoti
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _echoti = *=* ]]
+compdef:79> func=_echoti 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _echoti
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ echoti = -N ]]
+compdef:134> [[ echoti = -p ]]
+compdef:136> [[ echoti = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ echoti = *=* ]]
+compdef:159> cmd=echoti 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_echoti 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_elfdump
+compinit:498> _i_name=_elfdump 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ elfdump = -[pPkK](n|) ]]
+compinit:509> compdef -na _elfdump elfdump
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _elfdump = *=* ]]
+compdef:79> func=_elfdump 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _elfdump
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ elfdump = -N ]]
+compdef:134> [[ elfdump = -p ]]
+compdef:136> [[ elfdump = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ elfdump = *=* ]]
+compdef:159> cmd=elfdump 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_elfdump 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_elinks
+compinit:498> _i_name=_elinks 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ elinks = -[pPkK](n|) ]]
+compinit:509> compdef -na _elinks elinks
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _elinks = *=* ]]
+compdef:79> func=_elinks 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _elinks
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ elinks = -N ]]
+compdef:134> [[ elinks = -p ]]
+compdef:136> [[ elinks = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ elinks = *=* ]]
+compdef:159> cmd=elinks 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_elinks 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_elm
+compinit:498> _i_name=_elm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ elm = -[pPkK](n|) ]]
+compinit:509> compdef -na _elm elm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _elm = *=* ]]
+compdef:79> func=_elm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _elm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ elm = -N ]]
+compdef:134> [[ elm = -p ]]
+compdef:136> [[ elm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ elm = *=* ]]
+compdef:159> cmd=elm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_elm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_email_addresses
+compinit:498> _i_name=_email_addresses 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _email_addresses
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_emulate
+compinit:498> _i_name=_emulate 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ emulate = -[pPkK](n|) ]]
+compinit:509> compdef -na _emulate emulate
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _emulate = *=* ]]
+compdef:79> func=_emulate 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _emulate
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ emulate = -N ]]
+compdef:134> [[ emulate = -p ]]
+compdef:136> [[ emulate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ emulate = *=* ]]
+compdef:159> cmd=emulate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_emulate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_enable
+compinit:498> _i_name=_enable 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ enable = -[pPkK](n|) ]]
+compinit:509> compdef -na _enable enable
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _enable = *=* ]]
+compdef:79> func=_enable 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _enable
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ enable = -N ]]
+compdef:134> [[ enable = -p ]]
+compdef:136> [[ enable = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ enable = *=* ]]
+compdef:159> cmd=enable 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_enable 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_enscript
+compinit:498> _i_name=_enscript 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ enscript = -[pPkK](n|) ]]
+compinit:509> compdef -na _enscript enscript
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _enscript = *=* ]]
+compdef:79> func=_enscript 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _enscript
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ enscript = -N ]]
+compdef:134> [[ enscript = -p ]]
+compdef:136> [[ enscript = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ enscript = *=* ]]
+compdef:159> cmd=enscript 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_enscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_entr
+compinit:498> _i_name=_entr 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ entr = -[pPkK](n|) ]]
+compinit:509> compdef -na _entr entr
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _entr = *=* ]]
+compdef:79> func=_entr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _entr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ entr = -N ]]
+compdef:134> [[ entr = -p ]]
+compdef:136> [[ entr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ entr = *=* ]]
+compdef:159> cmd=entr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_entr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_env
+compinit:498> _i_name=_env 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ env = -[pPkK](n|) ]]
+compinit:509> compdef -na _env env
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _env = *=* ]]
+compdef:79> func=_env 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _env
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ env = -N ]]
+compdef:134> [[ env = -p ]]
+compdef:136> [[ env = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ env = *=* ]]
+compdef:159> cmd=env 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_env 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_equal
+compinit:498> _i_name=_equal 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -equal- = -[pPkK](n|) ]]
+compinit:509> compdef -na _equal -equal-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _equal = *=* ]]
+compdef:79> func=_equal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _equal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -equal- = -N ]]
+compdef:134> [[ -equal- = -p ]]
+compdef:136> [[ -equal- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -equal- = *=* ]]
+compdef:159> cmd=-equal- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_equal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_espeak
+compinit:498> _i_name=_espeak 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ espeak = -[pPkK](n|) ]]
+compinit:509> compdef -na _espeak espeak
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _espeak = *=* ]]
+compdef:79> func=_espeak 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _espeak
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ espeak = -N ]]
+compdef:134> [[ espeak = -p ]]
+compdef:136> [[ espeak = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ espeak = *=* ]]
+compdef:159> cmd=espeak 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_espeak 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_etags
+compinit:498> _i_name=_etags 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ etags = -[pPkK](n|) ]]
+compinit:509> compdef -na _etags etags
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _etags = *=* ]]
+compdef:79> func=_etags 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _etags
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ etags = -N ]]
+compdef:134> [[ etags = -p ]]
+compdef:136> [[ etags = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ etags = *=* ]]
+compdef:159> cmd=etags 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_etags 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ethtool
+compinit:498> _i_name=_ethtool 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ethtool = -[pPkK](n|) ]]
+compinit:509> compdef -na _ethtool ethtool
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ethtool = *=* ]]
+compdef:79> func=_ethtool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ethtool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ethtool = -N ]]
+compdef:134> [[ ethtool = -p ]]
+compdef:136> [[ ethtool = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ethtool = *=* ]]
+compdef:159> cmd=ethtool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ethtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_evince
+compinit:498> _i_name=_evince 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ evince = -[pPkK](n|) ]]
+compinit:509> compdef -na _evince evince
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _evince = *=* ]]
+compdef:79> func=_evince 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _evince
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ evince = -N ]]
+compdef:134> [[ evince = -p ]]
+compdef:136> [[ evince = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ evince = *=* ]]
+compdef:159> cmd=evince 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_evince 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_expand
+compinit:498> _i_name=_expand 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _expand
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_expand_alias
+compinit:498> _i_name=_expand_alias 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -K = -[pPkK](n|) ]]
+compinit:507> compdef -Kna _expand_alias _expand_alias complete-word '\C-xa'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case K (a)
+compdef:15> case K (n)
+compdef:15> case K ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ K = p ]]
+compdef:26> [[ K = P ]]
+compdef:28> [[ K = K ]]
+compdef:29> type=widgetkey 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _expand_alias = *=* ]]
+compdef:79> func=_expand_alias 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _expand_alias
+compdef:81> shift
+compdef:83> case widgetkey (widgetkey)
+compdef:85> [[ -n _expand_alias ]]
+compdef:86> [[ 3 -lt 3 ]]
+compdef:90> [[ _expand_alias = _* ]]
+compdef:91> [[ complete-word = .* ]]
+compdef:91> 2=.complete-word 
+compdef:92> [[ .complete-word = .menu-select ]]
+compdef:93> zle -C _expand_alias .complete-word _expand_alias
+compdef:94> [[ -n yes ]]
+compdef:95> bindkey '\C-xa'
+compdef:95> IFS=$' \t' +compdef:95> read -A opt
+compdef:96> [[ undefined-key = undefined-key ]]
+compdef:96> bindkey '\C-xa' _expand_alias
+compdef:100> shift 3
+compdef:85> [[ -n '' ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_expand_word
+compinit:498> _i_name=_expand_word 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -K = -[pPkK](n|) ]]
+compinit:507> compdef -Kna _expand_word _expand_word complete-word '\C-xe' _list_expansions list-choices '\C-xd'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case K (a)
+compdef:15> case K (n)
+compdef:15> case K ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ K = p ]]
+compdef:26> [[ K = P ]]
+compdef:28> [[ K = K ]]
+compdef:29> type=widgetkey 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _expand_word = *=* ]]
+compdef:79> func=_expand_word 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _expand_word
+compdef:81> shift
+compdef:83> case widgetkey (widgetkey)
+compdef:85> [[ -n _expand_word ]]
+compdef:86> [[ 6 -lt 3 ]]
+compdef:90> [[ _expand_word = _* ]]
+compdef:91> [[ complete-word = .* ]]
+compdef:91> 2=.complete-word 
+compdef:92> [[ .complete-word = .menu-select ]]
+compdef:93> zle -C _expand_word .complete-word _expand_word
+compdef:94> [[ -n yes ]]
+compdef:95> bindkey '\C-xe'
+compdef:95> IFS=$' \t' +compdef:95> read -A opt
+compdef:96> [[ undefined-key = undefined-key ]]
+compdef:96> bindkey '\C-xe' _expand_word
+compdef:100> shift 3
+compdef:85> [[ -n _list_expansions ]]
+compdef:86> [[ 3 -lt 3 ]]
+compdef:90> [[ _list_expansions = _* ]]
+compdef:91> [[ list-choices = .* ]]
+compdef:91> 2=.list-choices 
+compdef:92> [[ .list-choices = .menu-select ]]
+compdef:93> zle -C _list_expansions .list-choices _expand_word
+compdef:94> [[ -n yes ]]
+compdef:95> bindkey '\C-xd'
+compdef:95> IFS=$' \t' +compdef:95> read -A opt
+compdef:96> [[ undefined-key = undefined-key ]]
+compdef:96> bindkey '\C-xd' _list_expansions
+compdef:100> shift 3
+compdef:85> [[ -n '' ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_extensions
+compinit:498> _i_name=_extensions 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _extensions
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_external_pwds
+compinit:498> _i_name=_external_pwds 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _external_pwds
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fakeroot
+compinit:498> _i_name=_fakeroot 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fakeroot = -[pPkK](n|) ]]
+compinit:509> compdef -na _fakeroot fakeroot
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fakeroot = *=* ]]
+compdef:79> func=_fakeroot 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fakeroot
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fakeroot = -N ]]
+compdef:134> [[ fakeroot = -p ]]
+compdef:136> [[ fakeroot = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fakeroot = *=* ]]
+compdef:159> cmd=fakeroot 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fakeroot 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fc
+compinit:498> _i_name=_fc 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fc = -[pPkK](n|) ]]
+compinit:509> compdef -na _fc fc history r
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fc = *=* ]]
+compdef:79> func=_fc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ fc = -N ]]
+compdef:134> [[ fc = -p ]]
+compdef:136> [[ fc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fc = *=* ]]
+compdef:159> cmd=fc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ history = -N ]]
+compdef:134> [[ history = -p ]]
+compdef:136> [[ history = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ history = *=* ]]
+compdef:159> cmd=history 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ r = -N ]]
+compdef:134> [[ r = -p ]]
+compdef:136> [[ r = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ r = *=* ]]
+compdef:159> cmd=r 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_feh
+compinit:498> _i_name=_feh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ feh = -[pPkK](n|) ]]
+compinit:509> compdef -na _feh feh
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _feh = *=* ]]
+compdef:79> func=_feh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _feh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ feh = -N ]]
+compdef:134> [[ feh = -p ]]
+compdef:136> [[ feh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ feh = *=* ]]
+compdef:159> cmd=feh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_feh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fetch
+compinit:498> _i_name=_fetch 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fetch = -[pPkK](n|) ]]
+compinit:509> compdef -na _fetch fetch
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fetch = *=* ]]
+compdef:79> func=_fetch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fetch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fetch = -N ]]
+compdef:134> [[ fetch = -p ]]
+compdef:136> [[ fetch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fetch = *=* ]]
+compdef:159> cmd=fetch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fetch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fetchmail
+compinit:498> _i_name=_fetchmail 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fetchmail = -[pPkK](n|) ]]
+compinit:509> compdef -na _fetchmail fetchmail
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fetchmail = *=* ]]
+compdef:79> func=_fetchmail 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fetchmail
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fetchmail = -N ]]
+compdef:134> [[ fetchmail = -p ]]
+compdef:136> [[ fetchmail = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fetchmail = *=* ]]
+compdef:159> cmd=fetchmail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fetchmail 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ffmpeg
+compinit:498> _i_name=_ffmpeg 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ffmpeg = -[pPkK](n|) ]]
+compinit:509> compdef -na _ffmpeg ffmpeg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ffmpeg = *=* ]]
+compdef:79> func=_ffmpeg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ffmpeg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ffmpeg = -N ]]
+compdef:134> [[ ffmpeg = -p ]]
+compdef:136> [[ ffmpeg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ffmpeg = *=* ]]
+compdef:159> cmd=ffmpeg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ffmpeg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_figlet
+compinit:498> _i_name=_figlet 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ figlet = -[pPkK](n|) ]]
+compinit:509> compdef -na _figlet figlet
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _figlet = *=* ]]
+compdef:79> func=_figlet 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _figlet
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ figlet = -N ]]
+compdef:134> [[ figlet = -p ]]
+compdef:136> [[ figlet = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ figlet = *=* ]]
+compdef:159> cmd=figlet 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_figlet 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_file_descriptors
+compinit:498> _i_name=_file_descriptors 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _file_descriptors
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_files
+compinit:498> _i_name=_files 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -redirect-,-default-,-default- = -[pPkK](n|) ]]
+compinit:509> compdef -na _files -redirect-,-default-,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _files = *=* ]]
+compdef:79> func=_files 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _files
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -redirect-,-default-,-default- = -N ]]
+compdef:134> [[ -redirect-,-default-,-default- = -p ]]
+compdef:136> [[ -redirect-,-default-,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -redirect-,-default-,-default- = *=* ]]
+compdef:159> cmd=-redirect-,-default-,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_files 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_file_systems
+compinit:498> _i_name=_file_systems 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _file_systems
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_find
+compinit:498> _i_name=_find 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ find = -[pPkK](n|) ]]
+compinit:509> compdef -na _find find gfind
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _find = *=* ]]
+compdef:79> func=_find 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _find
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ find = -N ]]
+compdef:134> [[ find = -p ]]
+compdef:136> [[ find = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ find = *=* ]]
+compdef:159> cmd=find 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_find 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gfind = -N ]]
+compdef:134> [[ gfind = -p ]]
+compdef:136> [[ gfind = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gfind = *=* ]]
+compdef:159> cmd=gfind 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_find 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_find_net_interfaces
+compinit:498> _i_name=_find_net_interfaces 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _find_net_interfaces
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_finger
+compinit:498> _i_name=_finger 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ finger = -[pPkK](n|) ]]
+compinit:509> compdef -na _finger finger
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _finger = *=* ]]
+compdef:79> func=_finger 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _finger
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ finger = -N ]]
+compdef:134> [[ finger = -p ]]
+compdef:136> [[ finger = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ finger = *=* ]]
+compdef:159> cmd=finger 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_finger 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fink
+compinit:498> _i_name=_fink 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fink = -[pPkK](n|) ]]
+compinit:509> compdef -na _fink fink
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fink = *=* ]]
+compdef:79> func=_fink 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fink
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fink = -N ]]
+compdef:134> [[ fink = -p ]]
+compdef:136> [[ fink = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fink = *=* ]]
+compdef:159> cmd=fink 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fink 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_first
+compinit:498> _i_name=_first 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -first- = -[pPkK](n|) ]]
+compinit:509> compdef -na _first -first-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _first = *=* ]]
+compdef:79> func=_first 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _first
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -first- = -N ]]
+compdef:134> [[ -first- = -p ]]
+compdef:136> [[ -first- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -first- = *=* ]]
+compdef:159> cmd=-first- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_first 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_flasher
+compinit:498> _i_name=_flasher 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ flasher = -[pPkK](n|) ]]
+compinit:509> compdef -na _flasher flasher
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _flasher = *=* ]]
+compdef:79> func=_flasher 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _flasher
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ flasher = -N ]]
+compdef:134> [[ flasher = -p ]]
+compdef:136> [[ flasher = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ flasher = *=* ]]
+compdef:159> cmd=flasher 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_flasher 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_flex
+compinit:498> _i_name=_flex 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ flex = -[pPkK](n|) ]]
+compinit:509> compdef -na _flex flex flex++
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _flex = *=* ]]
+compdef:79> func=_flex 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _flex
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ flex = -N ]]
+compdef:134> [[ flex = -p ]]
+compdef:136> [[ flex = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ flex = *=* ]]
+compdef:159> cmd=flex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_flex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ flex++ = -N ]]
+compdef:134> [[ flex++ = -p ]]
+compdef:136> [[ flex++ = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ flex++ = *=* ]]
+compdef:159> cmd=flex++ 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_flex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_floppy
+compinit:498> _i_name=_floppy 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ dosread = -[pPkK](n|) ]]
+compinit:509> compdef -na _floppy dosread dosdel
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _floppy = *=* ]]
+compdef:79> func=_floppy 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _floppy
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ dosread = -N ]]
+compdef:134> [[ dosread = -p ]]
+compdef:136> [[ dosread = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dosread = *=* ]]
+compdef:159> cmd=dosread 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_floppy 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ dosdel = -N ]]
+compdef:134> [[ dosdel = -p ]]
+compdef:136> [[ dosdel = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dosdel = *=* ]]
+compdef:159> cmd=dosdel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_floppy 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_flowadm
+compinit:498> _i_name=_flowadm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ flowadm = -[pPkK](n|) ]]
+compinit:509> compdef -na _flowadm flowadm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _flowadm = *=* ]]
+compdef:79> func=_flowadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _flowadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ flowadm = -N ]]
+compdef:134> [[ flowadm = -p ]]
+compdef:136> [[ flowadm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ flowadm = *=* ]]
+compdef:159> cmd=flowadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_flowadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fmadm
+compinit:498> _i_name=_fmadm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fmadm = -[pPkK](n|) ]]
+compinit:509> compdef -na _fmadm fmadm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fmadm = *=* ]]
+compdef:79> func=_fmadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fmadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fmadm = -N ]]
+compdef:134> [[ fmadm = -p ]]
+compdef:136> [[ fmadm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fmadm = *=* ]]
+compdef:159> cmd=fmadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fmadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fmt
+compinit:498> _i_name=_fmt 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fmt = -[pPkK](n|) ]]
+compinit:509> compdef -na _fmt fmt
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fmt = *=* ]]
+compdef:79> func=_fmt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fmt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fmt = -N ]]
+compdef:134> [[ fmt = -p ]]
+compdef:136> [[ fmt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fmt = *=* ]]
+compdef:159> cmd=fmt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fmt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fortune
+compinit:498> _i_name=_fortune 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fortune = -[pPkK](n|) ]]
+compinit:509> compdef -na _fortune fortune
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fortune = *=* ]]
+compdef:79> func=_fortune 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fortune
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fortune = -N ]]
+compdef:134> [[ fortune = -p ]]
+compdef:136> [[ fortune = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fortune = *=* ]]
+compdef:159> cmd=fortune 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fortune 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_freebsd-update
+compinit:498> _i_name=_freebsd-update 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ freebsd-update = -[pPkK](n|) ]]
+compinit:509> compdef -na _freebsd-update freebsd-update
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _freebsd-update = *=* ]]
+compdef:79> func=_freebsd-update 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _freebsd-update
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ freebsd-update = -N ]]
+compdef:134> [[ freebsd-update = -p ]]
+compdef:136> [[ freebsd-update = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ freebsd-update = *=* ]]
+compdef:159> cmd=freebsd-update 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_freebsd-update 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fsh
+compinit:498> _i_name=_fsh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fsh = -[pPkK](n|) ]]
+compinit:509> compdef -na _fsh fsh
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fsh = *=* ]]
+compdef:79> func=_fsh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fsh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fsh = -N ]]
+compdef:134> [[ fsh = -p ]]
+compdef:136> [[ fsh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fsh = *=* ]]
+compdef:159> cmd=fsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fstat
+compinit:498> _i_name=_fstat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fstat = -[pPkK](n|) ]]
+compinit:509> compdef -na _fstat fstat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fstat = *=* ]]
+compdef:79> func=_fstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fstat = -N ]]
+compdef:134> [[ fstat = -p ]]
+compdef:136> [[ fstat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fstat = *=* ]]
+compdef:159> cmd=fstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_functions
+compinit:498> _i_name=_functions 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ unfunction = -[pPkK](n|) ]]
+compinit:509> compdef -na _functions unfunction
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _functions = *=* ]]
+compdef:79> func=_functions 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _functions
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unfunction = -N ]]
+compdef:134> [[ unfunction = -p ]]
+compdef:136> [[ unfunction = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unfunction = *=* ]]
+compdef:159> cmd=unfunction 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_functions 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fuse_arguments
+compinit:498> _i_name=_fuse_arguments 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _fuse_arguments
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fuser
+compinit:498> _i_name=_fuser 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fuser = -[pPkK](n|) ]]
+compinit:509> compdef -na _fuser fuser
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fuser = *=* ]]
+compdef:79> func=_fuser 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fuser
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fuser = -N ]]
+compdef:134> [[ fuser = -p ]]
+compdef:136> [[ fuser = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fuser = *=* ]]
+compdef:159> cmd=fuser 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fuser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fusermount
+compinit:498> _i_name=_fusermount 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fusermount = -[pPkK](n|) ]]
+compinit:509> compdef -na _fusermount fusermount
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fusermount = *=* ]]
+compdef:79> func=_fusermount 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fusermount
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fusermount = -N ]]
+compdef:134> [[ fusermount = -p ]]
+compdef:136> [[ fusermount = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fusermount = *=* ]]
+compdef:159> cmd=fusermount 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fusermount 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fuse_values
+compinit:498> _i_name=_fuse_values 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _fuse_values
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_fw_update
+compinit:498> _i_name=_fw_update 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fw_update = -[pPkK](n|) ]]
+compinit:509> compdef -na _fw_update fw_update
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _fw_update = *=* ]]
+compdef:79> func=_fw_update 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _fw_update
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ fw_update = -N ]]
+compdef:134> [[ fw_update = -p ]]
+compdef:136> [[ fw_update = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fw_update = *=* ]]
+compdef:159> cmd=fw_update 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_fw_update 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gcc
+compinit:498> _i_name=_gcc 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gcc = -[pPkK](n|) ]]
+compinit:509> compdef -na _gcc gcc g++ cc c++ llvm-gcc llvm-g++ clang clang++ -value-,LDFLAGS,-default- -value-,CFLAGS,-default- -value-,CXXFLAGS,-default- -value-,CPPFLAGS,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 14  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 13  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gcc = *=* ]]
+compdef:79> func=_gcc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gcc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  12  ))
+compdef:132> [[ gcc = -N ]]
+compdef:134> [[ gcc = -p ]]
+compdef:136> [[ gcc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gcc = *=* ]]
+compdef:159> cmd=gcc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ g++ = -N ]]
+compdef:134> [[ g++ = -p ]]
+compdef:136> [[ g++ = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ g++ = *=* ]]
+compdef:159> cmd=g++ 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ cc = -N ]]
+compdef:134> [[ cc = -p ]]
+compdef:136> [[ cc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cc = *=* ]]
+compdef:159> cmd=cc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ c++ = -N ]]
+compdef:134> [[ c++ = -p ]]
+compdef:136> [[ c++ = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ c++ = *=* ]]
+compdef:159> cmd=c++ 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ llvm-gcc = -N ]]
+compdef:134> [[ llvm-gcc = -p ]]
+compdef:136> [[ llvm-gcc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ llvm-gcc = *=* ]]
+compdef:159> cmd=llvm-gcc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ llvm-g++ = -N ]]
+compdef:134> [[ llvm-g++ = -p ]]
+compdef:136> [[ llvm-g++ = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ llvm-g++ = *=* ]]
+compdef:159> cmd=llvm-g++ 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ clang = -N ]]
+compdef:134> [[ clang = -p ]]
+compdef:136> [[ clang = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ clang = *=* ]]
+compdef:159> cmd=clang 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ clang++ = -N ]]
+compdef:134> [[ clang++ = -p ]]
+compdef:136> [[ clang++ = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ clang++ = *=* ]]
+compdef:159> cmd=clang++ 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ -value-,LDFLAGS,-default- = -N ]]
+compdef:134> [[ -value-,LDFLAGS,-default- = -p ]]
+compdef:136> [[ -value-,LDFLAGS,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LDFLAGS,-default- = *=* ]]
+compdef:159> cmd=-value-,LDFLAGS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,CFLAGS,-default- = -N ]]
+compdef:134> [[ -value-,CFLAGS,-default- = -p ]]
+compdef:136> [[ -value-,CFLAGS,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,CFLAGS,-default- = *=* ]]
+compdef:159> cmd=-value-,CFLAGS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,CXXFLAGS,-default- = -N ]]
+compdef:134> [[ -value-,CXXFLAGS,-default- = -p ]]
+compdef:136> [[ -value-,CXXFLAGS,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,CXXFLAGS,-default- = *=* ]]
+compdef:159> cmd=-value-,CXXFLAGS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,CPPFLAGS,-default- = -N ]]
+compdef:134> [[ -value-,CPPFLAGS,-default- = -p ]]
+compdef:136> [[ -value-,CPPFLAGS,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,CPPFLAGS,-default- = *=* ]]
+compdef:159> cmd=-value-,CPPFLAGS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gcore
+compinit:498> _i_name=_gcore 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gcore = -[pPkK](n|) ]]
+compinit:509> compdef -na _gcore gcore
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gcore = *=* ]]
+compdef:79> func=_gcore 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gcore
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gcore = -N ]]
+compdef:134> [[ gcore = -p ]]
+compdef:136> [[ gcore = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gcore = *=* ]]
+compdef:159> cmd=gcore 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gcore 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gdb
+compinit:498> _i_name=_gdb 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gdb = -[pPkK](n|) ]]
+compinit:509> compdef -na _gdb gdb
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gdb = *=* ]]
+compdef:79> func=_gdb 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gdb
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gdb = -N ]]
+compdef:134> [[ gdb = -p ]]
+compdef:136> [[ gdb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gdb = *=* ]]
+compdef:159> cmd=gdb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gdb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_generic
+compinit:498> _i_name=_generic 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _generic
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_genisoimage
+compinit:498> _i_name=_genisoimage 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ genisoimage = -[pPkK](n|) ]]
+compinit:509> compdef -na _genisoimage genisoimage
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _genisoimage = *=* ]]
+compdef:79> func=_genisoimage 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _genisoimage
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ genisoimage = -N ]]
+compdef:134> [[ genisoimage = -p ]]
+compdef:136> [[ genisoimage = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ genisoimage = *=* ]]
+compdef:159> cmd=genisoimage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_genisoimage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_getclip
+compinit:498> _i_name=_getclip 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ getclip = -[pPkK](n|) ]]
+compinit:509> compdef -na _getclip getclip getclip.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _getclip = *=* ]]
+compdef:79> func=_getclip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _getclip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ getclip = -N ]]
+compdef:134> [[ getclip = -p ]]
+compdef:136> [[ getclip = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getclip = *=* ]]
+compdef:159> cmd=getclip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getclip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ getclip.exe = -N ]]
+compdef:134> [[ getclip.exe = -p ]]
+compdef:136> [[ getclip.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getclip.exe = *=* ]]
+compdef:159> cmd=getclip.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getclip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_getconf
+compinit:498> _i_name=_getconf 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ getconf = -[pPkK](n|) ]]
+compinit:509> compdef -na _getconf getconf
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _getconf = *=* ]]
+compdef:79> func=_getconf 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _getconf
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ getconf = -N ]]
+compdef:134> [[ getconf = -p ]]
+compdef:136> [[ getconf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getconf = *=* ]]
+compdef:159> cmd=getconf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getconf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_getent
+compinit:498> _i_name=_getent 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ getent = -[pPkK](n|) ]]
+compinit:509> compdef -na _getent getent
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _getent = *=* ]]
+compdef:79> func=_getent 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _getent
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ getent = -N ]]
+compdef:134> [[ getent = -p ]]
+compdef:136> [[ getent = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getent = *=* ]]
+compdef:159> cmd=getent 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getent 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_getfacl
+compinit:498> _i_name=_getfacl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ getfacl = -[pPkK](n|) ]]
+compinit:509> compdef -na _getfacl getfacl getfacl.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _getfacl = *=* ]]
+compdef:79> func=_getfacl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _getfacl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ getfacl = -N ]]
+compdef:134> [[ getfacl = -p ]]
+compdef:136> [[ getfacl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getfacl = *=* ]]
+compdef:159> cmd=getfacl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getfacl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ getfacl.exe = -N ]]
+compdef:134> [[ getfacl.exe = -p ]]
+compdef:136> [[ getfacl.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getfacl.exe = *=* ]]
+compdef:159> cmd=getfacl.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getfacl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_getmail
+compinit:498> _i_name=_getmail 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ getmail = -[pPkK](n|) ]]
+compinit:509> compdef -na _getmail getmail
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _getmail = *=* ]]
+compdef:79> func=_getmail 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _getmail
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ getmail = -N ]]
+compdef:134> [[ getmail = -p ]]
+compdef:136> [[ getmail = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getmail = *=* ]]
+compdef:159> cmd=getmail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_getmail 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_git
+compinit:498> _i_name=_git 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ git = -[pPkK](n|) ]]
+compinit:509> compdef -na _git git git-cvsserver git-receive-pack git-upload-archive git-upload-pack git-shell gitk tig
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _git
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ git = -N ]]
+compdef:134> [[ git = -p ]]
+compdef:136> [[ git = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git = *=* ]]
+compdef:159> cmd=git 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ git-cvsserver = -N ]]
+compdef:134> [[ git-cvsserver = -p ]]
+compdef:136> [[ git-cvsserver = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-cvsserver = *=* ]]
+compdef:159> cmd=git-cvsserver 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ git-receive-pack = -N ]]
+compdef:134> [[ git-receive-pack = -p ]]
+compdef:136> [[ git-receive-pack = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-receive-pack = *=* ]]
+compdef:159> cmd=git-receive-pack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ git-upload-archive = -N ]]
+compdef:134> [[ git-upload-archive = -p ]]
+compdef:136> [[ git-upload-archive = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-upload-archive = *=* ]]
+compdef:159> cmd=git-upload-archive 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ git-upload-pack = -N ]]
+compdef:134> [[ git-upload-pack = -p ]]
+compdef:136> [[ git-upload-pack = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-upload-pack = *=* ]]
+compdef:159> cmd=git-upload-pack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ git-shell = -N ]]
+compdef:134> [[ git-shell = -p ]]
+compdef:136> [[ git-shell = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-shell = *=* ]]
+compdef:159> cmd=git-shell 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ gitk = -N ]]
+compdef:134> [[ gitk = -p ]]
+compdef:136> [[ gitk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gitk = *=* ]]
+compdef:159> cmd=gitk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ tig = -N ]]
+compdef:134> [[ tig = -p ]]
+compdef:136> [[ tig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tig = *=* ]]
+compdef:159> cmd=tig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_git-buildpackage
+compinit:498> _i_name=_git-buildpackage 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ git-buildpackage = -[pPkK](n|) ]]
+compinit:509> compdef -na _git-buildpackage git-buildpackage
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git-buildpackage = *=* ]]
+compdef:79> func=_git-buildpackage 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _git-buildpackage
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ git-buildpackage = -N ]]
+compdef:134> [[ git-buildpackage = -p ]]
+compdef:136> [[ git-buildpackage = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ git-buildpackage = *=* ]]
+compdef:159> cmd=git-buildpackage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_git-buildpackage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_global
+compinit:498> _i_name=_global 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ global = -[pPkK](n|) ]]
+compinit:509> compdef -na _global global
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _global = *=* ]]
+compdef:79> func=_global 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _global
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ global = -N ]]
+compdef:134> [[ global = -p ]]
+compdef:136> [[ global = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ global = *=* ]]
+compdef:159> cmd=global 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_global 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_global_tags
+compinit:498> _i_name=_global_tags 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _global_tags
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_globflags
+compinit:498> _i_name=_globflags 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _globflags
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_globqual_delims
+compinit:498> _i_name=_globqual_delims 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _globqual_delims
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_globquals
+compinit:498> _i_name=_globquals 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _globquals
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gnome-gv
+compinit:498> _i_name=_gnome-gv 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gnome-gv = -[pPkK](n|) ]]
+compinit:509> compdef -na _gnome-gv gnome-gv ggv
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gnome-gv = *=* ]]
+compdef:79> func=_gnome-gv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gnome-gv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ gnome-gv = -N ]]
+compdef:134> [[ gnome-gv = -p ]]
+compdef:136> [[ gnome-gv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnome-gv = *=* ]]
+compdef:159> cmd=gnome-gv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnome-gv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ggv = -N ]]
+compdef:134> [[ ggv = -p ]]
+compdef:136> [[ ggv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ggv = *=* ]]
+compdef:159> cmd=ggv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnome-gv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gnu_generic
+compinit:498> _i_name=_gnu_generic 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _gnu_generic
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gnupod
+compinit:498> _i_name=_gnupod 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gnupod_addsong = -[pPkK](n|) ]]
+compinit:509> compdef -na _gnupod gnupod_addsong 'gnupod_addsong.pl=gnupod_addsong' gnupod_check 'gnupod_check.pl=gnupod_check' gnupod_INIT 'gnupod_INIT.pl=gnupod_INIT' gnupod_search 'gnupod_search.pl=gnupod_search' mktunes 'mktunes.pl=mktunes' tunes2pod 'tunes2pod.pl=tunes2pod'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 14  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 13  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gnupod = *=* ]]
+compdef:79> func=_gnupod 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gnupod
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  12  ))
+compdef:132> [[ gnupod_addsong = -N ]]
+compdef:134> [[ gnupod_addsong = -p ]]
+compdef:136> [[ gnupod_addsong = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnupod_addsong = *=* ]]
+compdef:159> cmd=gnupod_addsong 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ 'gnupod_addsong.pl=gnupod_addsong' = -N ]]
+compdef:134> [[ 'gnupod_addsong.pl=gnupod_addsong' = -p ]]
+compdef:136> [[ 'gnupod_addsong.pl=gnupod_addsong' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gnupod_addsong.pl=gnupod_addsong' = *=* ]]
+compdef:156> cmd=gnupod_addsong.pl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gnupod_addsong 
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ gnupod_check = -N ]]
+compdef:134> [[ gnupod_check = -p ]]
+compdef:136> [[ gnupod_check = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnupod_check = *=* ]]
+compdef:159> cmd=gnupod_check 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ 'gnupod_check.pl=gnupod_check' = -N ]]
+compdef:134> [[ 'gnupod_check.pl=gnupod_check' = -p ]]
+compdef:136> [[ 'gnupod_check.pl=gnupod_check' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gnupod_check.pl=gnupod_check' = *=* ]]
+compdef:156> cmd=gnupod_check.pl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gnupod_check 
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ gnupod_INIT = -N ]]
+compdef:134> [[ gnupod_INIT = -p ]]
+compdef:136> [[ gnupod_INIT = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnupod_INIT = *=* ]]
+compdef:159> cmd=gnupod_INIT 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ 'gnupod_INIT.pl=gnupod_INIT' = -N ]]
+compdef:134> [[ 'gnupod_INIT.pl=gnupod_INIT' = -p ]]
+compdef:136> [[ 'gnupod_INIT.pl=gnupod_INIT' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gnupod_INIT.pl=gnupod_INIT' = *=* ]]
+compdef:156> cmd=gnupod_INIT.pl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gnupod_INIT 
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ gnupod_search = -N ]]
+compdef:134> [[ gnupod_search = -p ]]
+compdef:136> [[ gnupod_search = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnupod_search = *=* ]]
+compdef:159> cmd=gnupod_search 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ 'gnupod_search.pl=gnupod_search' = -N ]]
+compdef:134> [[ 'gnupod_search.pl=gnupod_search' = -p ]]
+compdef:136> [[ 'gnupod_search.pl=gnupod_search' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gnupod_search.pl=gnupod_search' = *=* ]]
+compdef:156> cmd=gnupod_search.pl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gnupod_search 
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ mktunes = -N ]]
+compdef:134> [[ mktunes = -p ]]
+compdef:136> [[ mktunes = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mktunes = *=* ]]
+compdef:159> cmd=mktunes 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ 'mktunes.pl=mktunes' = -N ]]
+compdef:134> [[ 'mktunes.pl=mktunes' = -p ]]
+compdef:136> [[ 'mktunes.pl=mktunes' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'mktunes.pl=mktunes' = *=* ]]
+compdef:156> cmd=mktunes.pl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=mktunes 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ tunes2pod = -N ]]
+compdef:134> [[ tunes2pod = -p ]]
+compdef:136> [[ tunes2pod = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tunes2pod = *=* ]]
+compdef:159> cmd=tunes2pod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'tunes2pod.pl=tunes2pod' = -N ]]
+compdef:134> [[ 'tunes2pod.pl=tunes2pod' = -p ]]
+compdef:136> [[ 'tunes2pod.pl=tunes2pod' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'tunes2pod.pl=tunes2pod' = *=* ]]
+compdef:156> cmd=tunes2pod.pl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnupod 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=tunes2pod 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gnutls
+compinit:498> _i_name=_gnutls 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gnutls-cli = -[pPkK](n|) ]]
+compinit:509> compdef -na _gnutls gnutls-cli gnutls-cli-debug certtool srptool
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gnutls = *=* ]]
+compdef:79> func=_gnutls 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gnutls
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ gnutls-cli = -N ]]
+compdef:134> [[ gnutls-cli = -p ]]
+compdef:136> [[ gnutls-cli = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnutls-cli = *=* ]]
+compdef:159> cmd=gnutls-cli 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnutls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ gnutls-cli-debug = -N ]]
+compdef:134> [[ gnutls-cli-debug = -p ]]
+compdef:136> [[ gnutls-cli-debug = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnutls-cli-debug = *=* ]]
+compdef:159> cmd=gnutls-cli-debug 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnutls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ certtool = -N ]]
+compdef:134> [[ certtool = -p ]]
+compdef:136> [[ certtool = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ certtool = *=* ]]
+compdef:159> cmd=certtool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnutls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ srptool = -N ]]
+compdef:134> [[ srptool = -p ]]
+compdef:136> [[ srptool = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ srptool = *=* ]]
+compdef:159> cmd=srptool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gnutls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_go
+compinit:498> _i_name=_go 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gccgo = -[pPkK](n|) ]]
+compinit:509> compdef -na _go gccgo gofmt 5l 6l 8l 5g 6g 8g
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _go = *=* ]]
+compdef:79> func=_go 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _go
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ gccgo = -N ]]
+compdef:134> [[ gccgo = -p ]]
+compdef:136> [[ gccgo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gccgo = *=* ]]
+compdef:159> cmd=gccgo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ gofmt = -N ]]
+compdef:134> [[ gofmt = -p ]]
+compdef:136> [[ gofmt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gofmt = *=* ]]
+compdef:159> cmd=gofmt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ 5l = -N ]]
+compdef:134> [[ 5l = -p ]]
+compdef:136> [[ 5l = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 5l = *=* ]]
+compdef:159> cmd=5l 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ 6l = -N ]]
+compdef:134> [[ 6l = -p ]]
+compdef:136> [[ 6l = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 6l = *=* ]]
+compdef:159> cmd=6l 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ 8l = -N ]]
+compdef:134> [[ 8l = -p ]]
+compdef:136> [[ 8l = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 8l = *=* ]]
+compdef:159> cmd=8l 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ 5g = -N ]]
+compdef:134> [[ 5g = -p ]]
+compdef:136> [[ 5g = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 5g = *=* ]]
+compdef:159> cmd=5g 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ 6g = -N ]]
+compdef:134> [[ 6g = -p ]]
+compdef:136> [[ 6g = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 6g = *=* ]]
+compdef:159> cmd=6g 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 8g = -N ]]
+compdef:134> [[ 8g = -p ]]
+compdef:136> [[ 8g = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 8g = *=* ]]
+compdef:159> cmd=8g 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_go 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gpasswd
+compinit:498> _i_name=_gpasswd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gpasswd = -[pPkK](n|) ]]
+compinit:509> compdef -na _gpasswd gpasswd
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gpasswd = *=* ]]
+compdef:79> func=_gpasswd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gpasswd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gpasswd = -N ]]
+compdef:134> [[ gpasswd = -p ]]
+compdef:136> [[ gpasswd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gpasswd = *=* ]]
+compdef:159> cmd=gpasswd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gpasswd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gpg
+compinit:498> _i_name=_gpg 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gpg = -[pPkK](n|) ]]
+compinit:509> compdef -na _gpg gpg gpgv gpg-zip 'gpg2=gpg'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gpg = *=* ]]
+compdef:79> func=_gpg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gpg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ gpg = -N ]]
+compdef:134> [[ gpg = -p ]]
+compdef:136> [[ gpg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gpg = *=* ]]
+compdef:159> cmd=gpg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gpg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ gpgv = -N ]]
+compdef:134> [[ gpgv = -p ]]
+compdef:136> [[ gpgv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gpgv = *=* ]]
+compdef:159> cmd=gpgv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gpg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ gpg-zip = -N ]]
+compdef:134> [[ gpg-zip = -p ]]
+compdef:136> [[ gpg-zip = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gpg-zip = *=* ]]
+compdef:159> cmd=gpg-zip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gpg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'gpg2=gpg' = -N ]]
+compdef:134> [[ 'gpg2=gpg' = -p ]]
+compdef:136> [[ 'gpg2=gpg' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gpg2=gpg' = *=* ]]
+compdef:156> cmd=gpg2 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gpg 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gpg 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gphoto2
+compinit:498> _i_name=_gphoto2 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gphoto2 = -[pPkK](n|) ]]
+compinit:509> compdef -na _gphoto2 gphoto2
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gphoto2 = *=* ]]
+compdef:79> func=_gphoto2 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gphoto2
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gphoto2 = -N ]]
+compdef:134> [[ gphoto2 = -p ]]
+compdef:136> [[ gphoto2 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gphoto2 = *=* ]]
+compdef:159> cmd=gphoto2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gphoto2 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gprof
+compinit:498> _i_name=_gprof 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gprof = -[pPkK](n|) ]]
+compinit:509> compdef -na _gprof gprof
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gprof = *=* ]]
+compdef:79> func=_gprof 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gprof
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gprof = -N ]]
+compdef:134> [[ gprof = -p ]]
+compdef:136> [[ gprof = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gprof = *=* ]]
+compdef:159> cmd=gprof 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gprof 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gqview
+compinit:498> _i_name=_gqview 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gqview = -[pPkK](n|) ]]
+compinit:509> compdef -na _gqview gqview
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gqview = *=* ]]
+compdef:79> func=_gqview 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gqview
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gqview = -N ]]
+compdef:134> [[ gqview = -p ]]
+compdef:136> [[ gqview = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gqview = *=* ]]
+compdef:159> cmd=gqview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gqview 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gradle
+compinit:498> _i_name=_gradle 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gradle = -[pPkK](n|) ]]
+compinit:509> compdef -na _gradle gradle gradlew
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gradle = *=* ]]
+compdef:79> func=_gradle 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gradle
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ gradle = -N ]]
+compdef:134> [[ gradle = -p ]]
+compdef:136> [[ gradle = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gradle = *=* ]]
+compdef:159> cmd=gradle 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gradle 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gradlew = -N ]]
+compdef:134> [[ gradlew = -p ]]
+compdef:136> [[ gradlew = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gradlew = *=* ]]
+compdef:159> cmd=gradlew 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gradle 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_graphicsmagick
+compinit:498> _i_name=_graphicsmagick 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gm = -[pPkK](n|) ]]
+compinit:509> compdef -na _graphicsmagick gm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _graphicsmagick = *=* ]]
+compdef:79> func=_graphicsmagick 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _graphicsmagick
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gm = -N ]]
+compdef:134> [[ gm = -p ]]
+compdef:136> [[ gm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gm = *=* ]]
+compdef:159> cmd=gm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_graphicsmagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_grep
+compinit:498> _i_name=_grep 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ grep = -[pPkK](n|) ]]
+compinit:509> compdef -na _grep grep egrep fgrep bsdgrep zgrep zegrep zfgrep ggrep gegrep gfgrep gzgrep gzegrep gzfgrep -value-,GREP_OPTIONS,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 16  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 15  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _grep = *=* ]]
+compdef:79> func=_grep 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _grep
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  14  ))
+compdef:132> [[ grep = -N ]]
+compdef:134> [[ grep = -p ]]
+compdef:136> [[ grep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ grep = *=* ]]
+compdef:159> cmd=grep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ egrep = -N ]]
+compdef:134> [[ egrep = -p ]]
+compdef:136> [[ egrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ egrep = *=* ]]
+compdef:159> cmd=egrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ fgrep = -N ]]
+compdef:134> [[ fgrep = -p ]]
+compdef:136> [[ fgrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fgrep = *=* ]]
+compdef:159> cmd=fgrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ bsdgrep = -N ]]
+compdef:134> [[ bsdgrep = -p ]]
+compdef:136> [[ bsdgrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bsdgrep = *=* ]]
+compdef:159> cmd=bsdgrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ zgrep = -N ]]
+compdef:134> [[ zgrep = -p ]]
+compdef:136> [[ zgrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zgrep = *=* ]]
+compdef:159> cmd=zgrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ zegrep = -N ]]
+compdef:134> [[ zegrep = -p ]]
+compdef:136> [[ zegrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zegrep = *=* ]]
+compdef:159> cmd=zegrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ zfgrep = -N ]]
+compdef:134> [[ zfgrep = -p ]]
+compdef:136> [[ zfgrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zfgrep = *=* ]]
+compdef:159> cmd=zfgrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ ggrep = -N ]]
+compdef:134> [[ ggrep = -p ]]
+compdef:136> [[ ggrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ggrep = *=* ]]
+compdef:159> cmd=ggrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ gegrep = -N ]]
+compdef:134> [[ gegrep = -p ]]
+compdef:136> [[ gegrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gegrep = *=* ]]
+compdef:159> cmd=gegrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ gfgrep = -N ]]
+compdef:134> [[ gfgrep = -p ]]
+compdef:136> [[ gfgrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gfgrep = *=* ]]
+compdef:159> cmd=gfgrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ gzgrep = -N ]]
+compdef:134> [[ gzgrep = -p ]]
+compdef:136> [[ gzgrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gzgrep = *=* ]]
+compdef:159> cmd=gzgrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ gzegrep = -N ]]
+compdef:134> [[ gzegrep = -p ]]
+compdef:136> [[ gzegrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gzegrep = *=* ]]
+compdef:159> cmd=gzegrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ gzfgrep = -N ]]
+compdef:134> [[ gzfgrep = -p ]]
+compdef:136> [[ gzfgrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gzfgrep = *=* ]]
+compdef:159> cmd=gzfgrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,GREP_OPTIONS,-default- = -N ]]
+compdef:134> [[ -value-,GREP_OPTIONS,-default- = -p ]]
+compdef:136> [[ -value-,GREP_OPTIONS,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,GREP_OPTIONS,-default- = *=* ]]
+compdef:159> cmd=-value-,GREP_OPTIONS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_grep-excuses
+compinit:498> _i_name=_grep-excuses 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ grep-excuses = -[pPkK](n|) ]]
+compinit:509> compdef -na _grep-excuses grep-excuses
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _grep-excuses = *=* ]]
+compdef:79> func=_grep-excuses 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _grep-excuses
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ grep-excuses = -N ]]
+compdef:134> [[ grep-excuses = -p ]]
+compdef:136> [[ grep-excuses = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ grep-excuses = *=* ]]
+compdef:159> cmd=grep-excuses 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_grep-excuses 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_groff
+compinit:498> _i_name=_groff 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ groff = -[pPkK](n|) ]]
+compinit:509> compdef -na _groff groff
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _groff = *=* ]]
+compdef:79> func=_groff 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _groff
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ groff = -N ]]
+compdef:134> [[ groff = -p ]]
+compdef:136> [[ groff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ groff = *=* ]]
+compdef:159> cmd=groff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_groff 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_groups
+compinit:498> _i_name=_groups 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ newgrp = -[pPkK](n|) ]]
+compinit:509> compdef -na _groups newgrp groupdel
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _groups = *=* ]]
+compdef:79> func=_groups 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _groups
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ newgrp = -N ]]
+compdef:134> [[ newgrp = -p ]]
+compdef:136> [[ newgrp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ newgrp = *=* ]]
+compdef:159> cmd=newgrp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_groups 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ groupdel = -N ]]
+compdef:134> [[ groupdel = -p ]]
+compdef:136> [[ groupdel = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ groupdel = *=* ]]
+compdef:159> cmd=groupdel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_groups 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_growisofs
+compinit:498> _i_name=_growisofs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mkisofs = -[pPkK](n|) ]]
+compinit:509> compdef -na _growisofs mkisofs growisofs
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _growisofs = *=* ]]
+compdef:79> func=_growisofs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _growisofs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ mkisofs = -N ]]
+compdef:134> [[ mkisofs = -p ]]
+compdef:136> [[ mkisofs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mkisofs = *=* ]]
+compdef:159> cmd=mkisofs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_growisofs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ growisofs = -N ]]
+compdef:134> [[ growisofs = -p ]]
+compdef:136> [[ growisofs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ growisofs = *=* ]]
+compdef:159> cmd=growisofs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_growisofs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gs
+compinit:498> _i_name=_gs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gs = -[pPkK](n|) ]]
+compinit:509> compdef -na _gs gs ghostscript
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gs = *=* ]]
+compdef:79> func=_gs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ gs = -N ]]
+compdef:134> [[ gs = -p ]]
+compdef:136> [[ gs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gs = *=* ]]
+compdef:159> cmd=gs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ghostscript = -N ]]
+compdef:134> [[ ghostscript = -p ]]
+compdef:136> [[ ghostscript = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ghostscript = *=* ]]
+compdef:159> cmd=ghostscript 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gsettings
+compinit:498> _i_name=_gsettings 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gsettings = -[pPkK](n|) ]]
+compinit:509> compdef -na _gsettings gsettings
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gsettings = *=* ]]
+compdef:79> func=_gsettings 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gsettings
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gsettings = -N ]]
+compdef:134> [[ gsettings = -p ]]
+compdef:136> [[ gsettings = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gsettings = *=* ]]
+compdef:159> cmd=gsettings 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gsettings 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gstat
+compinit:498> _i_name=_gstat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gstat = -[pPkK](n|) ]]
+compinit:509> compdef -na _gstat gstat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gstat = *=* ]]
+compdef:79> func=_gstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gstat = -N ]]
+compdef:134> [[ gstat = -p ]]
+compdef:136> [[ gstat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gstat = *=* ]]
+compdef:159> cmd=gstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_guard
+compinit:498> _i_name=_guard 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _guard
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_guilt
+compinit:498> _i_name=_guilt 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ guilt = -[pPkK](n|) ]]
+compinit:509> compdef -na _guilt guilt guilt-add guilt-applied guilt-delete guilt-files guilt-fold guilt-fork guilt-header guilt-help guilt-import-commit guilt-import guilt-init guilt-new guilt-next guilt-patchbomb guilt-pop guilt-prev guilt-push guilt-rebase guilt-refresh guilt-rm guilt-series guilt-status guilt-top guilt-unapplied
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 27  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 26  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _guilt = *=* ]]
+compdef:79> func=_guilt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _guilt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  25  ))
+compdef:132> [[ guilt = -N ]]
+compdef:134> [[ guilt = -p ]]
+compdef:136> [[ guilt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt = *=* ]]
+compdef:159> cmd=guilt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  24  ))
+compdef:132> [[ guilt-add = -N ]]
+compdef:134> [[ guilt-add = -p ]]
+compdef:136> [[ guilt-add = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-add = *=* ]]
+compdef:159> cmd=guilt-add 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  23  ))
+compdef:132> [[ guilt-applied = -N ]]
+compdef:134> [[ guilt-applied = -p ]]
+compdef:136> [[ guilt-applied = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-applied = *=* ]]
+compdef:159> cmd=guilt-applied 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  22  ))
+compdef:132> [[ guilt-delete = -N ]]
+compdef:134> [[ guilt-delete = -p ]]
+compdef:136> [[ guilt-delete = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-delete = *=* ]]
+compdef:159> cmd=guilt-delete 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  21  ))
+compdef:132> [[ guilt-files = -N ]]
+compdef:134> [[ guilt-files = -p ]]
+compdef:136> [[ guilt-files = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-files = *=* ]]
+compdef:159> cmd=guilt-files 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  20  ))
+compdef:132> [[ guilt-fold = -N ]]
+compdef:134> [[ guilt-fold = -p ]]
+compdef:136> [[ guilt-fold = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-fold = *=* ]]
+compdef:159> cmd=guilt-fold 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  19  ))
+compdef:132> [[ guilt-fork = -N ]]
+compdef:134> [[ guilt-fork = -p ]]
+compdef:136> [[ guilt-fork = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-fork = *=* ]]
+compdef:159> cmd=guilt-fork 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  18  ))
+compdef:132> [[ guilt-header = -N ]]
+compdef:134> [[ guilt-header = -p ]]
+compdef:136> [[ guilt-header = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-header = *=* ]]
+compdef:159> cmd=guilt-header 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  17  ))
+compdef:132> [[ guilt-help = -N ]]
+compdef:134> [[ guilt-help = -p ]]
+compdef:136> [[ guilt-help = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-help = *=* ]]
+compdef:159> cmd=guilt-help 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ guilt-import-commit = -N ]]
+compdef:134> [[ guilt-import-commit = -p ]]
+compdef:136> [[ guilt-import-commit = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-import-commit = *=* ]]
+compdef:159> cmd=guilt-import-commit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ guilt-import = -N ]]
+compdef:134> [[ guilt-import = -p ]]
+compdef:136> [[ guilt-import = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-import = *=* ]]
+compdef:159> cmd=guilt-import 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ guilt-init = -N ]]
+compdef:134> [[ guilt-init = -p ]]
+compdef:136> [[ guilt-init = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-init = *=* ]]
+compdef:159> cmd=guilt-init 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ guilt-new = -N ]]
+compdef:134> [[ guilt-new = -p ]]
+compdef:136> [[ guilt-new = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-new = *=* ]]
+compdef:159> cmd=guilt-new 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ guilt-next = -N ]]
+compdef:134> [[ guilt-next = -p ]]
+compdef:136> [[ guilt-next = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-next = *=* ]]
+compdef:159> cmd=guilt-next 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ guilt-patchbomb = -N ]]
+compdef:134> [[ guilt-patchbomb = -p ]]
+compdef:136> [[ guilt-patchbomb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-patchbomb = *=* ]]
+compdef:159> cmd=guilt-patchbomb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ guilt-pop = -N ]]
+compdef:134> [[ guilt-pop = -p ]]
+compdef:136> [[ guilt-pop = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-pop = *=* ]]
+compdef:159> cmd=guilt-pop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ guilt-prev = -N ]]
+compdef:134> [[ guilt-prev = -p ]]
+compdef:136> [[ guilt-prev = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-prev = *=* ]]
+compdef:159> cmd=guilt-prev 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ guilt-push = -N ]]
+compdef:134> [[ guilt-push = -p ]]
+compdef:136> [[ guilt-push = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-push = *=* ]]
+compdef:159> cmd=guilt-push 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ guilt-rebase = -N ]]
+compdef:134> [[ guilt-rebase = -p ]]
+compdef:136> [[ guilt-rebase = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-rebase = *=* ]]
+compdef:159> cmd=guilt-rebase 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ guilt-refresh = -N ]]
+compdef:134> [[ guilt-refresh = -p ]]
+compdef:136> [[ guilt-refresh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-refresh = *=* ]]
+compdef:159> cmd=guilt-refresh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ guilt-rm = -N ]]
+compdef:134> [[ guilt-rm = -p ]]
+compdef:136> [[ guilt-rm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-rm = *=* ]]
+compdef:159> cmd=guilt-rm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ guilt-series = -N ]]
+compdef:134> [[ guilt-series = -p ]]
+compdef:136> [[ guilt-series = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-series = *=* ]]
+compdef:159> cmd=guilt-series 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ guilt-status = -N ]]
+compdef:134> [[ guilt-status = -p ]]
+compdef:136> [[ guilt-status = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-status = *=* ]]
+compdef:159> cmd=guilt-status 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ guilt-top = -N ]]
+compdef:134> [[ guilt-top = -p ]]
+compdef:136> [[ guilt-top = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-top = *=* ]]
+compdef:159> cmd=guilt-top 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ guilt-unapplied = -N ]]
+compdef:134> [[ guilt-unapplied = -p ]]
+compdef:136> [[ guilt-unapplied = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guilt-unapplied = *=* ]]
+compdef:159> cmd=guilt-unapplied 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_guilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gv
+compinit:498> _i_name=_gv 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gv = -[pPkK](n|) ]]
+compinit:509> compdef -na _gv gv
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gv = *=* ]]
+compdef:79> func=_gv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gv = -N ]]
+compdef:134> [[ gv = -p ]]
+compdef:136> [[ gv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gv = *=* ]]
+compdef:159> cmd=gv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_gzip
+compinit:498> _i_name=_gzip 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gzip = -[pPkK](n|) ]]
+compinit:509> compdef -na _gzip gzip gunzip 'gzcat=gunzip' pigz unpigz '-redirect-,<,gunzip=gunzip' '-redirect-,>,gzip=gunzip' '-redirect-,<,gzip=gzip' -value-,GZIP,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 11  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 10  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _gzip = *=* ]]
+compdef:79> func=_gzip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _gzip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  9  ))
+compdef:132> [[ gzip = -N ]]
+compdef:134> [[ gzip = -p ]]
+compdef:136> [[ gzip = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gzip = *=* ]]
+compdef:159> cmd=gzip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ gunzip = -N ]]
+compdef:134> [[ gunzip = -p ]]
+compdef:136> [[ gunzip = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gunzip = *=* ]]
+compdef:159> cmd=gunzip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ 'gzcat=gunzip' = -N ]]
+compdef:134> [[ 'gzcat=gunzip' = -p ]]
+compdef:136> [[ 'gzcat=gunzip' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gzcat=gunzip' = *=* ]]
+compdef:156> cmd=gzcat 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gunzip 
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ pigz = -N ]]
+compdef:134> [[ pigz = -p ]]
+compdef:136> [[ pigz = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pigz = *=* ]]
+compdef:159> cmd=pigz 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ unpigz = -N ]]
+compdef:134> [[ unpigz = -p ]]
+compdef:136> [[ unpigz = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unpigz = *=* ]]
+compdef:159> cmd=unpigz 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ '-redirect-,<,gunzip=gunzip' = -N ]]
+compdef:134> [[ '-redirect-,<,gunzip=gunzip' = -p ]]
+compdef:136> [[ '-redirect-,<,gunzip=gunzip' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,gunzip=gunzip' = *=* ]]
+compdef:156> cmd='-redirect-,<,gunzip' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gunzip 
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ '-redirect-,>,gzip=gunzip' = -N ]]
+compdef:134> [[ '-redirect-,>,gzip=gunzip' = -p ]]
+compdef:136> [[ '-redirect-,>,gzip=gunzip' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,>,gzip=gunzip' = *=* ]]
+compdef:156> cmd='-redirect-,>,gzip' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gunzip 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ '-redirect-,<,gzip=gzip' = -N ]]
+compdef:134> [[ '-redirect-,<,gzip=gzip' = -p ]]
+compdef:136> [[ '-redirect-,<,gzip=gzip' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,gzip=gzip' = *=* ]]
+compdef:156> cmd='-redirect-,<,gzip' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gzip 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,GZIP,-default- = -N ]]
+compdef:134> [[ -value-,GZIP,-default- = -p ]]
+compdef:136> [[ -value-,GZIP,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,GZIP,-default- = *=* ]]
+compdef:159> cmd=-value-,GZIP,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_gzip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_hash
+compinit:498> _i_name=_hash 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ hash = -[pPkK](n|) ]]
+compinit:509> compdef -na _hash hash rehash
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _hash = *=* ]]
+compdef:79> func=_hash 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _hash
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ hash = -N ]]
+compdef:134> [[ hash = -p ]]
+compdef:136> [[ hash = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hash = *=* ]]
+compdef:159> cmd=hash 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hash 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ rehash = -N ]]
+compdef:134> [[ rehash = -p ]]
+compdef:136> [[ rehash = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rehash = *=* ]]
+compdef:159> cmd=rehash 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hash 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_have_glob_qual
+compinit:498> _i_name=_have_glob_qual 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _have_glob_qual
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_hdiutil
+compinit:498> _i_name=_hdiutil 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ hdiutil = -[pPkK](n|) ]]
+compinit:509> compdef -na _hdiutil hdiutil
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _hdiutil = *=* ]]
+compdef:79> func=_hdiutil 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _hdiutil
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ hdiutil = -N ]]
+compdef:134> [[ hdiutil = -p ]]
+compdef:136> [[ hdiutil = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hdiutil = *=* ]]
+compdef:159> cmd=hdiutil 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hdiutil 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_head
+compinit:498> _i_name=_head 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ head = -[pPkK](n|) ]]
+compinit:509> compdef -na _head head
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _head = *=* ]]
+compdef:79> func=_head 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _head
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ head = -N ]]
+compdef:134> [[ head = -p ]]
+compdef:136> [[ head = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ head = *=* ]]
+compdef:159> cmd=head 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_head 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_hg
+compinit:498> _i_name=_hg 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ hg = -[pPkK](n|) ]]
+compinit:509> compdef -na _hg hg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _hg = *=* ]]
+compdef:79> func=_hg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _hg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ hg = -N ]]
+compdef:134> [[ hg = -p ]]
+compdef:136> [[ hg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hg = *=* ]]
+compdef:159> cmd=hg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_history
+compinit:498> _i_name=_history 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _history
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_history_complete_word
+compinit:498> _i_name=_history_complete_word 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -K = -[pPkK](n|) ]]
+compinit:507> compdef -Kna _history_complete_word _history-complete-older complete-word '\e/' _history-complete-newer complete-word '\e,'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case K (a)
+compdef:15> case K (n)
+compdef:15> case K ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ K = p ]]
+compdef:26> [[ K = P ]]
+compdef:28> [[ K = K ]]
+compdef:29> type=widgetkey 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _history_complete_word = *=* ]]
+compdef:79> func=_history_complete_word 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _history_complete_word
+compdef:81> shift
+compdef:83> case widgetkey (widgetkey)
+compdef:85> [[ -n _history-complete-older ]]
+compdef:86> [[ 6 -lt 3 ]]
+compdef:90> [[ _history-complete-older = _* ]]
+compdef:91> [[ complete-word = .* ]]
+compdef:91> 2=.complete-word 
+compdef:92> [[ .complete-word = .menu-select ]]
+compdef:93> zle -C _history-complete-older .complete-word _history_complete_word
+compdef:94> [[ -n yes ]]
+compdef:95> bindkey '\e/'
+compdef:95> IFS=$' \t' +compdef:95> read -A opt
+compdef:96> [[ undefined-key = undefined-key ]]
+compdef:96> bindkey '\e/' _history-complete-older
+compdef:100> shift 3
+compdef:85> [[ -n _history-complete-newer ]]
+compdef:86> [[ 3 -lt 3 ]]
+compdef:90> [[ _history-complete-newer = _* ]]
+compdef:91> [[ complete-word = .* ]]
+compdef:91> 2=.complete-word 
+compdef:92> [[ .complete-word = .menu-select ]]
+compdef:93> zle -C _history-complete-newer .complete-word _history_complete_word
+compdef:94> [[ -n yes ]]
+compdef:95> bindkey '\e,'
+compdef:95> IFS=$' \t' +compdef:95> read -A opt
+compdef:96> [[ undefined-key = undefined-key ]]
+compdef:96> bindkey '\e,' _history-complete-newer
+compdef:100> shift 3
+compdef:85> [[ -n '' ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_history_modifiers
+compinit:498> _i_name=_history_modifiers 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _history_modifiers
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_hosts
+compinit:498> _i_name=_hosts 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ftp = -[pPkK](n|) ]]
+compinit:509> compdef -na _hosts ftp rwho rup xping traceroute host aaaa zone mx ns soa txt
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 14  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 13  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _hosts = *=* ]]
+compdef:79> func=_hosts 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _hosts
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  12  ))
+compdef:132> [[ ftp = -N ]]
+compdef:134> [[ ftp = -p ]]
+compdef:136> [[ ftp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ftp = *=* ]]
+compdef:159> cmd=ftp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ rwho = -N ]]
+compdef:134> [[ rwho = -p ]]
+compdef:136> [[ rwho = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rwho = *=* ]]
+compdef:159> cmd=rwho 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ rup = -N ]]
+compdef:134> [[ rup = -p ]]
+compdef:136> [[ rup = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rup = *=* ]]
+compdef:159> cmd=rup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ xping = -N ]]
+compdef:134> [[ xping = -p ]]
+compdef:136> [[ xping = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xping = *=* ]]
+compdef:159> cmd=xping 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ traceroute = -N ]]
+compdef:134> [[ traceroute = -p ]]
+compdef:136> [[ traceroute = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ traceroute = *=* ]]
+compdef:159> cmd=traceroute 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ host = -N ]]
+compdef:134> [[ host = -p ]]
+compdef:136> [[ host = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ host = *=* ]]
+compdef:159> cmd=host 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ aaaa = -N ]]
+compdef:134> [[ aaaa = -p ]]
+compdef:136> [[ aaaa = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ aaaa = *=* ]]
+compdef:159> cmd=aaaa 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ zone = -N ]]
+compdef:134> [[ zone = -p ]]
+compdef:136> [[ zone = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zone = *=* ]]
+compdef:159> cmd=zone 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ mx = -N ]]
+compdef:134> [[ mx = -p ]]
+compdef:136> [[ mx = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mx = *=* ]]
+compdef:159> cmd=mx 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ ns = -N ]]
+compdef:134> [[ ns = -p ]]
+compdef:136> [[ ns = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ns = *=* ]]
+compdef:159> cmd=ns 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ soa = -N ]]
+compdef:134> [[ soa = -p ]]
+compdef:136> [[ soa = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ soa = *=* ]]
+compdef:159> cmd=soa 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ txt = -N ]]
+compdef:134> [[ txt = -p ]]
+compdef:136> [[ txt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ txt = *=* ]]
+compdef:159> cmd=txt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hosts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_htop
+compinit:498> _i_name=_htop 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ htop = -[pPkK](n|) ]]
+compinit:509> compdef -na _htop htop
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _htop = *=* ]]
+compdef:79> func=_htop 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _htop
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ htop = -N ]]
+compdef:134> [[ htop = -p ]]
+compdef:136> [[ htop = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ htop = *=* ]]
+compdef:159> cmd=htop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_htop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_hwinfo
+compinit:498> _i_name=_hwinfo 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ hwinfo = -[pPkK](n|) ]]
+compinit:509> compdef -na _hwinfo hwinfo
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _hwinfo = *=* ]]
+compdef:79> func=_hwinfo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _hwinfo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ hwinfo = -N ]]
+compdef:134> [[ hwinfo = -p ]]
+compdef:136> [[ hwinfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hwinfo = *=* ]]
+compdef:159> cmd=hwinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_hwinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_iconv
+compinit:498> _i_name=_iconv 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ iconv = -[pPkK](n|) ]]
+compinit:509> compdef -na _iconv iconv
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _iconv = *=* ]]
+compdef:79> func=_iconv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _iconv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ iconv = -N ]]
+compdef:134> [[ iconv = -p ]]
+compdef:136> [[ iconv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iconv = *=* ]]
+compdef:159> cmd=iconv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iconv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_iconvconfig
+compinit:498> _i_name=_iconvconfig 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ iconvconfig = -[pPkK](n|) ]]
+compinit:509> compdef -na _iconvconfig iconvconfig
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _iconvconfig = *=* ]]
+compdef:79> func=_iconvconfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _iconvconfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ iconvconfig = -N ]]
+compdef:134> [[ iconvconfig = -p ]]
+compdef:136> [[ iconvconfig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iconvconfig = *=* ]]
+compdef:159> cmd=iconvconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iconvconfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_id
+compinit:498> _i_name=_id 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ id = -[pPkK](n|) ]]
+compinit:509> compdef -na _id id gid
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _id = *=* ]]
+compdef:79> func=_id 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _id
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ id = -N ]]
+compdef:134> [[ id = -p ]]
+compdef:136> [[ id = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ id = *=* ]]
+compdef:159> cmd=id 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_id 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gid = -N ]]
+compdef:134> [[ gid = -p ]]
+compdef:136> [[ gid = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gid = *=* ]]
+compdef:159> cmd=gid 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_id 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ifconfig
+compinit:498> _i_name=_ifconfig 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ifconfig = -[pPkK](n|) ]]
+compinit:509> compdef -na _ifconfig ifconfig
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ifconfig = *=* ]]
+compdef:79> func=_ifconfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ifconfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ifconfig = -N ]]
+compdef:134> [[ ifconfig = -p ]]
+compdef:136> [[ ifconfig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ifconfig = *=* ]]
+compdef:159> cmd=ifconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ifconfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_iftop
+compinit:498> _i_name=_iftop 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ iftop = -[pPkK](n|) ]]
+compinit:509> compdef -na _iftop iftop
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _iftop = *=* ]]
+compdef:79> func=_iftop 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _iftop
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ iftop = -N ]]
+compdef:134> [[ iftop = -p ]]
+compdef:136> [[ iftop = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iftop = *=* ]]
+compdef:159> cmd=iftop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iftop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ignored
+compinit:498> _i_name=_ignored 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _ignored
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_imagemagick
+compinit:498> _i_name=_imagemagick 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ animate = -[pPkK](n|) ]]
+compinit:509> compdef -na _imagemagick animate composite combine convert display identify import mogrify montage xtp
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 12  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 11  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _imagemagick = *=* ]]
+compdef:79> func=_imagemagick 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _imagemagick
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  10  ))
+compdef:132> [[ animate = -N ]]
+compdef:134> [[ animate = -p ]]
+compdef:136> [[ animate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ animate = *=* ]]
+compdef:159> cmd=animate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ composite = -N ]]
+compdef:134> [[ composite = -p ]]
+compdef:136> [[ composite = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ composite = *=* ]]
+compdef:159> cmd=composite 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ combine = -N ]]
+compdef:134> [[ combine = -p ]]
+compdef:136> [[ combine = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ combine = *=* ]]
+compdef:159> cmd=combine 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ convert = -N ]]
+compdef:134> [[ convert = -p ]]
+compdef:136> [[ convert = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ convert = *=* ]]
+compdef:159> cmd=convert 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ display = -N ]]
+compdef:134> [[ display = -p ]]
+compdef:136> [[ display = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ display = *=* ]]
+compdef:159> cmd=display 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ identify = -N ]]
+compdef:134> [[ identify = -p ]]
+compdef:136> [[ identify = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ identify = *=* ]]
+compdef:159> cmd=identify 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ import = -N ]]
+compdef:134> [[ import = -p ]]
+compdef:136> [[ import = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ import = *=* ]]
+compdef:159> cmd=import 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ mogrify = -N ]]
+compdef:134> [[ mogrify = -p ]]
+compdef:136> [[ mogrify = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mogrify = *=* ]]
+compdef:159> cmd=mogrify 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ montage = -N ]]
+compdef:134> [[ montage = -p ]]
+compdef:136> [[ montage = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ montage = *=* ]]
+compdef:159> cmd=montage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ xtp = -N ]]
+compdef:134> [[ xtp = -p ]]
+compdef:136> [[ xtp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xtp = *=* ]]
+compdef:159> cmd=xtp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_imagemagick 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_inetadm
+compinit:498> _i_name=_inetadm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ inetadm = -[pPkK](n|) ]]
+compinit:509> compdef -na _inetadm inetadm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _inetadm = *=* ]]
+compdef:79> func=_inetadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _inetadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ inetadm = -N ]]
+compdef:134> [[ inetadm = -p ]]
+compdef:136> [[ inetadm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ inetadm = *=* ]]
+compdef:159> cmd=inetadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_inetadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_initctl
+compinit:498> _i_name=_initctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ initctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _initctl initctl start stop restart reload status
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _initctl = *=* ]]
+compdef:79> func=_initctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _initctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ initctl = -N ]]
+compdef:134> [[ initctl = -p ]]
+compdef:136> [[ initctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ initctl = *=* ]]
+compdef:159> cmd=initctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_initctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ start = -N ]]
+compdef:134> [[ start = -p ]]
+compdef:136> [[ start = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ start = *=* ]]
+compdef:159> cmd=start 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_initctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ stop = -N ]]
+compdef:134> [[ stop = -p ]]
+compdef:136> [[ stop = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ stop = *=* ]]
+compdef:159> cmd=stop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_initctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ restart = -N ]]
+compdef:134> [[ restart = -p ]]
+compdef:136> [[ restart = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ restart = *=* ]]
+compdef:159> cmd=restart 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_initctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ reload = -N ]]
+compdef:134> [[ reload = -p ]]
+compdef:136> [[ reload = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ reload = *=* ]]
+compdef:159> cmd=reload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_initctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ status = -N ]]
+compdef:134> [[ status = -p ]]
+compdef:136> [[ status = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ status = *=* ]]
+compdef:159> cmd=status 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_initctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_init_d
+compinit:498> _i_name=_init_d 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -p = -[pPkK](n|) ]]
+compinit:507> compdef -pna _init_d '*/(init|rc[0-9S]#).d/*'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case p (a)
+compdef:15> case p (n)
+compdef:15> case p ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ p = p ]]
+compdef:25> type=pattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _init_d = *=* ]]
+compdef:79> func=_init_d 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _init_d
+compdef:81> shift
+compdef:83> case pattern (widgetkey)
+compdef:83> case pattern (key)
+compdef:83> case pattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ '*/(init|rc[0-9S]#).d/*' = -N ]]
+compdef:134> [[ '*/(init|rc[0-9S]#).d/*' = -p ]]
+compdef:136> [[ '*/(init|rc[0-9S]#).d/*' = -P ]]
+compdef:139> case pattern (pattern)
+compdef:141> [[ '*/(init|rc[0-9S]#).d/*' = (#b)(*)=(*) ]]
+compdef:144> _patcomps[$1]=_init_d 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_in_vared
+compinit:498> _i_name=_in_vared 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -vared- = -[pPkK](n|) ]]
+compinit:509> compdef -na _in_vared -vared-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _in_vared = *=* ]]
+compdef:79> func=_in_vared 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _in_vared
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -vared- = -N ]]
+compdef:134> [[ -vared- = -p ]]
+compdef:136> [[ -vared- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -vared- = *=* ]]
+compdef:159> cmd=-vared- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_in_vared 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_invoke-rc.d
+compinit:498> _i_name=_invoke-rc.d 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ invoke-rc.d = -[pPkK](n|) ]]
+compinit:509> compdef -na _invoke-rc.d invoke-rc.d
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _invoke-rc.d = *=* ]]
+compdef:79> func=_invoke-rc.d 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _invoke-rc.d
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ invoke-rc.d = -N ]]
+compdef:134> [[ invoke-rc.d = -p ]]
+compdef:136> [[ invoke-rc.d = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ invoke-rc.d = *=* ]]
+compdef:159> cmd=invoke-rc.d 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_invoke-rc.d 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ionice
+compinit:498> _i_name=_ionice 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ionice = -[pPkK](n|) ]]
+compinit:509> compdef -na _ionice ionice
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ionice = *=* ]]
+compdef:79> func=_ionice 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ionice
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ionice = -N ]]
+compdef:134> [[ ionice = -p ]]
+compdef:136> [[ ionice = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ionice = *=* ]]
+compdef:159> cmd=ionice 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ionice 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_iostat
+compinit:498> _i_name=_iostat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ iostat = -[pPkK](n|) ]]
+compinit:509> compdef -na _iostat iostat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _iostat = *=* ]]
+compdef:79> func=_iostat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _iostat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ iostat = -N ]]
+compdef:134> [[ iostat = -p ]]
+compdef:136> [[ iostat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iostat = *=* ]]
+compdef:159> cmd=iostat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iostat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ip
+compinit:498> _i_name=_ip 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ip = -[pPkK](n|) ]]
+compinit:509> compdef -na _ip ip
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ip = *=* ]]
+compdef:79> func=_ip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ip = -N ]]
+compdef:134> [[ ip = -p ]]
+compdef:136> [[ ip = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ip = *=* ]]
+compdef:159> cmd=ip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ipadm
+compinit:498> _i_name=_ipadm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ipadm = -[pPkK](n|) ]]
+compinit:509> compdef -na _ipadm ipadm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ipadm = *=* ]]
+compdef:79> func=_ipadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ipadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ipadm = -N ]]
+compdef:134> [[ ipadm = -p ]]
+compdef:136> [[ ipadm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ipadm = *=* ]]
+compdef:159> cmd=ipadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ipadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ipset
+compinit:498> _i_name=_ipset 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ipset = -[pPkK](n|) ]]
+compinit:509> compdef -na _ipset ipset
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ipset = *=* ]]
+compdef:79> func=_ipset 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ipset
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ipset = -N ]]
+compdef:134> [[ ipset = -p ]]
+compdef:136> [[ ipset = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ipset = *=* ]]
+compdef:159> cmd=ipset 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ipset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_iptables
+compinit:498> _i_name=_iptables 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ iptables = -[pPkK](n|) ]]
+compinit:509> compdef -na _iptables iptables iptables-save iptables-restore
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _iptables = *=* ]]
+compdef:79> func=_iptables 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _iptables
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ iptables = -N ]]
+compdef:134> [[ iptables = -p ]]
+compdef:136> [[ iptables = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iptables = *=* ]]
+compdef:159> cmd=iptables 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iptables 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ iptables-save = -N ]]
+compdef:134> [[ iptables-save = -p ]]
+compdef:136> [[ iptables-save = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iptables-save = *=* ]]
+compdef:159> cmd=iptables-save 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iptables 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ iptables-restore = -N ]]
+compdef:134> [[ iptables-restore = -p ]]
+compdef:136> [[ iptables-restore = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iptables-restore = *=* ]]
+compdef:159> cmd=iptables-restore 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iptables 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_irssi
+compinit:498> _i_name=_irssi 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ irssi = -[pPkK](n|) ]]
+compinit:509> compdef -na _irssi irssi
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _irssi = *=* ]]
+compdef:79> func=_irssi 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _irssi
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ irssi = -N ]]
+compdef:134> [[ irssi = -p ]]
+compdef:136> [[ irssi = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ irssi = *=* ]]
+compdef:159> cmd=irssi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_irssi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ispell
+compinit:498> _i_name=_ispell 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ispell = -[pPkK](n|) ]]
+compinit:509> compdef -na _ispell ispell buildhash munchlist findaffix tryaffix icombine ijoin
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 9  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 8  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ispell = *=* ]]
+compdef:79> func=_ispell 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ispell
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  7  ))
+compdef:132> [[ ispell = -N ]]
+compdef:134> [[ ispell = -p ]]
+compdef:136> [[ ispell = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ispell = *=* ]]
+compdef:159> cmd=ispell 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ buildhash = -N ]]
+compdef:134> [[ buildhash = -p ]]
+compdef:136> [[ buildhash = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ buildhash = *=* ]]
+compdef:159> cmd=buildhash 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ munchlist = -N ]]
+compdef:134> [[ munchlist = -p ]]
+compdef:136> [[ munchlist = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ munchlist = *=* ]]
+compdef:159> cmd=munchlist 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ findaffix = -N ]]
+compdef:134> [[ findaffix = -p ]]
+compdef:136> [[ findaffix = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ findaffix = *=* ]]
+compdef:159> cmd=findaffix 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ tryaffix = -N ]]
+compdef:134> [[ tryaffix = -p ]]
+compdef:136> [[ tryaffix = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tryaffix = *=* ]]
+compdef:159> cmd=tryaffix 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ icombine = -N ]]
+compdef:134> [[ icombine = -p ]]
+compdef:136> [[ icombine = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ icombine = *=* ]]
+compdef:159> cmd=icombine 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ijoin = -N ]]
+compdef:134> [[ ijoin = -p ]]
+compdef:136> [[ ijoin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ijoin = *=* ]]
+compdef:159> cmd=ijoin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ispell 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_iwconfig
+compinit:498> _i_name=_iwconfig 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ iwconfig = -[pPkK](n|) ]]
+compinit:509> compdef -na _iwconfig iwconfig
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _iwconfig = *=* ]]
+compdef:79> func=_iwconfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _iwconfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ iwconfig = -N ]]
+compdef:134> [[ iwconfig = -p ]]
+compdef:136> [[ iwconfig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ iwconfig = *=* ]]
+compdef:159> cmd=iwconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_iwconfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_jails
+compinit:498> _i_name=_jails 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _jails
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_java
+compinit:498> _i_name=_java 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ javac = -[pPkK](n|) ]]
+compinit:509> compdef -na _java javac java javadoc appletviewer jar jdb javah javap extcheck rmic rmiregistry rmid serialver native2ascii keytool jarsigner policytool
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 19  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 18  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _java = *=* ]]
+compdef:79> func=_java 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _java
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  17  ))
+compdef:132> [[ javac = -N ]]
+compdef:134> [[ javac = -p ]]
+compdef:136> [[ javac = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ javac = *=* ]]
+compdef:159> cmd=javac 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ java = -N ]]
+compdef:134> [[ java = -p ]]
+compdef:136> [[ java = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ java = *=* ]]
+compdef:159> cmd=java 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ javadoc = -N ]]
+compdef:134> [[ javadoc = -p ]]
+compdef:136> [[ javadoc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ javadoc = *=* ]]
+compdef:159> cmd=javadoc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ appletviewer = -N ]]
+compdef:134> [[ appletviewer = -p ]]
+compdef:136> [[ appletviewer = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ appletviewer = *=* ]]
+compdef:159> cmd=appletviewer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ jar = -N ]]
+compdef:134> [[ jar = -p ]]
+compdef:136> [[ jar = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jar = *=* ]]
+compdef:159> cmd=jar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ jdb = -N ]]
+compdef:134> [[ jdb = -p ]]
+compdef:136> [[ jdb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jdb = *=* ]]
+compdef:159> cmd=jdb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ javah = -N ]]
+compdef:134> [[ javah = -p ]]
+compdef:136> [[ javah = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ javah = *=* ]]
+compdef:159> cmd=javah 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ javap = -N ]]
+compdef:134> [[ javap = -p ]]
+compdef:136> [[ javap = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ javap = *=* ]]
+compdef:159> cmd=javap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ extcheck = -N ]]
+compdef:134> [[ extcheck = -p ]]
+compdef:136> [[ extcheck = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ extcheck = *=* ]]
+compdef:159> cmd=extcheck 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ rmic = -N ]]
+compdef:134> [[ rmic = -p ]]
+compdef:136> [[ rmic = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmic = *=* ]]
+compdef:159> cmd=rmic 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ rmiregistry = -N ]]
+compdef:134> [[ rmiregistry = -p ]]
+compdef:136> [[ rmiregistry = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmiregistry = *=* ]]
+compdef:159> cmd=rmiregistry 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ rmid = -N ]]
+compdef:134> [[ rmid = -p ]]
+compdef:136> [[ rmid = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmid = *=* ]]
+compdef:159> cmd=rmid 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ serialver = -N ]]
+compdef:134> [[ serialver = -p ]]
+compdef:136> [[ serialver = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ serialver = *=* ]]
+compdef:159> cmd=serialver 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ native2ascii = -N ]]
+compdef:134> [[ native2ascii = -p ]]
+compdef:136> [[ native2ascii = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ native2ascii = *=* ]]
+compdef:159> cmd=native2ascii 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ keytool = -N ]]
+compdef:134> [[ keytool = -p ]]
+compdef:136> [[ keytool = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ keytool = *=* ]]
+compdef:159> cmd=keytool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ jarsigner = -N ]]
+compdef:134> [[ jarsigner = -p ]]
+compdef:136> [[ jarsigner = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jarsigner = *=* ]]
+compdef:159> cmd=jarsigner 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ policytool = -N ]]
+compdef:134> [[ policytool = -p ]]
+compdef:136> [[ policytool = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ policytool = *=* ]]
+compdef:159> cmd=policytool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_java 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_java_class
+compinit:498> _i_name=_java_class 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _java_class
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_jexec
+compinit:498> _i_name=_jexec 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ jexec = -[pPkK](n|) ]]
+compinit:509> compdef -na _jexec jexec
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _jexec = *=* ]]
+compdef:79> func=_jexec 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _jexec
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ jexec = -N ]]
+compdef:134> [[ jexec = -p ]]
+compdef:136> [[ jexec = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jexec = *=* ]]
+compdef:159> cmd=jexec 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_jexec 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_jls
+compinit:498> _i_name=_jls 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ jls = -[pPkK](n|) ]]
+compinit:509> compdef -na _jls jls
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _jls = *=* ]]
+compdef:79> func=_jls 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _jls
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ jls = -N ]]
+compdef:134> [[ jls = -p ]]
+compdef:136> [[ jls = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jls = *=* ]]
+compdef:159> cmd=jls 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_jls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_jobs
+compinit:498> _i_name=_jobs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _jobs
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_jobs_bg
+compinit:498> _i_name=_jobs_bg 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ bg = -[pPkK](n|) ]]
+compinit:509> compdef -na _jobs_bg bg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _jobs_bg = *=* ]]
+compdef:79> func=_jobs_bg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _jobs_bg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ bg = -N ]]
+compdef:134> [[ bg = -p ]]
+compdef:136> [[ bg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bg = *=* ]]
+compdef:159> cmd=bg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_jobs_bg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_jobs_builtin
+compinit:498> _i_name=_jobs_builtin 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ jobs = -[pPkK](n|) ]]
+compinit:509> compdef -na _jobs_builtin jobs
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _jobs_builtin = *=* ]]
+compdef:79> func=_jobs_builtin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _jobs_builtin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ jobs = -N ]]
+compdef:134> [[ jobs = -p ]]
+compdef:136> [[ jobs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jobs = *=* ]]
+compdef:159> cmd=jobs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_jobs_builtin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_jobs_fg
+compinit:498> _i_name=_jobs_fg 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ disown = -[pPkK](n|) ]]
+compinit:509> compdef -na _jobs_fg disown fg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _jobs_fg = *=* ]]
+compdef:79> func=_jobs_fg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _jobs_fg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ disown = -N ]]
+compdef:134> [[ disown = -p ]]
+compdef:136> [[ disown = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ disown = *=* ]]
+compdef:159> cmd=disown 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_jobs_fg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ fg = -N ]]
+compdef:134> [[ fg = -p ]]
+compdef:136> [[ fg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fg = *=* ]]
+compdef:159> cmd=fg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_jobs_fg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_joe
+compinit:498> _i_name=_joe 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ joe = -[pPkK](n|) ]]
+compinit:509> compdef -na _joe joe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _joe = *=* ]]
+compdef:79> func=_joe 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _joe
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ joe = -N ]]
+compdef:134> [[ joe = -p ]]
+compdef:136> [[ joe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ joe = *=* ]]
+compdef:159> cmd=joe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_joe 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_join
+compinit:498> _i_name=_join 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ join = -[pPkK](n|) ]]
+compinit:509> compdef -na _join join gjoin
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _join = *=* ]]
+compdef:79> func=_join 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _join
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ join = -N ]]
+compdef:134> [[ join = -p ]]
+compdef:136> [[ join = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ join = *=* ]]
+compdef:159> cmd=join 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_join 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gjoin = -N ]]
+compdef:134> [[ gjoin = -p ]]
+compdef:136> [[ gjoin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gjoin = *=* ]]
+compdef:159> cmd=gjoin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_join 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_jot
+compinit:498> _i_name=_jot 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ jot = -[pPkK](n|) ]]
+compinit:509> compdef -na _jot jot
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _jot = *=* ]]
+compdef:79> func=_jot 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _jot
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ jot = -N ]]
+compdef:134> [[ jot = -p ]]
+compdef:136> [[ jot = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jot = *=* ]]
+compdef:159> cmd=jot 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_jot 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_kfmclient
+compinit:498> _i_name=_kfmclient 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ kfmclient = -[pPkK](n|) ]]
+compinit:509> compdef -na _kfmclient kfmclient kioclient
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _kfmclient = *=* ]]
+compdef:79> func=_kfmclient 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _kfmclient
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ kfmclient = -N ]]
+compdef:134> [[ kfmclient = -p ]]
+compdef:136> [[ kfmclient = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kfmclient = *=* ]]
+compdef:159> cmd=kfmclient 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kfmclient 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ kioclient = -N ]]
+compdef:134> [[ kioclient = -p ]]
+compdef:136> [[ kioclient = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kioclient = *=* ]]
+compdef:159> cmd=kioclient 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kfmclient 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_kill
+compinit:498> _i_name=_kill 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ kill = -[pPkK](n|) ]]
+compinit:509> compdef -na _kill kill
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _kill = *=* ]]
+compdef:79> func=_kill 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _kill
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ kill = -N ]]
+compdef:134> [[ kill = -p ]]
+compdef:136> [[ kill = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kill = *=* ]]
+compdef:159> cmd=kill 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kill 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_killall
+compinit:498> _i_name=_killall 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ killall = -[pPkK](n|) ]]
+compinit:509> compdef -na _killall killall killall5
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _killall = *=* ]]
+compdef:79> func=_killall 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _killall
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ killall = -N ]]
+compdef:134> [[ killall = -p ]]
+compdef:136> [[ killall = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ killall = *=* ]]
+compdef:159> cmd=killall 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_killall 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ killall5 = -N ]]
+compdef:134> [[ killall5 = -p ]]
+compdef:136> [[ killall5 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ killall5 = *=* ]]
+compdef:159> cmd=killall5 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_killall 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_kld
+compinit:498> _i_name=_kld 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ kldload = -[pPkK](n|) ]]
+compinit:509> compdef -na _kld kldload kldunload
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _kld = *=* ]]
+compdef:79> func=_kld 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _kld
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ kldload = -N ]]
+compdef:134> [[ kldload = -p ]]
+compdef:136> [[ kldload = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kldload = *=* ]]
+compdef:159> cmd=kldload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kld 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ kldunload = -N ]]
+compdef:134> [[ kldunload = -p ]]
+compdef:136> [[ kldunload = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kldunload = *=* ]]
+compdef:159> cmd=kldunload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kld 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_knock
+compinit:498> _i_name=_knock 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ knock = -[pPkK](n|) ]]
+compinit:509> compdef -na _knock knock
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _knock = *=* ]]
+compdef:79> func=_knock 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _knock
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ knock = -N ]]
+compdef:134> [[ knock = -p ]]
+compdef:136> [[ knock = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ knock = *=* ]]
+compdef:159> cmd=knock 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_knock 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_kpartx
+compinit:498> _i_name=_kpartx 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ kpartx = -[pPkK](n|) ]]
+compinit:509> compdef -na _kpartx kpartx
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _kpartx = *=* ]]
+compdef:79> func=_kpartx 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _kpartx
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ kpartx = -N ]]
+compdef:134> [[ kpartx = -p ]]
+compdef:136> [[ kpartx = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kpartx = *=* ]]
+compdef:159> cmd=kpartx 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kpartx 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_kvno
+compinit:498> _i_name=_kvno 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ kvno = -[pPkK](n|) ]]
+compinit:509> compdef -na _kvno kvno
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _kvno = *=* ]]
+compdef:79> func=_kvno 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _kvno
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ kvno = -N ]]
+compdef:134> [[ kvno = -p ]]
+compdef:136> [[ kvno = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kvno = *=* ]]
+compdef:159> cmd=kvno 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_kvno 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_last
+compinit:498> _i_name=_last 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ last = -[pPkK](n|) ]]
+compinit:509> compdef -na _last last lastb
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _last = *=* ]]
+compdef:79> func=_last 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _last
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ last = -N ]]
+compdef:134> [[ last = -p ]]
+compdef:136> [[ last = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ last = *=* ]]
+compdef:159> cmd=last 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_last 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ lastb = -N ]]
+compdef:134> [[ lastb = -p ]]
+compdef:136> [[ lastb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lastb = *=* ]]
+compdef:159> cmd=lastb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_last 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ldd
+compinit:498> _i_name=_ldd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ldd = -[pPkK](n|) ]]
+compinit:509> compdef -na _ldd ldd
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ldd = *=* ]]
+compdef:79> func=_ldd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ldd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ldd = -N ]]
+compdef:134> [[ ldd = -p ]]
+compdef:136> [[ ldd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ldd = *=* ]]
+compdef:159> cmd=ldd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ldd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ld_debug
+compinit:498> _i_name=_ld_debug 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -value-,LD_DEBUG,-default- = -[pPkK](n|) ]]
+compinit:509> compdef -na _ld_debug -value-,LD_DEBUG,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ld_debug = *=* ]]
+compdef:79> func=_ld_debug 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ld_debug
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,LD_DEBUG,-default- = -N ]]
+compdef:134> [[ -value-,LD_DEBUG,-default- = -p ]]
+compdef:136> [[ -value-,LD_DEBUG,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LD_DEBUG,-default- = *=* ]]
+compdef:159> cmd=-value-,LD_DEBUG,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ld_debug 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_less
+compinit:498> _i_name=_less 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ less = -[pPkK](n|) ]]
+compinit:509> compdef -na _less less -value-,LESS,-default- -value-,LESSCHARSET,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _less = *=* ]]
+compdef:79> func=_less 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _less
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ less = -N ]]
+compdef:134> [[ less = -p ]]
+compdef:136> [[ less = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ less = *=* ]]
+compdef:159> cmd=less 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_less 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,LESS,-default- = -N ]]
+compdef:134> [[ -value-,LESS,-default- = -p ]]
+compdef:136> [[ -value-,LESS,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LESS,-default- = *=* ]]
+compdef:159> cmd=-value-,LESS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_less 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,LESSCHARSET,-default- = -N ]]
+compdef:134> [[ -value-,LESSCHARSET,-default- = -p ]]
+compdef:136> [[ -value-,LESSCHARSET,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LESSCHARSET,-default- = *=* ]]
+compdef:159> cmd=-value-,LESSCHARSET,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_less 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lha
+compinit:498> _i_name=_lha 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lha = -[pPkK](n|) ]]
+compinit:509> compdef -na _lha lha
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lha = *=* ]]
+compdef:79> func=_lha 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lha
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lha = -N ]]
+compdef:134> [[ lha = -p ]]
+compdef:136> [[ lha = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lha = *=* ]]
+compdef:159> cmd=lha 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lha 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_libvirt
+compinit:498> _i_name=_libvirt 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ virsh = -[pPkK](n|) ]]
+compinit:509> compdef -na _libvirt virsh virt-admin virt-host-validate virt-pki-validate virt-xml-validate
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _libvirt = *=* ]]
+compdef:79> func=_libvirt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _libvirt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ virsh = -N ]]
+compdef:134> [[ virsh = -p ]]
+compdef:136> [[ virsh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ virsh = *=* ]]
+compdef:159> cmd=virsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_libvirt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ virt-admin = -N ]]
+compdef:134> [[ virt-admin = -p ]]
+compdef:136> [[ virt-admin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ virt-admin = *=* ]]
+compdef:159> cmd=virt-admin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_libvirt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ virt-host-validate = -N ]]
+compdef:134> [[ virt-host-validate = -p ]]
+compdef:136> [[ virt-host-validate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ virt-host-validate = *=* ]]
+compdef:159> cmd=virt-host-validate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_libvirt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ virt-pki-validate = -N ]]
+compdef:134> [[ virt-pki-validate = -p ]]
+compdef:136> [[ virt-pki-validate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ virt-pki-validate = *=* ]]
+compdef:159> cmd=virt-pki-validate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_libvirt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ virt-xml-validate = -N ]]
+compdef:134> [[ virt-xml-validate = -p ]]
+compdef:136> [[ virt-xml-validate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ virt-xml-validate = *=* ]]
+compdef:159> cmd=virt-xml-validate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_libvirt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lighttpd
+compinit:498> _i_name=_lighttpd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lighty-enable-mod = -[pPkK](n|) ]]
+compinit:509> compdef -na _lighttpd lighty-enable-mod lighty-disable-mod
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lighttpd = *=* ]]
+compdef:79> func=_lighttpd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lighttpd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ lighty-enable-mod = -N ]]
+compdef:134> [[ lighty-enable-mod = -p ]]
+compdef:136> [[ lighty-enable-mod = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lighty-enable-mod = *=* ]]
+compdef:159> cmd=lighty-enable-mod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lighttpd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ lighty-disable-mod = -N ]]
+compdef:134> [[ lighty-disable-mod = -p ]]
+compdef:136> [[ lighty-disable-mod = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lighty-disable-mod = *=* ]]
+compdef:159> cmd=lighty-disable-mod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lighttpd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_limit
+compinit:498> _i_name=_limit 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ limit = -[pPkK](n|) ]]
+compinit:509> compdef -na _limit limit
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _limit = *=* ]]
+compdef:79> func=_limit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _limit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ limit = -N ]]
+compdef:134> [[ limit = -p ]]
+compdef:136> [[ limit = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ limit = *=* ]]
+compdef:159> cmd=limit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_limit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_limits
+compinit:498> _i_name=_limits 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ unlimit = -[pPkK](n|) ]]
+compinit:509> compdef -na _limits unlimit
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _limits = *=* ]]
+compdef:79> func=_limits 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _limits
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unlimit = -N ]]
+compdef:134> [[ unlimit = -p ]]
+compdef:136> [[ unlimit = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unlimit = *=* ]]
+compdef:159> cmd=unlimit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_limits 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_links
+compinit:498> _i_name=_links 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ links = -[pPkK](n|) ]]
+compinit:509> compdef -na _links links
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _links = *=* ]]
+compdef:79> func=_links 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _links
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ links = -N ]]
+compdef:134> [[ links = -p ]]
+compdef:136> [[ links = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ links = *=* ]]
+compdef:159> cmd=links 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_links 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lintian
+compinit:498> _i_name=_lintian 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lintian = -[pPkK](n|) ]]
+compinit:509> compdef -na _lintian lintian lintian-info
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lintian = *=* ]]
+compdef:79> func=_lintian 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lintian
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ lintian = -N ]]
+compdef:134> [[ lintian = -p ]]
+compdef:136> [[ lintian = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lintian = *=* ]]
+compdef:159> cmd=lintian 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lintian 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ lintian-info = -N ]]
+compdef:134> [[ lintian-info = -p ]]
+compdef:136> [[ lintian-info = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lintian-info = *=* ]]
+compdef:159> cmd=lintian-info 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lintian 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_list
+compinit:498> _i_name=_list 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _list
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_list_files
+compinit:498> _i_name=_list_files 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _list_files
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lldb
+compinit:498> _i_name=_lldb 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lldb = -[pPkK](n|) ]]
+compinit:509> compdef -na _lldb lldb
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lldb = *=* ]]
+compdef:79> func=_lldb 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lldb
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lldb = -N ]]
+compdef:134> [[ lldb = -p ]]
+compdef:136> [[ lldb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lldb = *=* ]]
+compdef:159> cmd=lldb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lldb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ln
+compinit:498> _i_name=_ln 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ln = -[pPkK](n|) ]]
+compinit:509> compdef -na _ln ln gln zf_ln
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ln = *=* ]]
+compdef:79> func=_ln 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ln
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ ln = -N ]]
+compdef:134> [[ ln = -p ]]
+compdef:136> [[ ln = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ln = *=* ]]
+compdef:159> cmd=ln 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ln 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ gln = -N ]]
+compdef:134> [[ gln = -p ]]
+compdef:136> [[ gln = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gln = *=* ]]
+compdef:159> cmd=gln 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ln 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zf_ln = -N ]]
+compdef:134> [[ zf_ln = -p ]]
+compdef:136> [[ zf_ln = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zf_ln = *=* ]]
+compdef:159> cmd=zf_ln 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ln 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_loadkeys
+compinit:498> _i_name=_loadkeys 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ loadkeys = -[pPkK](n|) ]]
+compinit:509> compdef -na _loadkeys loadkeys
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _loadkeys = *=* ]]
+compdef:79> func=_loadkeys 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _loadkeys
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ loadkeys = -N ]]
+compdef:134> [[ loadkeys = -p ]]
+compdef:136> [[ loadkeys = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ loadkeys = *=* ]]
+compdef:159> cmd=loadkeys 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_loadkeys 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_locale
+compinit:498> _i_name=_locale 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ locale = -[pPkK](n|) ]]
+compinit:509> compdef -na _locale locale
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _locale = *=* ]]
+compdef:79> func=_locale 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _locale
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ locale = -N ]]
+compdef:134> [[ locale = -p ]]
+compdef:136> [[ locale = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ locale = *=* ]]
+compdef:159> cmd=locale 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_locale 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_localedef
+compinit:498> _i_name=_localedef 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ localedef = -[pPkK](n|) ]]
+compinit:509> compdef -na _localedef localedef
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _localedef = *=* ]]
+compdef:79> func=_localedef 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _localedef
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ localedef = -N ]]
+compdef:134> [[ localedef = -p ]]
+compdef:136> [[ localedef = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ localedef = *=* ]]
+compdef:159> cmd=localedef 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_localedef 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_locales
+compinit:498> _i_name=_locales 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -value-,LANG,-default- = -[pPkK](n|) ]]
+compinit:509> compdef -na _locales -value-,LANG,-default- -value-,LANGUAGE,-default- -P '-value-,LC_*,-default-'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _locales = *=* ]]
+compdef:79> func=_locales 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _locales
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ -value-,LANG,-default- = -N ]]
+compdef:134> [[ -value-,LANG,-default- = -p ]]
+compdef:136> [[ -value-,LANG,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LANG,-default- = *=* ]]
+compdef:159> cmd=-value-,LANG,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_locales 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,LANGUAGE,-default- = -N ]]
+compdef:134> [[ -value-,LANGUAGE,-default- = -p ]]
+compdef:136> [[ -value-,LANGUAGE,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LANGUAGE,-default- = *=* ]]
+compdef:159> cmd=-value-,LANGUAGE,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_locales 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -P = -N ]]
+compdef:134> [[ -P = -p ]]
+compdef:136> [[ -P = -P ]]
+compdef:137> type=postpattern 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-value-,LC_*,-default-' = -N ]]
+compdef:134> [[ '-value-,LC_*,-default-' = -p ]]
+compdef:136> [[ '-value-,LC_*,-default-' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '-value-,LC_*,-default-' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_locales 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_locate
+compinit:498> _i_name=_locate 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ locate = -[pPkK](n|) ]]
+compinit:509> compdef -na _locate locate mlocate slocate glocate
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _locate = *=* ]]
+compdef:79> func=_locate 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _locate
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ locate = -N ]]
+compdef:134> [[ locate = -p ]]
+compdef:136> [[ locate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ locate = *=* ]]
+compdef:159> cmd=locate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_locate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ mlocate = -N ]]
+compdef:134> [[ mlocate = -p ]]
+compdef:136> [[ mlocate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mlocate = *=* ]]
+compdef:159> cmd=mlocate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_locate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ slocate = -N ]]
+compdef:134> [[ slocate = -p ]]
+compdef:136> [[ slocate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ slocate = *=* ]]
+compdef:159> cmd=slocate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_locate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ glocate = -N ]]
+compdef:134> [[ glocate = -p ]]
+compdef:136> [[ glocate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ glocate = *=* ]]
+compdef:159> cmd=glocate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_locate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_logical_volumes
+compinit:498> _i_name=_logical_volumes 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _logical_volumes
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_look
+compinit:498> _i_name=_look 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ look = -[pPkK](n|) ]]
+compinit:509> compdef -na _look look
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _look = *=* ]]
+compdef:79> func=_look 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _look
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ look = -N ]]
+compdef:134> [[ look = -p ]]
+compdef:136> [[ look = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ look = *=* ]]
+compdef:159> cmd=look 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_look 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_losetup
+compinit:498> _i_name=_losetup 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ losetup = -[pPkK](n|) ]]
+compinit:509> compdef -na _losetup losetup
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _losetup = *=* ]]
+compdef:79> func=_losetup 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _losetup
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ losetup = -N ]]
+compdef:134> [[ losetup = -p ]]
+compdef:136> [[ losetup = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ losetup = *=* ]]
+compdef:159> cmd=losetup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_losetup 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lp
+compinit:498> _i_name=_lp 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lp = -[pPkK](n|) ]]
+compinit:509> compdef -na _lp lp lpr lpq lprm lpoptions lpstat lpinfo lpadmin
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lp = *=* ]]
+compdef:79> func=_lp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ lp = -N ]]
+compdef:134> [[ lp = -p ]]
+compdef:136> [[ lp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lp = *=* ]]
+compdef:159> cmd=lp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ lpr = -N ]]
+compdef:134> [[ lpr = -p ]]
+compdef:136> [[ lpr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lpr = *=* ]]
+compdef:159> cmd=lpr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ lpq = -N ]]
+compdef:134> [[ lpq = -p ]]
+compdef:136> [[ lpq = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lpq = *=* ]]
+compdef:159> cmd=lpq 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ lprm = -N ]]
+compdef:134> [[ lprm = -p ]]
+compdef:136> [[ lprm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lprm = *=* ]]
+compdef:159> cmd=lprm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ lpoptions = -N ]]
+compdef:134> [[ lpoptions = -p ]]
+compdef:136> [[ lpoptions = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lpoptions = *=* ]]
+compdef:159> cmd=lpoptions 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ lpstat = -N ]]
+compdef:134> [[ lpstat = -p ]]
+compdef:136> [[ lpstat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lpstat = *=* ]]
+compdef:159> cmd=lpstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ lpinfo = -N ]]
+compdef:134> [[ lpinfo = -p ]]
+compdef:136> [[ lpinfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lpinfo = *=* ]]
+compdef:159> cmd=lpinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ lpadmin = -N ]]
+compdef:134> [[ lpadmin = -p ]]
+compdef:136> [[ lpadmin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lpadmin = *=* ]]
+compdef:159> cmd=lpadmin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ls
+compinit:498> _i_name=_ls 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ls = -[pPkK](n|) ]]
+compinit:509> compdef -na _ls ls gls
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ls = *=* ]]
+compdef:79> func=_ls 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ls
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ ls = -N ]]
+compdef:134> [[ ls = -p ]]
+compdef:136> [[ ls = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ls = *=* ]]
+compdef:159> cmd=ls 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gls = -N ]]
+compdef:134> [[ gls = -p ]]
+compdef:136> [[ gls = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gls = *=* ]]
+compdef:159> cmd=gls 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lsblk
+compinit:498> _i_name=_lsblk 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lsblk = -[pPkK](n|) ]]
+compinit:509> compdef -na _lsblk lsblk
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lsblk = *=* ]]
+compdef:79> func=_lsblk 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lsblk
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lsblk = -N ]]
+compdef:134> [[ lsblk = -p ]]
+compdef:136> [[ lsblk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lsblk = *=* ]]
+compdef:159> cmd=lsblk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lsblk 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lscfg
+compinit:498> _i_name=_lscfg 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lscfg = -[pPkK](n|) ]]
+compinit:509> compdef -na _lscfg lscfg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lscfg = *=* ]]
+compdef:79> func=_lscfg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lscfg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lscfg = -N ]]
+compdef:134> [[ lscfg = -p ]]
+compdef:136> [[ lscfg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lscfg = *=* ]]
+compdef:159> cmd=lscfg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lscfg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lsdev
+compinit:498> _i_name=_lsdev 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lsdev = -[pPkK](n|) ]]
+compinit:509> compdef -na _lsdev lsdev
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lsdev = *=* ]]
+compdef:79> func=_lsdev 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lsdev
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lsdev = -N ]]
+compdef:134> [[ lsdev = -p ]]
+compdef:136> [[ lsdev = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lsdev = *=* ]]
+compdef:159> cmd=lsdev 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lsdev 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lslv
+compinit:498> _i_name=_lslv 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lslv = -[pPkK](n|) ]]
+compinit:509> compdef -na _lslv lslv
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lslv = *=* ]]
+compdef:79> func=_lslv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lslv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lslv = -N ]]
+compdef:134> [[ lslv = -p ]]
+compdef:136> [[ lslv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lslv = *=* ]]
+compdef:159> cmd=lslv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lslv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lsof
+compinit:498> _i_name=_lsof 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lsof = -[pPkK](n|) ]]
+compinit:509> compdef -na _lsof lsof
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lsof = *=* ]]
+compdef:79> func=_lsof 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lsof
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lsof = -N ]]
+compdef:134> [[ lsof = -p ]]
+compdef:136> [[ lsof = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lsof = *=* ]]
+compdef:159> cmd=lsof 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lsof 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lspv
+compinit:498> _i_name=_lspv 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lspv = -[pPkK](n|) ]]
+compinit:509> compdef -na _lspv lspv
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lspv = *=* ]]
+compdef:79> func=_lspv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lspv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lspv = -N ]]
+compdef:134> [[ lspv = -p ]]
+compdef:136> [[ lspv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lspv = *=* ]]
+compdef:159> cmd=lspv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lspv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lsusb
+compinit:498> _i_name=_lsusb 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lsusb = -[pPkK](n|) ]]
+compinit:509> compdef -na _lsusb lsusb
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lsusb = *=* ]]
+compdef:79> func=_lsusb 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lsusb
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lsusb = -N ]]
+compdef:134> [[ lsusb = -p ]]
+compdef:136> [[ lsusb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lsusb = *=* ]]
+compdef:159> cmd=lsusb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lsusb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lsvg
+compinit:498> _i_name=_lsvg 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lsvg = -[pPkK](n|) ]]
+compinit:509> compdef -na _lsvg lsvg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lsvg = *=* ]]
+compdef:79> func=_lsvg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lsvg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lsvg = -N ]]
+compdef:134> [[ lsvg = -p ]]
+compdef:136> [[ lsvg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lsvg = *=* ]]
+compdef:159> cmd=lsvg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lsvg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ltrace
+compinit:498> _i_name=_ltrace 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ltrace = -[pPkK](n|) ]]
+compinit:509> compdef -na _ltrace ltrace
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ltrace = *=* ]]
+compdef:79> func=_ltrace 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ltrace
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ltrace = -N ]]
+compdef:134> [[ ltrace = -p ]]
+compdef:136> [[ ltrace = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ltrace = *=* ]]
+compdef:159> cmd=ltrace 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ltrace 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lynx
+compinit:498> _i_name=_lynx 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lynx = -[pPkK](n|) ]]
+compinit:509> compdef -na _lynx lynx
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lynx = *=* ]]
+compdef:79> func=_lynx 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lynx
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lynx = -N ]]
+compdef:134> [[ lynx = -p ]]
+compdef:136> [[ lynx = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lynx = *=* ]]
+compdef:159> cmd=lynx 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lynx 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_lzop
+compinit:498> _i_name=_lzop 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lzop = -[pPkK](n|) ]]
+compinit:509> compdef -na _lzop lzop
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _lzop = *=* ]]
+compdef:79> func=_lzop 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _lzop
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ lzop = -N ]]
+compdef:134> [[ lzop = -p ]]
+compdef:136> [[ lzop = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lzop = *=* ]]
+compdef:159> cmd=lzop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_lzop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mac_applications
+compinit:498> _i_name=_mac_applications 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _mac_applications
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mac_files_for_application
+compinit:498> _i_name=_mac_files_for_application 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _mac_files_for_application
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_madison
+compinit:498> _i_name=_madison 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ madison = -[pPkK](n|) ]]
+compinit:509> compdef -na _madison madison rmadison
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _madison = *=* ]]
+compdef:79> func=_madison 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _madison
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ madison = -N ]]
+compdef:134> [[ madison = -p ]]
+compdef:136> [[ madison = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ madison = *=* ]]
+compdef:159> cmd=madison 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_madison 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ rmadison = -N ]]
+compdef:134> [[ rmadison = -p ]]
+compdef:136> [[ rmadison = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmadison = *=* ]]
+compdef:159> cmd=rmadison 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_madison 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mail
+compinit:498> _i_name=_mail 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mail = -[pPkK](n|) ]]
+compinit:509> compdef -na _mail mail 'mailx=mail' 'Mail=mail' mush zmail 'nail=mail'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mail = *=* ]]
+compdef:79> func=_mail 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mail
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ mail = -N ]]
+compdef:134> [[ mail = -p ]]
+compdef:136> [[ mail = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mail = *=* ]]
+compdef:159> cmd=mail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mail 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ 'mailx=mail' = -N ]]
+compdef:134> [[ 'mailx=mail' = -p ]]
+compdef:136> [[ 'mailx=mail' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'mailx=mail' = *=* ]]
+compdef:156> cmd=mailx 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mail 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=mail 
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ 'Mail=mail' = -N ]]
+compdef:134> [[ 'Mail=mail' = -p ]]
+compdef:136> [[ 'Mail=mail' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'Mail=mail' = *=* ]]
+compdef:156> cmd=Mail 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mail 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=mail 
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ mush = -N ]]
+compdef:134> [[ mush = -p ]]
+compdef:136> [[ mush = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mush = *=* ]]
+compdef:159> cmd=mush 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mail 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ zmail = -N ]]
+compdef:134> [[ zmail = -p ]]
+compdef:136> [[ zmail = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zmail = *=* ]]
+compdef:159> cmd=zmail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mail 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'nail=mail' = -N ]]
+compdef:134> [[ 'nail=mail' = -p ]]
+compdef:136> [[ 'nail=mail' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'nail=mail' = *=* ]]
+compdef:156> cmd=nail 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mail 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=mail 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mailboxes
+compinit:498> _i_name=_mailboxes 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _mailboxes
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_main_complete
+compinit:498> _i_name=_main_complete 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _main_complete
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_make
+compinit:498> _i_name=_make 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ make = -[pPkK](n|) ]]
+compinit:509> compdef -na _make make gmake pmake dmake freebsd-make bmake
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _make = *=* ]]
+compdef:79> func=_make 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _make
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ make = -N ]]
+compdef:134> [[ make = -p ]]
+compdef:136> [[ make = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ make = *=* ]]
+compdef:159> cmd=make 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ gmake = -N ]]
+compdef:134> [[ gmake = -p ]]
+compdef:136> [[ gmake = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gmake = *=* ]]
+compdef:159> cmd=gmake 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ pmake = -N ]]
+compdef:134> [[ pmake = -p ]]
+compdef:136> [[ pmake = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmake = *=* ]]
+compdef:159> cmd=pmake 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ dmake = -N ]]
+compdef:134> [[ dmake = -p ]]
+compdef:136> [[ dmake = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dmake = *=* ]]
+compdef:159> cmd=dmake 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ freebsd-make = -N ]]
+compdef:134> [[ freebsd-make = -p ]]
+compdef:136> [[ freebsd-make = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ freebsd-make = *=* ]]
+compdef:159> cmd=freebsd-make 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ bmake = -N ]]
+compdef:134> [[ bmake = -p ]]
+compdef:136> [[ bmake = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bmake = *=* ]]
+compdef:159> cmd=bmake 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_make-kpkg
+compinit:498> _i_name=_make-kpkg 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ make-kpkg = -[pPkK](n|) ]]
+compinit:509> compdef -na _make-kpkg make-kpkg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _make-kpkg = *=* ]]
+compdef:79> func=_make-kpkg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _make-kpkg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ make-kpkg = -N ]]
+compdef:134> [[ make-kpkg = -p ]]
+compdef:136> [[ make-kpkg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ make-kpkg = *=* ]]
+compdef:159> cmd=make-kpkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_make-kpkg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_man
+compinit:498> _i_name=_man 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ man = -[pPkK](n|) ]]
+compinit:509> compdef -na _man man apropos whatis
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _man = *=* ]]
+compdef:79> func=_man 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _man
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ man = -N ]]
+compdef:134> [[ man = -p ]]
+compdef:136> [[ man = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ man = *=* ]]
+compdef:159> cmd=man 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_man 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ apropos = -N ]]
+compdef:134> [[ apropos = -p ]]
+compdef:136> [[ apropos = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apropos = *=* ]]
+compdef:159> cmd=apropos 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_man 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ whatis = -N ]]
+compdef:134> [[ whatis = -p ]]
+compdef:136> [[ whatis = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ whatis = *=* ]]
+compdef:159> cmd=whatis 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_man 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_match
+compinit:498> _i_name=_match 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _match
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_math
+compinit:498> _i_name=_math 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -math- = -[pPkK](n|) ]]
+compinit:509> compdef -na _math -math- let
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _math = *=* ]]
+compdef:79> func=_math 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _math
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ -math- = -N ]]
+compdef:134> [[ -math- = -p ]]
+compdef:136> [[ -math- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -math- = *=* ]]
+compdef:159> cmd=-math- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_math 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ let = -N ]]
+compdef:134> [[ let = -p ]]
+compdef:136> [[ let = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ let = *=* ]]
+compdef:159> cmd=let 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_math 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_math_params
+compinit:498> _i_name=_math_params 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _math_params
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_matlab
+compinit:498> _i_name=_matlab 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ matlab = -[pPkK](n|) ]]
+compinit:509> compdef -na _matlab matlab
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _matlab = *=* ]]
+compdef:79> func=_matlab 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _matlab
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ matlab = -N ]]
+compdef:134> [[ matlab = -p ]]
+compdef:136> [[ matlab = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ matlab = *=* ]]
+compdef:159> cmd=matlab 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_matlab 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_md5sum
+compinit:498> _i_name=_md5sum 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ md5sum = -[pPkK](n|) ]]
+compinit:509> compdef -na _md5sum md5sum gmd5sum
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _md5sum = *=* ]]
+compdef:79> func=_md5sum 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _md5sum
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ md5sum = -N ]]
+compdef:134> [[ md5sum = -p ]]
+compdef:136> [[ md5sum = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ md5sum = *=* ]]
+compdef:159> cmd=md5sum 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_md5sum 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gmd5sum = -N ]]
+compdef:134> [[ gmd5sum = -p ]]
+compdef:136> [[ gmd5sum = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gmd5sum = *=* ]]
+compdef:159> cmd=gmd5sum 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_md5sum 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mdadm
+compinit:498> _i_name=_mdadm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mdadm = -[pPkK](n|) ]]
+compinit:509> compdef -na _mdadm mdadm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mdadm = *=* ]]
+compdef:79> func=_mdadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mdadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mdadm = -N ]]
+compdef:134> [[ mdadm = -p ]]
+compdef:136> [[ mdadm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mdadm = *=* ]]
+compdef:159> cmd=mdadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mdadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_members
+compinit:498> _i_name=_members 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ members = -[pPkK](n|) ]]
+compinit:509> compdef -na _members members
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _members = *=* ]]
+compdef:79> func=_members 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _members
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ members = -N ]]
+compdef:134> [[ members = -p ]]
+compdef:136> [[ members = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ members = *=* ]]
+compdef:159> cmd=members 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_members 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mencal
+compinit:498> _i_name=_mencal 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mencal = -[pPkK](n|) ]]
+compinit:509> compdef -na _mencal mencal
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mencal = *=* ]]
+compdef:79> func=_mencal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mencal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mencal = -N ]]
+compdef:134> [[ mencal = -p ]]
+compdef:136> [[ mencal = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mencal = *=* ]]
+compdef:159> cmd=mencal 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mencal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_menu
+compinit:498> _i_name=_menu 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _menu
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mere
+compinit:498> _i_name=_mere 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mere = -[pPkK](n|) ]]
+compinit:509> compdef -na _mere mere
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mere = *=* ]]
+compdef:79> func=_mere 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mere
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mere = -N ]]
+compdef:134> [[ mere = -p ]]
+compdef:136> [[ mere = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mere = *=* ]]
+compdef:159> cmd=mere 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mere 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mergechanges
+compinit:498> _i_name=_mergechanges 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mergechanges = -[pPkK](n|) ]]
+compinit:509> compdef -na _mergechanges mergechanges
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mergechanges = *=* ]]
+compdef:79> func=_mergechanges 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mergechanges
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mergechanges = -N ]]
+compdef:134> [[ mergechanges = -p ]]
+compdef:136> [[ mergechanges = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mergechanges = *=* ]]
+compdef:159> cmd=mergechanges 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mergechanges 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_message
+compinit:498> _i_name=_message 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _message
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_metaflac
+compinit:498> _i_name=_metaflac 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ metaflac = -[pPkK](n|) ]]
+compinit:509> compdef -na _metaflac metaflac
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _metaflac = *=* ]]
+compdef:79> func=_metaflac 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _metaflac
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ metaflac = -N ]]
+compdef:134> [[ metaflac = -p ]]
+compdef:136> [[ metaflac = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ metaflac = *=* ]]
+compdef:159> cmd=metaflac 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_metaflac 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mh
+compinit:498> _i_name=_mh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ali = -[pPkK](n|) ]]
+compinit:509> compdef -na _mh ali anno burst comp dist flist flists fmttest folder folders forw fnext fprev inc mark mhfixmsg mhlist mhmail mhn mhparam mhpath mhshow mhstore msgchk new next packf pick prev refile repl rmf rmm scan show sortm whom
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 39  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 38  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mh = *=* ]]
+compdef:79> func=_mh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  37  ))
+compdef:132> [[ ali = -N ]]
+compdef:134> [[ ali = -p ]]
+compdef:136> [[ ali = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ali = *=* ]]
+compdef:159> cmd=ali 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  36  ))
+compdef:132> [[ anno = -N ]]
+compdef:134> [[ anno = -p ]]
+compdef:136> [[ anno = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ anno = *=* ]]
+compdef:159> cmd=anno 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  35  ))
+compdef:132> [[ burst = -N ]]
+compdef:134> [[ burst = -p ]]
+compdef:136> [[ burst = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ burst = *=* ]]
+compdef:159> cmd=burst 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  34  ))
+compdef:132> [[ comp = -N ]]
+compdef:134> [[ comp = -p ]]
+compdef:136> [[ comp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ comp = *=* ]]
+compdef:159> cmd=comp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  33  ))
+compdef:132> [[ dist = -N ]]
+compdef:134> [[ dist = -p ]]
+compdef:136> [[ dist = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dist = *=* ]]
+compdef:159> cmd=dist 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  32  ))
+compdef:132> [[ flist = -N ]]
+compdef:134> [[ flist = -p ]]
+compdef:136> [[ flist = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ flist = *=* ]]
+compdef:159> cmd=flist 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  31  ))
+compdef:132> [[ flists = -N ]]
+compdef:134> [[ flists = -p ]]
+compdef:136> [[ flists = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ flists = *=* ]]
+compdef:159> cmd=flists 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  30  ))
+compdef:132> [[ fmttest = -N ]]
+compdef:134> [[ fmttest = -p ]]
+compdef:136> [[ fmttest = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fmttest = *=* ]]
+compdef:159> cmd=fmttest 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  29  ))
+compdef:132> [[ folder = -N ]]
+compdef:134> [[ folder = -p ]]
+compdef:136> [[ folder = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ folder = *=* ]]
+compdef:159> cmd=folder 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  28  ))
+compdef:132> [[ folders = -N ]]
+compdef:134> [[ folders = -p ]]
+compdef:136> [[ folders = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ folders = *=* ]]
+compdef:159> cmd=folders 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  27  ))
+compdef:132> [[ forw = -N ]]
+compdef:134> [[ forw = -p ]]
+compdef:136> [[ forw = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ forw = *=* ]]
+compdef:159> cmd=forw 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  26  ))
+compdef:132> [[ fnext = -N ]]
+compdef:134> [[ fnext = -p ]]
+compdef:136> [[ fnext = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fnext = *=* ]]
+compdef:159> cmd=fnext 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  25  ))
+compdef:132> [[ fprev = -N ]]
+compdef:134> [[ fprev = -p ]]
+compdef:136> [[ fprev = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fprev = *=* ]]
+compdef:159> cmd=fprev 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  24  ))
+compdef:132> [[ inc = -N ]]
+compdef:134> [[ inc = -p ]]
+compdef:136> [[ inc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ inc = *=* ]]
+compdef:159> cmd=inc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  23  ))
+compdef:132> [[ mark = -N ]]
+compdef:134> [[ mark = -p ]]
+compdef:136> [[ mark = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mark = *=* ]]
+compdef:159> cmd=mark 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  22  ))
+compdef:132> [[ mhfixmsg = -N ]]
+compdef:134> [[ mhfixmsg = -p ]]
+compdef:136> [[ mhfixmsg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhfixmsg = *=* ]]
+compdef:159> cmd=mhfixmsg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  21  ))
+compdef:132> [[ mhlist = -N ]]
+compdef:134> [[ mhlist = -p ]]
+compdef:136> [[ mhlist = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhlist = *=* ]]
+compdef:159> cmd=mhlist 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  20  ))
+compdef:132> [[ mhmail = -N ]]
+compdef:134> [[ mhmail = -p ]]
+compdef:136> [[ mhmail = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhmail = *=* ]]
+compdef:159> cmd=mhmail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  19  ))
+compdef:132> [[ mhn = -N ]]
+compdef:134> [[ mhn = -p ]]
+compdef:136> [[ mhn = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhn = *=* ]]
+compdef:159> cmd=mhn 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  18  ))
+compdef:132> [[ mhparam = -N ]]
+compdef:134> [[ mhparam = -p ]]
+compdef:136> [[ mhparam = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhparam = *=* ]]
+compdef:159> cmd=mhparam 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  17  ))
+compdef:132> [[ mhpath = -N ]]
+compdef:134> [[ mhpath = -p ]]
+compdef:136> [[ mhpath = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhpath = *=* ]]
+compdef:159> cmd=mhpath 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ mhshow = -N ]]
+compdef:134> [[ mhshow = -p ]]
+compdef:136> [[ mhshow = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhshow = *=* ]]
+compdef:159> cmd=mhshow 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ mhstore = -N ]]
+compdef:134> [[ mhstore = -p ]]
+compdef:136> [[ mhstore = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mhstore = *=* ]]
+compdef:159> cmd=mhstore 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ msgchk = -N ]]
+compdef:134> [[ msgchk = -p ]]
+compdef:136> [[ msgchk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ msgchk = *=* ]]
+compdef:159> cmd=msgchk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ new = -N ]]
+compdef:134> [[ new = -p ]]
+compdef:136> [[ new = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ new = *=* ]]
+compdef:159> cmd=new 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ next = -N ]]
+compdef:134> [[ next = -p ]]
+compdef:136> [[ next = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ next = *=* ]]
+compdef:159> cmd=next 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ packf = -N ]]
+compdef:134> [[ packf = -p ]]
+compdef:136> [[ packf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ packf = *=* ]]
+compdef:159> cmd=packf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ pick = -N ]]
+compdef:134> [[ pick = -p ]]
+compdef:136> [[ pick = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pick = *=* ]]
+compdef:159> cmd=pick 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ prev = -N ]]
+compdef:134> [[ prev = -p ]]
+compdef:136> [[ prev = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prev = *=* ]]
+compdef:159> cmd=prev 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ refile = -N ]]
+compdef:134> [[ refile = -p ]]
+compdef:136> [[ refile = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ refile = *=* ]]
+compdef:159> cmd=refile 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ repl = -N ]]
+compdef:134> [[ repl = -p ]]
+compdef:136> [[ repl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ repl = *=* ]]
+compdef:159> cmd=repl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ rmf = -N ]]
+compdef:134> [[ rmf = -p ]]
+compdef:136> [[ rmf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmf = *=* ]]
+compdef:159> cmd=rmf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ rmm = -N ]]
+compdef:134> [[ rmm = -p ]]
+compdef:136> [[ rmm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmm = *=* ]]
+compdef:159> cmd=rmm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ scan = -N ]]
+compdef:134> [[ scan = -p ]]
+compdef:136> [[ scan = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ scan = *=* ]]
+compdef:159> cmd=scan 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ show = -N ]]
+compdef:134> [[ show = -p ]]
+compdef:136> [[ show = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ show = *=* ]]
+compdef:159> cmd=show 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ sortm = -N ]]
+compdef:134> [[ sortm = -p ]]
+compdef:136> [[ sortm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sortm = *=* ]]
+compdef:159> cmd=sortm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ whom = -N ]]
+compdef:134> [[ whom = -p ]]
+compdef:136> [[ whom = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ whom = *=* ]]
+compdef:159> cmd=whom 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mii-tool
+compinit:498> _i_name=_mii-tool 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mii-tool = -[pPkK](n|) ]]
+compinit:509> compdef -na _mii-tool mii-tool
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mii-tool = *=* ]]
+compdef:79> func=_mii-tool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mii-tool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mii-tool = -N ]]
+compdef:134> [[ mii-tool = -p ]]
+compdef:136> [[ mii-tool = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mii-tool = *=* ]]
+compdef:159> cmd=mii-tool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mii-tool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mime_types
+compinit:498> _i_name=_mime_types 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _mime_types
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mixerctl
+compinit:498> _i_name=_mixerctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mixerctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _mixerctl mixerctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mixerctl = *=* ]]
+compdef:79> func=_mixerctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mixerctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mixerctl = -N ]]
+compdef:134> [[ mixerctl = -p ]]
+compdef:136> [[ mixerctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mixerctl = *=* ]]
+compdef:159> cmd=mixerctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mixerctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mkdir
+compinit:498> _i_name=_mkdir 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mkdir = -[pPkK](n|) ]]
+compinit:509> compdef -na _mkdir mkdir gmkdir zf_mkdir
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mkdir = *=* ]]
+compdef:79> func=_mkdir 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mkdir
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ mkdir = -N ]]
+compdef:134> [[ mkdir = -p ]]
+compdef:136> [[ mkdir = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mkdir = *=* ]]
+compdef:159> cmd=mkdir 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mkdir 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ gmkdir = -N ]]
+compdef:134> [[ gmkdir = -p ]]
+compdef:136> [[ gmkdir = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gmkdir = *=* ]]
+compdef:159> cmd=gmkdir 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mkdir 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zf_mkdir = -N ]]
+compdef:134> [[ zf_mkdir = -p ]]
+compdef:136> [[ zf_mkdir = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zf_mkdir = *=* ]]
+compdef:159> cmd=zf_mkdir 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mkdir 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mkshortcut
+compinit:498> _i_name=_mkshortcut 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mkshortcut = -[pPkK](n|) ]]
+compinit:509> compdef -na _mkshortcut mkshortcut mkshortcut.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mkshortcut = *=* ]]
+compdef:79> func=_mkshortcut 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mkshortcut
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ mkshortcut = -N ]]
+compdef:134> [[ mkshortcut = -p ]]
+compdef:136> [[ mkshortcut = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mkshortcut = *=* ]]
+compdef:159> cmd=mkshortcut 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mkshortcut 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ mkshortcut.exe = -N ]]
+compdef:134> [[ mkshortcut.exe = -p ]]
+compdef:136> [[ mkshortcut.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mkshortcut.exe = *=* ]]
+compdef:159> cmd=mkshortcut.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mkshortcut 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mkzsh
+compinit:498> _i_name=_mkzsh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mkzsh = -[pPkK](n|) ]]
+compinit:509> compdef -na _mkzsh mkzsh mkzsh.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mkzsh = *=* ]]
+compdef:79> func=_mkzsh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mkzsh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ mkzsh = -N ]]
+compdef:134> [[ mkzsh = -p ]]
+compdef:136> [[ mkzsh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mkzsh = *=* ]]
+compdef:159> cmd=mkzsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mkzsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ mkzsh.exe = -N ]]
+compdef:134> [[ mkzsh.exe = -p ]]
+compdef:136> [[ mkzsh.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mkzsh.exe = *=* ]]
+compdef:159> cmd=mkzsh.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mkzsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_module
+compinit:498> _i_name=_module 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ module = -[pPkK](n|) ]]
+compinit:509> compdef -na _module module
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _module = *=* ]]
+compdef:79> func=_module 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _module
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ module = -N ]]
+compdef:134> [[ module = -p ]]
+compdef:136> [[ module = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ module = *=* ]]
+compdef:159> cmd=module 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_module 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_module-assistant
+compinit:498> _i_name=_module-assistant 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ module-assistant = -[pPkK](n|) ]]
+compinit:509> compdef -na _module-assistant module-assistant m-a
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _module-assistant = *=* ]]
+compdef:79> func=_module-assistant 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _module-assistant
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ module-assistant = -N ]]
+compdef:134> [[ module-assistant = -p ]]
+compdef:136> [[ module-assistant = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ module-assistant = *=* ]]
+compdef:159> cmd=module-assistant 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_module-assistant 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ m-a = -N ]]
+compdef:134> [[ m-a = -p ]]
+compdef:136> [[ m-a = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ m-a = *=* ]]
+compdef:159> cmd=m-a 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_module-assistant 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_module_math_func
+compinit:498> _i_name=_module_math_func 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _module_math_func
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_modutils
+compinit:498> _i_name=_modutils 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ lsmod = -[pPkK](n|) ]]
+compinit:509> compdef -na _modutils lsmod modinfo modprobe rmmod insmod
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _modutils = *=* ]]
+compdef:79> func=_modutils 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _modutils
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ lsmod = -N ]]
+compdef:134> [[ lsmod = -p ]]
+compdef:136> [[ lsmod = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lsmod = *=* ]]
+compdef:159> cmd=lsmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_modutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ modinfo = -N ]]
+compdef:134> [[ modinfo = -p ]]
+compdef:136> [[ modinfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ modinfo = *=* ]]
+compdef:159> cmd=modinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_modutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ modprobe = -N ]]
+compdef:134> [[ modprobe = -p ]]
+compdef:136> [[ modprobe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ modprobe = *=* ]]
+compdef:159> cmd=modprobe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_modutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ rmmod = -N ]]
+compdef:134> [[ rmmod = -p ]]
+compdef:136> [[ rmmod = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmmod = *=* ]]
+compdef:159> cmd=rmmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_modutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ insmod = -N ]]
+compdef:134> [[ insmod = -p ]]
+compdef:136> [[ insmod = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ insmod = *=* ]]
+compdef:159> cmd=insmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_modutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mondo
+compinit:498> _i_name=_mondo 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mondoarchive = -[pPkK](n|) ]]
+compinit:509> compdef -na _mondo mondoarchive
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mondo = *=* ]]
+compdef:79> func=_mondo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mondo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mondoarchive = -N ]]
+compdef:134> [[ mondoarchive = -p ]]
+compdef:136> [[ mondoarchive = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mondoarchive = *=* ]]
+compdef:159> cmd=mondoarchive 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mondo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_monotone
+compinit:498> _i_name=_monotone 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mtn = -[pPkK](n|) ]]
+compinit:509> compdef -na _monotone mtn
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _monotone = *=* ]]
+compdef:79> func=_monotone 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _monotone
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mtn = -N ]]
+compdef:134> [[ mtn = -p ]]
+compdef:136> [[ mtn = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mtn = *=* ]]
+compdef:159> cmd=mtn 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_monotone 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_moosic
+compinit:498> _i_name=_moosic 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ moosic = -[pPkK](n|) ]]
+compinit:509> compdef -na _moosic moosic
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _moosic = *=* ]]
+compdef:79> func=_moosic 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _moosic
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ moosic = -N ]]
+compdef:134> [[ moosic = -p ]]
+compdef:136> [[ moosic = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ moosic = *=* ]]
+compdef:159> cmd=moosic 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_moosic 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mosh
+compinit:498> _i_name=_mosh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mosh = -[pPkK](n|) ]]
+compinit:509> compdef -na _mosh mosh
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mosh = *=* ]]
+compdef:79> func=_mosh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mosh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mosh = -N ]]
+compdef:134> [[ mosh = -p ]]
+compdef:136> [[ mosh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mosh = *=* ]]
+compdef:159> cmd=mosh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mosh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_most_recent_file
+compinit:498> _i_name=_most_recent_file 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -k = -[pPkK](n|) ]]
+compinit:507> compdef -kna _most_recent_file complete-word '\C-xm'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k = p ]]
+compdef:26> [[ k = P ]]
+compdef:28> [[ k = K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _most_recent_file = *=* ]]
+compdef:79> func=_most_recent_file 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _most_recent_file
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word = .* ]]
+compdef:114> [[ complete-word = menu-select ]]
+compdef:115> zle -C _most_recent_file .complete-word _most_recent_file
+compdef:117> shift
+compdef:120> i=\C-xm
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-xm'
+compdef:122> IFS=$' \t' +compdef:122> read -A opt
+compdef:123> [[ undefined-key = undefined-key ]]
+compdef:125> bindkey '\C-xm' _most_recent_file
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mount
+compinit:498> _i_name=_mount 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mount = -[pPkK](n|) ]]
+compinit:509> compdef -na _mount mount umount
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mount = *=* ]]
+compdef:79> func=_mount 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mount
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ mount = -N ]]
+compdef:134> [[ mount = -p ]]
+compdef:136> [[ mount = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mount = *=* ]]
+compdef:159> cmd=mount 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mount 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ umount = -N ]]
+compdef:134> [[ umount = -p ]]
+compdef:136> [[ umount = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ umount = *=* ]]
+compdef:159> cmd=umount 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mount 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mozilla
+compinit:498> _i_name=_mozilla 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mozilla = -[pPkK](n|) ]]
+compinit:509> compdef -na _mozilla mozilla mozilla-firefox mozilla-xremote-client firefox 'iceweasel=firefox'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mozilla = *=* ]]
+compdef:79> func=_mozilla 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mozilla
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ mozilla = -N ]]
+compdef:134> [[ mozilla = -p ]]
+compdef:136> [[ mozilla = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mozilla = *=* ]]
+compdef:159> cmd=mozilla 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mozilla 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ mozilla-firefox = -N ]]
+compdef:134> [[ mozilla-firefox = -p ]]
+compdef:136> [[ mozilla-firefox = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mozilla-firefox = *=* ]]
+compdef:159> cmd=mozilla-firefox 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mozilla 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ mozilla-xremote-client = -N ]]
+compdef:134> [[ mozilla-xremote-client = -p ]]
+compdef:136> [[ mozilla-xremote-client = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mozilla-xremote-client = *=* ]]
+compdef:159> cmd=mozilla-xremote-client 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mozilla 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ firefox = -N ]]
+compdef:134> [[ firefox = -p ]]
+compdef:136> [[ firefox = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ firefox = *=* ]]
+compdef:159> cmd=firefox 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mozilla 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'iceweasel=firefox' = -N ]]
+compdef:134> [[ 'iceweasel=firefox' = -p ]]
+compdef:136> [[ 'iceweasel=firefox' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'iceweasel=firefox' = *=* ]]
+compdef:156> cmd=iceweasel 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mozilla 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=firefox 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mpc
+compinit:498> _i_name=_mpc 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mpc = -[pPkK](n|) ]]
+compinit:509> compdef -na _mpc mpc
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mpc = *=* ]]
+compdef:79> func=_mpc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mpc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mpc = -N ]]
+compdef:134> [[ mpc = -p ]]
+compdef:136> [[ mpc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mpc = *=* ]]
+compdef:159> cmd=mpc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mpc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mplayer
+compinit:498> _i_name=_mplayer 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mplayer = -[pPkK](n|) ]]
+compinit:509> compdef -na _mplayer mplayer gmplayer
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mplayer = *=* ]]
+compdef:79> func=_mplayer 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mplayer
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ mplayer = -N ]]
+compdef:134> [[ mplayer = -p ]]
+compdef:136> [[ mplayer = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mplayer = *=* ]]
+compdef:159> cmd=mplayer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mplayer 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gmplayer = -N ]]
+compdef:134> [[ gmplayer = -p ]]
+compdef:136> [[ gmplayer = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gmplayer = *=* ]]
+compdef:159> cmd=gmplayer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mplayer 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mt
+compinit:498> _i_name=_mt 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mt = -[pPkK](n|) ]]
+compinit:509> compdef -na _mt mt
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mt = *=* ]]
+compdef:79> func=_mt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mt = -N ]]
+compdef:134> [[ mt = -p ]]
+compdef:136> [[ mt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mt = *=* ]]
+compdef:159> cmd=mt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mtools
+compinit:498> _i_name=_mtools 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mattrib = -[pPkK](n|) ]]
+compinit:509> compdef -na _mtools mattrib mcopy mdel mdu mcd mdeltree mdir mformat mlabel mmd mmount mmove mrd mread mren mtoolstest mtype
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 19  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 18  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mtools = *=* ]]
+compdef:79> func=_mtools 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mtools
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  17  ))
+compdef:132> [[ mattrib = -N ]]
+compdef:134> [[ mattrib = -p ]]
+compdef:136> [[ mattrib = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mattrib = *=* ]]
+compdef:159> cmd=mattrib 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ mcopy = -N ]]
+compdef:134> [[ mcopy = -p ]]
+compdef:136> [[ mcopy = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mcopy = *=* ]]
+compdef:159> cmd=mcopy 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ mdel = -N ]]
+compdef:134> [[ mdel = -p ]]
+compdef:136> [[ mdel = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mdel = *=* ]]
+compdef:159> cmd=mdel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ mdu = -N ]]
+compdef:134> [[ mdu = -p ]]
+compdef:136> [[ mdu = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mdu = *=* ]]
+compdef:159> cmd=mdu 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ mcd = -N ]]
+compdef:134> [[ mcd = -p ]]
+compdef:136> [[ mcd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mcd = *=* ]]
+compdef:159> cmd=mcd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ mdeltree = -N ]]
+compdef:134> [[ mdeltree = -p ]]
+compdef:136> [[ mdeltree = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mdeltree = *=* ]]
+compdef:159> cmd=mdeltree 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ mdir = -N ]]
+compdef:134> [[ mdir = -p ]]
+compdef:136> [[ mdir = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mdir = *=* ]]
+compdef:159> cmd=mdir 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ mformat = -N ]]
+compdef:134> [[ mformat = -p ]]
+compdef:136> [[ mformat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mformat = *=* ]]
+compdef:159> cmd=mformat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ mlabel = -N ]]
+compdef:134> [[ mlabel = -p ]]
+compdef:136> [[ mlabel = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mlabel = *=* ]]
+compdef:159> cmd=mlabel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ mmd = -N ]]
+compdef:134> [[ mmd = -p ]]
+compdef:136> [[ mmd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mmd = *=* ]]
+compdef:159> cmd=mmd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ mmount = -N ]]
+compdef:134> [[ mmount = -p ]]
+compdef:136> [[ mmount = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mmount = *=* ]]
+compdef:159> cmd=mmount 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ mmove = -N ]]
+compdef:134> [[ mmove = -p ]]
+compdef:136> [[ mmove = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mmove = *=* ]]
+compdef:159> cmd=mmove 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ mrd = -N ]]
+compdef:134> [[ mrd = -p ]]
+compdef:136> [[ mrd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mrd = *=* ]]
+compdef:159> cmd=mrd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ mread = -N ]]
+compdef:134> [[ mread = -p ]]
+compdef:136> [[ mread = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mread = *=* ]]
+compdef:159> cmd=mread 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ mren = -N ]]
+compdef:134> [[ mren = -p ]]
+compdef:136> [[ mren = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mren = *=* ]]
+compdef:159> cmd=mren 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ mtoolstest = -N ]]
+compdef:134> [[ mtoolstest = -p ]]
+compdef:136> [[ mtoolstest = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mtoolstest = *=* ]]
+compdef:159> cmd=mtoolstest 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ mtype = -N ]]
+compdef:134> [[ mtype = -p ]]
+compdef:136> [[ mtype = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mtype = *=* ]]
+compdef:159> cmd=mtype 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtools 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mtr
+compinit:498> _i_name=_mtr 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mtr = -[pPkK](n|) ]]
+compinit:509> compdef -na _mtr mtr
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mtr = *=* ]]
+compdef:79> func=_mtr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mtr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mtr = -N ]]
+compdef:134> [[ mtr = -p ]]
+compdef:136> [[ mtr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mtr = *=* ]]
+compdef:159> cmd=mtr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mtr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_multi_parts
+compinit:498> _i_name=_multi_parts 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _multi_parts
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mutt
+compinit:498> _i_name=_mutt 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mutt = -[pPkK](n|) ]]
+compinit:509> compdef -na _mutt mutt
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mutt = *=* ]]
+compdef:79> func=_mutt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mutt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mutt = -N ]]
+compdef:134> [[ mutt = -p ]]
+compdef:136> [[ mutt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mutt = *=* ]]
+compdef:159> cmd=mutt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mutt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_my_accounts
+compinit:498> _i_name=_my_accounts 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _my_accounts
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mysqldiff
+compinit:498> _i_name=_mysqldiff 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mysqldiff = -[pPkK](n|) ]]
+compinit:509> compdef -na _mysqldiff mysqldiff
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mysqldiff = *=* ]]
+compdef:79> func=_mysqldiff 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mysqldiff
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ mysqldiff = -N ]]
+compdef:134> [[ mysqldiff = -p ]]
+compdef:136> [[ mysqldiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mysqldiff = *=* ]]
+compdef:159> cmd=mysqldiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mysqldiff 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_mysql_utils
+compinit:498> _i_name=_mysql_utils 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mysql = -[pPkK](n|) ]]
+compinit:509> compdef -na _mysql_utils mysql mysqlshow mysqldump mysqlimport mysqladmin
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _mysql_utils = *=* ]]
+compdef:79> func=_mysql_utils 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _mysql_utils
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ mysql = -N ]]
+compdef:134> [[ mysql = -p ]]
+compdef:136> [[ mysql = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mysql = *=* ]]
+compdef:159> cmd=mysql 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mysql_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ mysqlshow = -N ]]
+compdef:134> [[ mysqlshow = -p ]]
+compdef:136> [[ mysqlshow = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mysqlshow = *=* ]]
+compdef:159> cmd=mysqlshow 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mysql_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ mysqldump = -N ]]
+compdef:134> [[ mysqldump = -p ]]
+compdef:136> [[ mysqldump = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mysqldump = *=* ]]
+compdef:159> cmd=mysqldump 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mysql_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ mysqlimport = -N ]]
+compdef:134> [[ mysqlimport = -p ]]
+compdef:136> [[ mysqlimport = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mysqlimport = *=* ]]
+compdef:159> cmd=mysqlimport 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mysql_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ mysqladmin = -N ]]
+compdef:134> [[ mysqladmin = -p ]]
+compdef:136> [[ mysqladmin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mysqladmin = *=* ]]
+compdef:159> cmd=mysqladmin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_mysql_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_nautilus
+compinit:498> _i_name=_nautilus 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ nautilus = -[pPkK](n|) ]]
+compinit:509> compdef -na _nautilus nautilus
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nautilus = *=* ]]
+compdef:79> func=_nautilus 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nautilus
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nautilus = -N ]]
+compdef:134> [[ nautilus = -p ]]
+compdef:136> [[ nautilus = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nautilus = *=* ]]
+compdef:159> cmd=nautilus 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nautilus 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ncftp
+compinit:498> _i_name=_ncftp 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ncftp = -[pPkK](n|) ]]
+compinit:509> compdef -na _ncftp ncftp lftp
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ncftp = *=* ]]
+compdef:79> func=_ncftp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ncftp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ ncftp = -N ]]
+compdef:134> [[ ncftp = -p ]]
+compdef:136> [[ ncftp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ncftp = *=* ]]
+compdef:159> cmd=ncftp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ncftp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ lftp = -N ]]
+compdef:134> [[ lftp = -p ]]
+compdef:136> [[ lftp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lftp = *=* ]]
+compdef:159> cmd=lftp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ncftp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_nedit
+compinit:498> _i_name=_nedit 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ nedit = -[pPkK](n|) ]]
+compinit:509> compdef -na _nedit nedit 'nedit-nc=nc' 'ncl=nc'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nedit = *=* ]]
+compdef:79> func=_nedit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nedit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ nedit = -N ]]
+compdef:134> [[ nedit = -p ]]
+compdef:136> [[ nedit = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nedit = *=* ]]
+compdef:159> cmd=nedit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nedit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ 'nedit-nc=nc' = -N ]]
+compdef:134> [[ 'nedit-nc=nc' = -p ]]
+compdef:136> [[ 'nedit-nc=nc' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'nedit-nc=nc' = *=* ]]
+compdef:156> cmd=nedit-nc 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nedit 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=nc 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'ncl=nc' = -N ]]
+compdef:134> [[ 'ncl=nc' = -p ]]
+compdef:136> [[ 'ncl=nc' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ncl=nc' = *=* ]]
+compdef:156> cmd=ncl 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nedit 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=nc 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_netcat
+compinit:498> _i_name=_netcat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ nc = -[pPkK](n|) ]]
+compinit:509> compdef -na _netcat nc netcat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _netcat = *=* ]]
+compdef:79> func=_netcat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _netcat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ nc = -N ]]
+compdef:134> [[ nc = -p ]]
+compdef:136> [[ nc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nc = *=* ]]
+compdef:159> cmd=nc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_netcat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ netcat = -N ]]
+compdef:134> [[ netcat = -p ]]
+compdef:136> [[ netcat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ netcat = *=* ]]
+compdef:159> cmd=netcat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_netcat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_net_interfaces
+compinit:498> _i_name=_net_interfaces 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ifup = -[pPkK](n|) ]]
+compinit:509> compdef -na _net_interfaces ifup ifdown
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _net_interfaces = *=* ]]
+compdef:79> func=_net_interfaces 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _net_interfaces
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ ifup = -N ]]
+compdef:134> [[ ifup = -p ]]
+compdef:136> [[ ifup = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ifup = *=* ]]
+compdef:159> cmd=ifup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_net_interfaces 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ifdown = -N ]]
+compdef:134> [[ ifdown = -p ]]
+compdef:136> [[ ifdown = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ifdown = *=* ]]
+compdef:159> cmd=ifdown 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_net_interfaces 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_netscape
+compinit:498> _i_name=_netscape 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ netscape = -[pPkK](n|) ]]
+compinit:509> compdef -na _netscape netscape
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _netscape = *=* ]]
+compdef:79> func=_netscape 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _netscape
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ netscape = -N ]]
+compdef:134> [[ netscape = -p ]]
+compdef:136> [[ netscape = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ netscape = *=* ]]
+compdef:159> cmd=netscape 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_netscape 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_netstat
+compinit:498> _i_name=_netstat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ netstat = -[pPkK](n|) ]]
+compinit:509> compdef -na _netstat netstat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _netstat = *=* ]]
+compdef:79> func=_netstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _netstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ netstat = -N ]]
+compdef:134> [[ netstat = -p ]]
+compdef:136> [[ netstat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ netstat = *=* ]]
+compdef:159> cmd=netstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_netstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_newsgroups
+compinit:498> _i_name=_newsgroups 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _newsgroups
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_next_label
+compinit:498> _i_name=_next_label 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _next_label
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_next_tags
+compinit:498> _i_name=_next_tags 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -k = -[pPkK](n|) ]]
+compinit:507> compdef -kna _next_tags list-choices '\C-xn'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k = p ]]
+compdef:26> [[ k = P ]]
+compdef:28> [[ k = K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _next_tags = *=* ]]
+compdef:79> func=_next_tags 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _next_tags
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ list-choices = .* ]]
+compdef:114> [[ list-choices = menu-select ]]
+compdef:115> zle -C _next_tags .list-choices _next_tags
+compdef:117> shift
+compdef:120> i=\C-xn
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-xn'
+compdef:122> IFS=$' \t' +compdef:122> read -A opt
+compdef:123> [[ undefined-key = undefined-key ]]
+compdef:125> bindkey '\C-xn' _next_tags
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_nice
+compinit:498> _i_name=_nice 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ nice = -[pPkK](n|) ]]
+compinit:509> compdef -na _nice nice
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nice = *=* ]]
+compdef:79> func=_nice 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nice
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nice = -N ]]
+compdef:134> [[ nice = -p ]]
+compdef:136> [[ nice = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nice = *=* ]]
+compdef:159> cmd=nice 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nice 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_nkf
+compinit:498> _i_name=_nkf 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ nkf = -[pPkK](n|) ]]
+compinit:509> compdef -na _nkf nkf
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nkf = *=* ]]
+compdef:79> func=_nkf 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nkf
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nkf = -N ]]
+compdef:134> [[ nkf = -p ]]
+compdef:136> [[ nkf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nkf = *=* ]]
+compdef:159> cmd=nkf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nkf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_nl
+compinit:498> _i_name=_nl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ nl = -[pPkK](n|) ]]
+compinit:509> compdef -na _nl nl gnl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nl = *=* ]]
+compdef:79> func=_nl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ nl = -N ]]
+compdef:134> [[ nl = -p ]]
+compdef:136> [[ nl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nl = *=* ]]
+compdef:159> cmd=nl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gnl = -N ]]
+compdef:134> [[ gnl = -p ]]
+compdef:136> [[ gnl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnl = *=* ]]
+compdef:159> cmd=gnl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_nm
+compinit:498> _i_name=_nm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ nm = -[pPkK](n|) ]]
+compinit:509> compdef -na _nm nm eu-nm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nm = *=* ]]
+compdef:79> func=_nm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ nm = -N ]]
+compdef:134> [[ nm = -p ]]
+compdef:136> [[ nm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nm = *=* ]]
+compdef:159> cmd=nm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ eu-nm = -N ]]
+compdef:134> [[ eu-nm = -p ]]
+compdef:136> [[ eu-nm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ eu-nm = *=* ]]
+compdef:159> cmd=eu-nm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_nmap
+compinit:498> _i_name=_nmap 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ nmap = -[pPkK](n|) ]]
+compinit:509> compdef -na _nmap nmap
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nmap = *=* ]]
+compdef:79> func=_nmap 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nmap
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nmap = -N ]]
+compdef:134> [[ nmap = -p ]]
+compdef:136> [[ nmap = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nmap = *=* ]]
+compdef:159> cmd=nmap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nmap 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_nmcli
+compinit:498> _i_name=_nmcli 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ nmcli = -[pPkK](n|) ]]
+compinit:509> compdef -na _nmcli nmcli
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nmcli = *=* ]]
+compdef:79> func=_nmcli 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nmcli
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nmcli = -N ]]
+compdef:134> [[ nmcli = -p ]]
+compdef:136> [[ nmcli = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nmcli = *=* ]]
+compdef:159> cmd=nmcli 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nmcli 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_normal
+compinit:498> _i_name=_normal 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -command-line- = -[pPkK](n|) ]]
+compinit:509> compdef -na _normal -command-line-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _normal = *=* ]]
+compdef:79> func=_normal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _normal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -command-line- = -N ]]
+compdef:134> [[ -command-line- = -p ]]
+compdef:136> [[ -command-line- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -command-line- = *=* ]]
+compdef:159> cmd=-command-line- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_normal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_nothing
+compinit:498> _i_name=_nothing 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ true = -[pPkK](n|) ]]
+compinit:509> compdef -na _nothing true false log times clear logname whoami sync
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nothing = *=* ]]
+compdef:79> func=_nothing 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nothing
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ true = -N ]]
+compdef:134> [[ true = -p ]]
+compdef:136> [[ true = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ true = *=* ]]
+compdef:159> cmd=true 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ false = -N ]]
+compdef:134> [[ false = -p ]]
+compdef:136> [[ false = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ false = *=* ]]
+compdef:159> cmd=false 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ log = -N ]]
+compdef:134> [[ log = -p ]]
+compdef:136> [[ log = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ log = *=* ]]
+compdef:159> cmd=log 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ times = -N ]]
+compdef:134> [[ times = -p ]]
+compdef:136> [[ times = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ times = *=* ]]
+compdef:159> cmd=times 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ clear = -N ]]
+compdef:134> [[ clear = -p ]]
+compdef:136> [[ clear = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ clear = *=* ]]
+compdef:159> cmd=clear 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ logname = -N ]]
+compdef:134> [[ logname = -p ]]
+compdef:136> [[ logname = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ logname = *=* ]]
+compdef:159> cmd=logname 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ whoami = -N ]]
+compdef:134> [[ whoami = -p ]]
+compdef:136> [[ whoami = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ whoami = *=* ]]
+compdef:159> cmd=whoami 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ sync = -N ]]
+compdef:134> [[ sync = -p ]]
+compdef:136> [[ sync = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sync = *=* ]]
+compdef:159> cmd=sync 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nothing 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_notmuch
+compinit:498> _i_name=_notmuch 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ notmuch = -[pPkK](n|) ]]
+compinit:509> compdef -na _notmuch notmuch
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _notmuch = *=* ]]
+compdef:79> func=_notmuch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _notmuch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ notmuch = -N ]]
+compdef:134> [[ notmuch = -p ]]
+compdef:136> [[ notmuch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ notmuch = *=* ]]
+compdef:159> cmd=notmuch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_notmuch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_npm
+compinit:498> _i_name=_npm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ npm = -[pPkK](n|) ]]
+compinit:509> compdef -na _npm npm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _npm = *=* ]]
+compdef:79> func=_npm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _npm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ npm = -N ]]
+compdef:134> [[ npm = -p ]]
+compdef:136> [[ npm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ npm = *=* ]]
+compdef:159> cmd=npm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_npm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_nslookup
+compinit:498> _i_name=_nslookup 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ nslookup = -[pPkK](n|) ]]
+compinit:509> compdef -na _nslookup nslookup
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _nslookup = *=* ]]
+compdef:79> func=_nslookup 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _nslookup
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ nslookup = -N ]]
+compdef:134> [[ nslookup = -p ]]
+compdef:136> [[ nslookup = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nslookup = *=* ]]
+compdef:159> cmd=nslookup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_nslookup 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_objdump
+compinit:498> _i_name=_objdump 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ objdump = -[pPkK](n|) ]]
+compinit:509> compdef -na _objdump objdump
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _objdump = *=* ]]
+compdef:79> func=_objdump 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _objdump
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ objdump = -N ]]
+compdef:134> [[ objdump = -p ]]
+compdef:136> [[ objdump = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ objdump = *=* ]]
+compdef:159> cmd=objdump 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_objdump 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_object_classes
+compinit:498> _i_name=_object_classes 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ odmget = -[pPkK](n|) ]]
+compinit:509> compdef -na _object_classes odmget odmshow odme
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _object_classes = *=* ]]
+compdef:79> func=_object_classes 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _object_classes
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ odmget = -N ]]
+compdef:134> [[ odmget = -p ]]
+compdef:136> [[ odmget = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ odmget = *=* ]]
+compdef:159> cmd=odmget 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_object_classes 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ odmshow = -N ]]
+compdef:134> [[ odmshow = -p ]]
+compdef:136> [[ odmshow = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ odmshow = *=* ]]
+compdef:159> cmd=odmshow 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_object_classes 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ odme = -N ]]
+compdef:134> [[ odme = -p ]]
+compdef:136> [[ odme = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ odme = *=* ]]
+compdef:159> cmd=odme 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_object_classes 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_object_files
+compinit:498> _i_name=_object_files 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _object_files
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_od
+compinit:498> _i_name=_od 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ od = -[pPkK](n|) ]]
+compinit:509> compdef -na _od od god
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _od = *=* ]]
+compdef:79> func=_od 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _od
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ od = -N ]]
+compdef:134> [[ od = -p ]]
+compdef:136> [[ od = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ od = *=* ]]
+compdef:159> cmd=od 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_od 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ god = -N ]]
+compdef:134> [[ god = -p ]]
+compdef:136> [[ god = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ god = *=* ]]
+compdef:159> cmd=god 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_od 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_okular
+compinit:498> _i_name=_okular 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ okular = -[pPkK](n|) ]]
+compinit:509> compdef -na _okular okular
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _okular = *=* ]]
+compdef:79> func=_okular 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _okular
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ okular = -N ]]
+compdef:134> [[ okular = -p ]]
+compdef:136> [[ okular = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ okular = *=* ]]
+compdef:159> cmd=okular 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_okular 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_oldlist
+compinit:498> _i_name=_oldlist 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _oldlist
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_open
+compinit:498> _i_name=_open 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ open = -[pPkK](n|) ]]
+compinit:509> compdef -na _open open
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _open = *=* ]]
+compdef:79> func=_open 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _open
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ open = -N ]]
+compdef:134> [[ open = -p ]]
+compdef:136> [[ open = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ open = *=* ]]
+compdef:159> cmd=open 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_open 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_openstack
+compinit:498> _i_name=_openstack 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ openstack = -[pPkK](n|) ]]
+compinit:509> compdef -na _openstack openstack aodh barbican ceilometer cinder cloudkitty designate freezer glance gnocchi heat ironic keystone magnum manila mistral monasca murano neutron nova sahara senlin tacker trove vitrage watcher zun
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 29  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 28  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _openstack = *=* ]]
+compdef:79> func=_openstack 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _openstack
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  27  ))
+compdef:132> [[ openstack = -N ]]
+compdef:134> [[ openstack = -p ]]
+compdef:136> [[ openstack = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ openstack = *=* ]]
+compdef:159> cmd=openstack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  26  ))
+compdef:132> [[ aodh = -N ]]
+compdef:134> [[ aodh = -p ]]
+compdef:136> [[ aodh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ aodh = *=* ]]
+compdef:159> cmd=aodh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  25  ))
+compdef:132> [[ barbican = -N ]]
+compdef:134> [[ barbican = -p ]]
+compdef:136> [[ barbican = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ barbican = *=* ]]
+compdef:159> cmd=barbican 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  24  ))
+compdef:132> [[ ceilometer = -N ]]
+compdef:134> [[ ceilometer = -p ]]
+compdef:136> [[ ceilometer = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ceilometer = *=* ]]
+compdef:159> cmd=ceilometer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  23  ))
+compdef:132> [[ cinder = -N ]]
+compdef:134> [[ cinder = -p ]]
+compdef:136> [[ cinder = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cinder = *=* ]]
+compdef:159> cmd=cinder 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  22  ))
+compdef:132> [[ cloudkitty = -N ]]
+compdef:134> [[ cloudkitty = -p ]]
+compdef:136> [[ cloudkitty = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cloudkitty = *=* ]]
+compdef:159> cmd=cloudkitty 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  21  ))
+compdef:132> [[ designate = -N ]]
+compdef:134> [[ designate = -p ]]
+compdef:136> [[ designate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ designate = *=* ]]
+compdef:159> cmd=designate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  20  ))
+compdef:132> [[ freezer = -N ]]
+compdef:134> [[ freezer = -p ]]
+compdef:136> [[ freezer = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ freezer = *=* ]]
+compdef:159> cmd=freezer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  19  ))
+compdef:132> [[ glance = -N ]]
+compdef:134> [[ glance = -p ]]
+compdef:136> [[ glance = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ glance = *=* ]]
+compdef:159> cmd=glance 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  18  ))
+compdef:132> [[ gnocchi = -N ]]
+compdef:134> [[ gnocchi = -p ]]
+compdef:136> [[ gnocchi = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gnocchi = *=* ]]
+compdef:159> cmd=gnocchi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  17  ))
+compdef:132> [[ heat = -N ]]
+compdef:134> [[ heat = -p ]]
+compdef:136> [[ heat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ heat = *=* ]]
+compdef:159> cmd=heat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ ironic = -N ]]
+compdef:134> [[ ironic = -p ]]
+compdef:136> [[ ironic = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ironic = *=* ]]
+compdef:159> cmd=ironic 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ keystone = -N ]]
+compdef:134> [[ keystone = -p ]]
+compdef:136> [[ keystone = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ keystone = *=* ]]
+compdef:159> cmd=keystone 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ magnum = -N ]]
+compdef:134> [[ magnum = -p ]]
+compdef:136> [[ magnum = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ magnum = *=* ]]
+compdef:159> cmd=magnum 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ manila = -N ]]
+compdef:134> [[ manila = -p ]]
+compdef:136> [[ manila = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ manila = *=* ]]
+compdef:159> cmd=manila 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ mistral = -N ]]
+compdef:134> [[ mistral = -p ]]
+compdef:136> [[ mistral = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mistral = *=* ]]
+compdef:159> cmd=mistral 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ monasca = -N ]]
+compdef:134> [[ monasca = -p ]]
+compdef:136> [[ monasca = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ monasca = *=* ]]
+compdef:159> cmd=monasca 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ murano = -N ]]
+compdef:134> [[ murano = -p ]]
+compdef:136> [[ murano = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ murano = *=* ]]
+compdef:159> cmd=murano 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ neutron = -N ]]
+compdef:134> [[ neutron = -p ]]
+compdef:136> [[ neutron = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ neutron = *=* ]]
+compdef:159> cmd=neutron 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ nova = -N ]]
+compdef:134> [[ nova = -p ]]
+compdef:136> [[ nova = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nova = *=* ]]
+compdef:159> cmd=nova 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ sahara = -N ]]
+compdef:134> [[ sahara = -p ]]
+compdef:136> [[ sahara = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sahara = *=* ]]
+compdef:159> cmd=sahara 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ senlin = -N ]]
+compdef:134> [[ senlin = -p ]]
+compdef:136> [[ senlin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ senlin = *=* ]]
+compdef:159> cmd=senlin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ tacker = -N ]]
+compdef:134> [[ tacker = -p ]]
+compdef:136> [[ tacker = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tacker = *=* ]]
+compdef:159> cmd=tacker 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ trove = -N ]]
+compdef:134> [[ trove = -p ]]
+compdef:136> [[ trove = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ trove = *=* ]]
+compdef:159> cmd=trove 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ vitrage = -N ]]
+compdef:134> [[ vitrage = -p ]]
+compdef:136> [[ vitrage = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vitrage = *=* ]]
+compdef:159> cmd=vitrage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ watcher = -N ]]
+compdef:134> [[ watcher = -p ]]
+compdef:136> [[ watcher = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ watcher = *=* ]]
+compdef:159> cmd=watcher 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zun = -N ]]
+compdef:134> [[ zun = -p ]]
+compdef:136> [[ zun = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zun = *=* ]]
+compdef:159> cmd=zun 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_openstack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_options
+compinit:498> _i_name=_options 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _options
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_options_set
+compinit:498> _i_name=_options_set 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _options_set
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_options_unset
+compinit:498> _i_name=_options_unset 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _options_unset
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_osc
+compinit:498> _i_name=_osc 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ osc = -[pPkK](n|) ]]
+compinit:509> compdef -na _osc osc
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _osc = *=* ]]
+compdef:79> func=_osc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _osc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ osc = -N ]]
+compdef:134> [[ osc = -p ]]
+compdef:136> [[ osc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ osc = *=* ]]
+compdef:159> cmd=osc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_osc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_other_accounts
+compinit:498> _i_name=_other_accounts 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ talk = -[pPkK](n|) ]]
+compinit:509> compdef -na _other_accounts talk ntalk ytalk
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _other_accounts = *=* ]]
+compdef:79> func=_other_accounts 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _other_accounts
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ talk = -N ]]
+compdef:134> [[ talk = -p ]]
+compdef:136> [[ talk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ talk = *=* ]]
+compdef:159> cmd=talk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_other_accounts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ ntalk = -N ]]
+compdef:134> [[ ntalk = -p ]]
+compdef:136> [[ ntalk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ntalk = *=* ]]
+compdef:159> cmd=ntalk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_other_accounts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ytalk = -N ]]
+compdef:134> [[ ytalk = -p ]]
+compdef:136> [[ ytalk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ytalk = *=* ]]
+compdef:159> cmd=ytalk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_other_accounts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pack
+compinit:498> _i_name=_pack 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pack = -[pPkK](n|) ]]
+compinit:509> compdef -na _pack pack unpack 'pcat=unpack'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pack = *=* ]]
+compdef:79> func=_pack 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pack
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ pack = -N ]]
+compdef:134> [[ pack = -p ]]
+compdef:136> [[ pack = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pack = *=* ]]
+compdef:159> cmd=pack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ unpack = -N ]]
+compdef:134> [[ unpack = -p ]]
+compdef:136> [[ unpack = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unpack = *=* ]]
+compdef:159> cmd=unpack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pack 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'pcat=unpack' = -N ]]
+compdef:134> [[ 'pcat=unpack' = -p ]]
+compdef:136> [[ 'pcat=unpack' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'pcat=unpack' = *=* ]]
+compdef:156> cmd=pcat 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pack 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=unpack 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_parameter
+compinit:498> _i_name=_parameter 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -parameter- = -[pPkK](n|) ]]
+compinit:509> compdef -na _parameter -parameter-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _parameter = *=* ]]
+compdef:79> func=_parameter 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _parameter
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -parameter- = -N ]]
+compdef:134> [[ -parameter- = -p ]]
+compdef:136> [[ -parameter- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -parameter- = *=* ]]
+compdef:159> cmd=-parameter- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_parameter 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_parameters
+compinit:498> _i_name=_parameters 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _parameters
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_paste
+compinit:498> _i_name=_paste 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ paste = -[pPkK](n|) ]]
+compinit:509> compdef -na _paste paste
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _paste = *=* ]]
+compdef:79> func=_paste 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _paste
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ paste = -N ]]
+compdef:134> [[ paste = -p ]]
+compdef:136> [[ paste = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ paste = *=* ]]
+compdef:159> cmd=paste 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_paste 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_patch
+compinit:498> _i_name=_patch 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ patch = -[pPkK](n|) ]]
+compinit:509> compdef -na _patch patch gpatch
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _patch = *=* ]]
+compdef:79> func=_patch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _patch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ patch = -N ]]
+compdef:134> [[ patch = -p ]]
+compdef:136> [[ patch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ patch = *=* ]]
+compdef:159> cmd=patch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_patch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gpatch = -N ]]
+compdef:134> [[ gpatch = -p ]]
+compdef:136> [[ gpatch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gpatch = *=* ]]
+compdef:159> cmd=gpatch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_patch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_patchutils
+compinit:498> _i_name=_patchutils 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ combinediff = -[pPkK](n|) ]]
+compinit:509> compdef -na _patchutils combinediff interdiff filterdiff flipdiff grepdiff lsdiff splitdiff unwrapdiff
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _patchutils = *=* ]]
+compdef:79> func=_patchutils 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _patchutils
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ combinediff = -N ]]
+compdef:134> [[ combinediff = -p ]]
+compdef:136> [[ combinediff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ combinediff = *=* ]]
+compdef:159> cmd=combinediff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_patchutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ interdiff = -N ]]
+compdef:134> [[ interdiff = -p ]]
+compdef:136> [[ interdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ interdiff = *=* ]]
+compdef:159> cmd=interdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_patchutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ filterdiff = -N ]]
+compdef:134> [[ filterdiff = -p ]]
+compdef:136> [[ filterdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ filterdiff = *=* ]]
+compdef:159> cmd=filterdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_patchutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ flipdiff = -N ]]
+compdef:134> [[ flipdiff = -p ]]
+compdef:136> [[ flipdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ flipdiff = *=* ]]
+compdef:159> cmd=flipdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_patchutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ grepdiff = -N ]]
+compdef:134> [[ grepdiff = -p ]]
+compdef:136> [[ grepdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ grepdiff = *=* ]]
+compdef:159> cmd=grepdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_patchutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ lsdiff = -N ]]
+compdef:134> [[ lsdiff = -p ]]
+compdef:136> [[ lsdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lsdiff = *=* ]]
+compdef:159> cmd=lsdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_patchutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ splitdiff = -N ]]
+compdef:134> [[ splitdiff = -p ]]
+compdef:136> [[ splitdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ splitdiff = *=* ]]
+compdef:159> cmd=splitdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_patchutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ unwrapdiff = -N ]]
+compdef:134> [[ unwrapdiff = -p ]]
+compdef:136> [[ unwrapdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unwrapdiff = *=* ]]
+compdef:159> cmd=unwrapdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_patchutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_path_commands
+compinit:498> _i_name=_path_commands 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _path_commands
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_path_files
+compinit:498> _i_name=_path_files 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _path_files
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pax
+compinit:498> _i_name=_pax 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pax = -[pPkK](n|) ]]
+compinit:509> compdef -na _pax pax
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pax = *=* ]]
+compdef:79> func=_pax 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pax
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pax = -N ]]
+compdef:134> [[ pax = -p ]]
+compdef:136> [[ pax = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pax = *=* ]]
+compdef:159> cmd=pax 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pax 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pbm
+compinit:498> _i_name=_pbm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -P = -[pPkK](n|) ]]
+compinit:507> compdef -Pna _pbm '(p[bgpn]m*|*top[bgpn]m)'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P = p ]]
+compdef:26> [[ P = P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pbm = *=* ]]
+compdef:79> func=_pbm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pbm
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ '(p[bgpn]m*|*top[bgpn]m)' = -N ]]
+compdef:134> [[ '(p[bgpn]m*|*top[bgpn]m)' = -p ]]
+compdef:136> [[ '(p[bgpn]m*|*top[bgpn]m)' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '(p[bgpn]m*|*top[bgpn]m)' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_pbm 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pbuilder
+compinit:498> _i_name=_pbuilder 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pbuilder = -[pPkK](n|) ]]
+compinit:509> compdef -na _pbuilder pbuilder
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pbuilder = *=* ]]
+compdef:79> func=_pbuilder 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pbuilder
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pbuilder = -N ]]
+compdef:134> [[ pbuilder = -p ]]
+compdef:136> [[ pbuilder = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pbuilder = *=* ]]
+compdef:159> cmd=pbuilder 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pbuilder 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pdf
+compinit:498> _i_name=_pdf 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pdf2dsc = -[pPkK](n|) ]]
+compinit:509> compdef -na _pdf pdf2dsc pdf2ps pdfimages pdfinfo pdftopbm pdftops pdftotext pdfopt pdffonts kpdf apvlv epdfview mupdf
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 15  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 14  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pdf = *=* ]]
+compdef:79> func=_pdf 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pdf
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  13  ))
+compdef:132> [[ pdf2dsc = -N ]]
+compdef:134> [[ pdf2dsc = -p ]]
+compdef:136> [[ pdf2dsc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdf2dsc = *=* ]]
+compdef:159> cmd=pdf2dsc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ pdf2ps = -N ]]
+compdef:134> [[ pdf2ps = -p ]]
+compdef:136> [[ pdf2ps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdf2ps = *=* ]]
+compdef:159> cmd=pdf2ps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ pdfimages = -N ]]
+compdef:134> [[ pdfimages = -p ]]
+compdef:136> [[ pdfimages = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdfimages = *=* ]]
+compdef:159> cmd=pdfimages 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ pdfinfo = -N ]]
+compdef:134> [[ pdfinfo = -p ]]
+compdef:136> [[ pdfinfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdfinfo = *=* ]]
+compdef:159> cmd=pdfinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ pdftopbm = -N ]]
+compdef:134> [[ pdftopbm = -p ]]
+compdef:136> [[ pdftopbm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdftopbm = *=* ]]
+compdef:159> cmd=pdftopbm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ pdftops = -N ]]
+compdef:134> [[ pdftops = -p ]]
+compdef:136> [[ pdftops = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdftops = *=* ]]
+compdef:159> cmd=pdftops 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ pdftotext = -N ]]
+compdef:134> [[ pdftotext = -p ]]
+compdef:136> [[ pdftotext = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdftotext = *=* ]]
+compdef:159> cmd=pdftotext 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ pdfopt = -N ]]
+compdef:134> [[ pdfopt = -p ]]
+compdef:136> [[ pdfopt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdfopt = *=* ]]
+compdef:159> cmd=pdfopt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ pdffonts = -N ]]
+compdef:134> [[ pdffonts = -p ]]
+compdef:136> [[ pdffonts = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdffonts = *=* ]]
+compdef:159> cmd=pdffonts 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ kpdf = -N ]]
+compdef:134> [[ kpdf = -p ]]
+compdef:136> [[ kpdf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ kpdf = *=* ]]
+compdef:159> cmd=kpdf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ apvlv = -N ]]
+compdef:134> [[ apvlv = -p ]]
+compdef:136> [[ apvlv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ apvlv = *=* ]]
+compdef:159> cmd=apvlv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ epdfview = -N ]]
+compdef:134> [[ epdfview = -p ]]
+compdef:136> [[ epdfview = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ epdfview = *=* ]]
+compdef:159> cmd=epdfview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ mupdf = -N ]]
+compdef:134> [[ mupdf = -p ]]
+compdef:136> [[ mupdf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mupdf = *=* ]]
+compdef:159> cmd=mupdf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pdftk
+compinit:498> _i_name=_pdftk 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pdftk = -[pPkK](n|) ]]
+compinit:509> compdef -na _pdftk pdftk
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pdftk = *=* ]]
+compdef:79> func=_pdftk 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pdftk
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pdftk = -N ]]
+compdef:134> [[ pdftk = -p ]]
+compdef:136> [[ pdftk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdftk = *=* ]]
+compdef:159> cmd=pdftk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pdftk 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_perforce
+compinit:498> _i_name=_perforce 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ p4 = -[pPkK](n|) ]]
+compinit:509> compdef -na _perforce p4 p4d -value-,P4CLIENT,-default- -value-,P4PORT,-default- -value-,P4MERGE,-default- -value-,P4USER,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _perforce = *=* ]]
+compdef:79> func=_perforce 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _perforce
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ p4 = -N ]]
+compdef:134> [[ p4 = -p ]]
+compdef:136> [[ p4 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ p4 = *=* ]]
+compdef:159> cmd=p4 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perforce 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ p4d = -N ]]
+compdef:134> [[ p4d = -p ]]
+compdef:136> [[ p4d = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ p4d = *=* ]]
+compdef:159> cmd=p4d 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perforce 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ -value-,P4CLIENT,-default- = -N ]]
+compdef:134> [[ -value-,P4CLIENT,-default- = -p ]]
+compdef:136> [[ -value-,P4CLIENT,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,P4CLIENT,-default- = *=* ]]
+compdef:159> cmd=-value-,P4CLIENT,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perforce 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,P4PORT,-default- = -N ]]
+compdef:134> [[ -value-,P4PORT,-default- = -p ]]
+compdef:136> [[ -value-,P4PORT,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,P4PORT,-default- = *=* ]]
+compdef:159> cmd=-value-,P4PORT,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perforce 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,P4MERGE,-default- = -N ]]
+compdef:134> [[ -value-,P4MERGE,-default- = -p ]]
+compdef:136> [[ -value-,P4MERGE,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,P4MERGE,-default- = *=* ]]
+compdef:159> cmd=-value-,P4MERGE,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perforce 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,P4USER,-default- = -N ]]
+compdef:134> [[ -value-,P4USER,-default- = -p ]]
+compdef:136> [[ -value-,P4USER,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,P4USER,-default- = *=* ]]
+compdef:159> cmd=-value-,P4USER,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perforce 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_perl
+compinit:498> _i_name=_perl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ perl = -[pPkK](n|) ]]
+compinit:509> compdef -na _perl perl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _perl = *=* ]]
+compdef:79> func=_perl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _perl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ perl = -N ]]
+compdef:134> [[ perl = -p ]]
+compdef:136> [[ perl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ perl = *=* ]]
+compdef:159> cmd=perl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_perl_basepods
+compinit:498> _i_name=_perl_basepods 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _perl_basepods
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_perldoc
+compinit:498> _i_name=_perldoc 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ perldoc = -[pPkK](n|) ]]
+compinit:509> compdef -na _perldoc perldoc -value-,PERLDOC,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _perldoc = *=* ]]
+compdef:79> func=_perldoc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _perldoc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ perldoc = -N ]]
+compdef:134> [[ perldoc = -p ]]
+compdef:136> [[ perldoc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ perldoc = *=* ]]
+compdef:159> cmd=perldoc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perldoc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,PERLDOC,-default- = -N ]]
+compdef:134> [[ -value-,PERLDOC,-default- = -p ]]
+compdef:136> [[ -value-,PERLDOC,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PERLDOC,-default- = *=* ]]
+compdef:159> cmd=-value-,PERLDOC,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perldoc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_perl_modules
+compinit:498> _i_name=_perl_modules 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pmpath = -[pPkK](n|) ]]
+compinit:509> compdef -na _perl_modules pmpath pmvers pmdesc pmload pmexp pmeth pmls pmcat pman pmfunc podgrep podtoc podpath
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 15  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 14  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _perl_modules = *=* ]]
+compdef:79> func=_perl_modules 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _perl_modules
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  13  ))
+compdef:132> [[ pmpath = -N ]]
+compdef:134> [[ pmpath = -p ]]
+compdef:136> [[ pmpath = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmpath = *=* ]]
+compdef:159> cmd=pmpath 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ pmvers = -N ]]
+compdef:134> [[ pmvers = -p ]]
+compdef:136> [[ pmvers = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmvers = *=* ]]
+compdef:159> cmd=pmvers 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ pmdesc = -N ]]
+compdef:134> [[ pmdesc = -p ]]
+compdef:136> [[ pmdesc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmdesc = *=* ]]
+compdef:159> cmd=pmdesc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ pmload = -N ]]
+compdef:134> [[ pmload = -p ]]
+compdef:136> [[ pmload = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmload = *=* ]]
+compdef:159> cmd=pmload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ pmexp = -N ]]
+compdef:134> [[ pmexp = -p ]]
+compdef:136> [[ pmexp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmexp = *=* ]]
+compdef:159> cmd=pmexp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ pmeth = -N ]]
+compdef:134> [[ pmeth = -p ]]
+compdef:136> [[ pmeth = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmeth = *=* ]]
+compdef:159> cmd=pmeth 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ pmls = -N ]]
+compdef:134> [[ pmls = -p ]]
+compdef:136> [[ pmls = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmls = *=* ]]
+compdef:159> cmd=pmls 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ pmcat = -N ]]
+compdef:134> [[ pmcat = -p ]]
+compdef:136> [[ pmcat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmcat = *=* ]]
+compdef:159> cmd=pmcat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ pman = -N ]]
+compdef:134> [[ pman = -p ]]
+compdef:136> [[ pman = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pman = *=* ]]
+compdef:159> cmd=pman 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ pmfunc = -N ]]
+compdef:134> [[ pmfunc = -p ]]
+compdef:136> [[ pmfunc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmfunc = *=* ]]
+compdef:159> cmd=pmfunc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ podgrep = -N ]]
+compdef:134> [[ podgrep = -p ]]
+compdef:136> [[ podgrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ podgrep = *=* ]]
+compdef:159> cmd=podgrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ podtoc = -N ]]
+compdef:134> [[ podtoc = -p ]]
+compdef:136> [[ podtoc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ podtoc = *=* ]]
+compdef:159> cmd=podtoc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ podpath = -N ]]
+compdef:134> [[ podpath = -p ]]
+compdef:136> [[ podpath = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ podpath = *=* ]]
+compdef:159> cmd=podpath 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_perl_modules 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pfctl
+compinit:498> _i_name=_pfctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pfctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _pfctl pfctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pfctl = *=* ]]
+compdef:79> func=_pfctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pfctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pfctl = -N ]]
+compdef:134> [[ pfctl = -p ]]
+compdef:136> [[ pfctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pfctl = *=* ]]
+compdef:159> cmd=pfctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pfctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pfexec
+compinit:498> _i_name=_pfexec 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pfexec = -[pPkK](n|) ]]
+compinit:509> compdef -na _pfexec pfexec
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pfexec = *=* ]]
+compdef:79> func=_pfexec 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pfexec
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pfexec = -N ]]
+compdef:134> [[ pfexec = -p ]]
+compdef:136> [[ pfexec = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pfexec = *=* ]]
+compdef:159> cmd=pfexec 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pfexec 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pgrep
+compinit:498> _i_name=_pgrep 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pgrep = -[pPkK](n|) ]]
+compinit:509> compdef -na _pgrep pgrep pkill
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pgrep = *=* ]]
+compdef:79> func=_pgrep 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pgrep
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ pgrep = -N ]]
+compdef:134> [[ pgrep = -p ]]
+compdef:136> [[ pgrep = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pgrep = *=* ]]
+compdef:159> cmd=pgrep 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pgrep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ pkill = -N ]]
+compdef:134> [[ pkill = -p ]]
+compdef:136> [[ pkill = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkill = *=* ]]
+compdef:159> cmd=pkill 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pgrep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_php
+compinit:498> _i_name=_php 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ php = -[pPkK](n|) ]]
+compinit:509> compdef -na _php php
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _php = *=* ]]
+compdef:79> func=_php 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _php
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ php = -N ]]
+compdef:134> [[ php = -p ]]
+compdef:136> [[ php = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ php = *=* ]]
+compdef:159> cmd=php 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_php 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_physical_volumes
+compinit:498> _i_name=_physical_volumes 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _physical_volumes
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pick_variant
+compinit:498> _i_name=_pick_variant 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _pick_variant
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_picocom
+compinit:498> _i_name=_picocom 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ picocom = -[pPkK](n|) ]]
+compinit:509> compdef -na _picocom picocom
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _picocom = *=* ]]
+compdef:79> func=_picocom 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _picocom
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ picocom = -N ]]
+compdef:134> [[ picocom = -p ]]
+compdef:136> [[ picocom = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ picocom = *=* ]]
+compdef:159> cmd=picocom 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_picocom 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pidof
+compinit:498> _i_name=_pidof 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pidof = -[pPkK](n|) ]]
+compinit:509> compdef -na _pidof pidof
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pidof = *=* ]]
+compdef:79> func=_pidof 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pidof
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pidof = -N ]]
+compdef:134> [[ pidof = -p ]]
+compdef:136> [[ pidof = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pidof = *=* ]]
+compdef:159> cmd=pidof 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pidof 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pids
+compinit:498> _i_name=_pids 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pflags = -[pPkK](n|) ]]
+compinit:509> compdef -na _pids pflags pcred pmap pldd psig pstack pfiles pwdx pstop prun pwait
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 13  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 12  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pids = *=* ]]
+compdef:79> func=_pids 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pids
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  11  ))
+compdef:132> [[ pflags = -N ]]
+compdef:134> [[ pflags = -p ]]
+compdef:136> [[ pflags = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pflags = *=* ]]
+compdef:159> cmd=pflags 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ pcred = -N ]]
+compdef:134> [[ pcred = -p ]]
+compdef:136> [[ pcred = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pcred = *=* ]]
+compdef:159> cmd=pcred 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ pmap = -N ]]
+compdef:134> [[ pmap = -p ]]
+compdef:136> [[ pmap = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pmap = *=* ]]
+compdef:159> cmd=pmap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ pldd = -N ]]
+compdef:134> [[ pldd = -p ]]
+compdef:136> [[ pldd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pldd = *=* ]]
+compdef:159> cmd=pldd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ psig = -N ]]
+compdef:134> [[ psig = -p ]]
+compdef:136> [[ psig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psig = *=* ]]
+compdef:159> cmd=psig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ pstack = -N ]]
+compdef:134> [[ pstack = -p ]]
+compdef:136> [[ pstack = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pstack = *=* ]]
+compdef:159> cmd=pstack 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ pfiles = -N ]]
+compdef:134> [[ pfiles = -p ]]
+compdef:136> [[ pfiles = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pfiles = *=* ]]
+compdef:159> cmd=pfiles 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ pwdx = -N ]]
+compdef:134> [[ pwdx = -p ]]
+compdef:136> [[ pwdx = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pwdx = *=* ]]
+compdef:159> cmd=pwdx 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ pstop = -N ]]
+compdef:134> [[ pstop = -p ]]
+compdef:136> [[ pstop = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pstop = *=* ]]
+compdef:159> cmd=pstop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ prun = -N ]]
+compdef:134> [[ prun = -p ]]
+compdef:136> [[ prun = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prun = *=* ]]
+compdef:159> cmd=prun 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ pwait = -N ]]
+compdef:134> [[ pwait = -p ]]
+compdef:136> [[ pwait = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pwait = *=* ]]
+compdef:159> cmd=pwait 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pids 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pine
+compinit:498> _i_name=_pine 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pine = -[pPkK](n|) ]]
+compinit:509> compdef -na _pine pine pinef
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pine = *=* ]]
+compdef:79> func=_pine 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pine
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ pine = -N ]]
+compdef:134> [[ pine = -p ]]
+compdef:136> [[ pine = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pine = *=* ]]
+compdef:159> cmd=pine 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pine 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ pinef = -N ]]
+compdef:134> [[ pinef = -p ]]
+compdef:136> [[ pinef = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pinef = *=* ]]
+compdef:159> cmd=pinef 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pine 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ping
+compinit:498> _i_name=_ping 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ping = -[pPkK](n|) ]]
+compinit:509> compdef -na _ping ping
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ping = *=* ]]
+compdef:79> func=_ping 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ping
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ping = -N ]]
+compdef:134> [[ ping = -p ]]
+compdef:136> [[ ping = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ping = *=* ]]
+compdef:159> cmd=ping 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ping 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_piuparts
+compinit:498> _i_name=_piuparts 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ piuparts = -[pPkK](n|) ]]
+compinit:509> compdef -na _piuparts piuparts
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _piuparts = *=* ]]
+compdef:79> func=_piuparts 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _piuparts
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ piuparts = -N ]]
+compdef:134> [[ piuparts = -p ]]
+compdef:136> [[ piuparts = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ piuparts = *=* ]]
+compdef:159> cmd=piuparts 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_piuparts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pkg5
+compinit:498> _i_name=_pkg5 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pkg = -[pPkK](n|) ]]
+compinit:509> compdef -na _pkg5 pkg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pkg5 = *=* ]]
+compdef:79> func=_pkg5 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pkg5
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pkg = -N ]]
+compdef:134> [[ pkg = -p ]]
+compdef:136> [[ pkg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkg = *=* ]]
+compdef:159> cmd=pkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkg5 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pkgadd
+compinit:498> _i_name=_pkgadd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pkgadd = -[pPkK](n|) ]]
+compinit:509> compdef -na _pkgadd pkgadd
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pkgadd = *=* ]]
+compdef:79> func=_pkgadd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pkgadd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pkgadd = -N ]]
+compdef:134> [[ pkgadd = -p ]]
+compdef:136> [[ pkgadd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkgadd = *=* ]]
+compdef:159> cmd=pkgadd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgadd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pkg-config
+compinit:498> _i_name=_pkg-config 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pkg-config = -[pPkK](n|) ]]
+compinit:509> compdef -na _pkg-config pkg-config
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pkg-config = *=* ]]
+compdef:79> func=_pkg-config 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pkg-config
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pkg-config = -N ]]
+compdef:134> [[ pkg-config = -p ]]
+compdef:136> [[ pkg-config = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkg-config = *=* ]]
+compdef:159> cmd=pkg-config 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkg-config 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pkginfo
+compinit:498> _i_name=_pkginfo 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pkginfo = -[pPkK](n|) ]]
+compinit:509> compdef -na _pkginfo pkginfo
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pkginfo = *=* ]]
+compdef:79> func=_pkginfo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pkginfo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pkginfo = -N ]]
+compdef:134> [[ pkginfo = -p ]]
+compdef:136> [[ pkginfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkginfo = *=* ]]
+compdef:159> cmd=pkginfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkginfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pkg_instance
+compinit:498> _i_name=_pkg_instance 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _pkg_instance
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pkgrm
+compinit:498> _i_name=_pkgrm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pkgrm = -[pPkK](n|) ]]
+compinit:509> compdef -na _pkgrm pkgrm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pkgrm = *=* ]]
+compdef:79> func=_pkgrm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pkgrm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pkgrm = -N ]]
+compdef:134> [[ pkgrm = -p ]]
+compdef:136> [[ pkgrm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkgrm = *=* ]]
+compdef:159> cmd=pkgrm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgrm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pkgtool
+compinit:498> _i_name=_pkgtool 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ installpkg = -[pPkK](n|) ]]
+compinit:509> compdef -na _pkgtool installpkg upgradepkg removepkg pkgtool explodepkg makepkg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pkgtool = *=* ]]
+compdef:79> func=_pkgtool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pkgtool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ installpkg = -N ]]
+compdef:134> [[ installpkg = -p ]]
+compdef:136> [[ installpkg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ installpkg = *=* ]]
+compdef:159> cmd=installpkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ upgradepkg = -N ]]
+compdef:134> [[ upgradepkg = -p ]]
+compdef:136> [[ upgradepkg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ upgradepkg = *=* ]]
+compdef:159> cmd=upgradepkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ removepkg = -N ]]
+compdef:134> [[ removepkg = -p ]]
+compdef:136> [[ removepkg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ removepkg = *=* ]]
+compdef:159> cmd=removepkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ pkgtool = -N ]]
+compdef:134> [[ pkgtool = -p ]]
+compdef:136> [[ pkgtool = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pkgtool = *=* ]]
+compdef:159> cmd=pkgtool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ explodepkg = -N ]]
+compdef:134> [[ explodepkg = -p ]]
+compdef:136> [[ explodepkg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ explodepkg = *=* ]]
+compdef:159> cmd=explodepkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ makepkg = -N ]]
+compdef:134> [[ makepkg = -p ]]
+compdef:136> [[ makepkg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ makepkg = *=* ]]
+compdef:159> cmd=makepkg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pkgtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pon
+compinit:498> _i_name=_pon 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pon = -[pPkK](n|) ]]
+compinit:509> compdef -na _pon pon poff
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pon = *=* ]]
+compdef:79> func=_pon 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pon
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ pon = -N ]]
+compdef:134> [[ pon = -p ]]
+compdef:136> [[ pon = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pon = *=* ]]
+compdef:159> cmd=pon 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pon 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ poff = -N ]]
+compdef:134> [[ poff = -p ]]
+compdef:136> [[ poff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ poff = *=* ]]
+compdef:159> cmd=poff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pon 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_portaudit
+compinit:498> _i_name=_portaudit 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ portaudit = -[pPkK](n|) ]]
+compinit:509> compdef -na _portaudit portaudit
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _portaudit = *=* ]]
+compdef:79> func=_portaudit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _portaudit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ portaudit = -N ]]
+compdef:134> [[ portaudit = -p ]]
+compdef:136> [[ portaudit = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ portaudit = *=* ]]
+compdef:159> cmd=portaudit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_portaudit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_portlint
+compinit:498> _i_name=_portlint 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ portlint = -[pPkK](n|) ]]
+compinit:509> compdef -na _portlint portlint
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _portlint = *=* ]]
+compdef:79> func=_portlint 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _portlint
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ portlint = -N ]]
+compdef:134> [[ portlint = -p ]]
+compdef:136> [[ portlint = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ portlint = *=* ]]
+compdef:159> cmd=portlint 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_portlint 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_portmaster
+compinit:498> _i_name=_portmaster 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ portmaster = -[pPkK](n|) ]]
+compinit:509> compdef -na _portmaster portmaster
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _portmaster = *=* ]]
+compdef:79> func=_portmaster 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _portmaster
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ portmaster = -N ]]
+compdef:134> [[ portmaster = -p ]]
+compdef:136> [[ portmaster = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ portmaster = *=* ]]
+compdef:159> cmd=portmaster 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_portmaster 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ports
+compinit:498> _i_name=_ports 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _ports
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_portsnap
+compinit:498> _i_name=_portsnap 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ portsnap = -[pPkK](n|) ]]
+compinit:509> compdef -na _portsnap portsnap
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _portsnap = *=* ]]
+compdef:79> func=_portsnap 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _portsnap
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ portsnap = -N ]]
+compdef:134> [[ portsnap = -p ]]
+compdef:136> [[ portsnap = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ portsnap = *=* ]]
+compdef:159> cmd=portsnap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_portsnap 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_postfix
+compinit:498> _i_name=_postfix 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ postconf = -[pPkK](n|) ]]
+compinit:509> compdef -na _postfix postconf postqueue postsuper
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _postfix = *=* ]]
+compdef:79> func=_postfix 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _postfix
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ postconf = -N ]]
+compdef:134> [[ postconf = -p ]]
+compdef:136> [[ postconf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ postconf = *=* ]]
+compdef:159> cmd=postconf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postfix 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ postqueue = -N ]]
+compdef:134> [[ postqueue = -p ]]
+compdef:136> [[ postqueue = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ postqueue = *=* ]]
+compdef:159> cmd=postqueue 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postfix 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ postsuper = -N ]]
+compdef:134> [[ postsuper = -p ]]
+compdef:136> [[ postsuper = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ postsuper = *=* ]]
+compdef:159> cmd=postsuper 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postfix 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_postscript
+compinit:498> _i_name=_postscript 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ps2epsi = -[pPkK](n|) ]]
+compinit:509> compdef -na _postscript ps2epsi ps2pdf psmulti pswrap ps2pdf12 ps2pdf13 ps2pdf14 ps2pdfwr ps2ps
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 11  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 10  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _postscript = *=* ]]
+compdef:79> func=_postscript 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _postscript
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  9  ))
+compdef:132> [[ ps2epsi = -N ]]
+compdef:134> [[ ps2epsi = -p ]]
+compdef:136> [[ ps2epsi = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2epsi = *=* ]]
+compdef:159> cmd=ps2epsi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ ps2pdf = -N ]]
+compdef:134> [[ ps2pdf = -p ]]
+compdef:136> [[ ps2pdf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2pdf = *=* ]]
+compdef:159> cmd=ps2pdf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ psmulti = -N ]]
+compdef:134> [[ psmulti = -p ]]
+compdef:136> [[ psmulti = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psmulti = *=* ]]
+compdef:159> cmd=psmulti 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ pswrap = -N ]]
+compdef:134> [[ pswrap = -p ]]
+compdef:136> [[ pswrap = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pswrap = *=* ]]
+compdef:159> cmd=pswrap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ ps2pdf12 = -N ]]
+compdef:134> [[ ps2pdf12 = -p ]]
+compdef:136> [[ ps2pdf12 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2pdf12 = *=* ]]
+compdef:159> cmd=ps2pdf12 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ ps2pdf13 = -N ]]
+compdef:134> [[ ps2pdf13 = -p ]]
+compdef:136> [[ ps2pdf13 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2pdf13 = *=* ]]
+compdef:159> cmd=ps2pdf13 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ ps2pdf14 = -N ]]
+compdef:134> [[ ps2pdf14 = -p ]]
+compdef:136> [[ ps2pdf14 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2pdf14 = *=* ]]
+compdef:159> cmd=ps2pdf14 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ ps2pdfwr = -N ]]
+compdef:134> [[ ps2pdfwr = -p ]]
+compdef:136> [[ ps2pdfwr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2pdfwr = *=* ]]
+compdef:159> cmd=ps2pdfwr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ps2ps = -N ]]
+compdef:134> [[ ps2ps = -p ]]
+compdef:136> [[ ps2ps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2ps = *=* ]]
+compdef:159> cmd=ps2ps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_postscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_powerd
+compinit:498> _i_name=_powerd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ powerd = -[pPkK](n|) ]]
+compinit:509> compdef -na _powerd powerd
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _powerd = *=* ]]
+compdef:79> func=_powerd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _powerd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ powerd = -N ]]
+compdef:134> [[ powerd = -p ]]
+compdef:136> [[ powerd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ powerd = *=* ]]
+compdef:159> cmd=powerd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_powerd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_prcs
+compinit:498> _i_name=_prcs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ prcs = -[pPkK](n|) ]]
+compinit:509> compdef -na _prcs prcs
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _prcs = *=* ]]
+compdef:79> func=_prcs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _prcs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ prcs = -N ]]
+compdef:134> [[ prcs = -p ]]
+compdef:136> [[ prcs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prcs = *=* ]]
+compdef:159> cmd=prcs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_prcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_precommand
+compinit:498> _i_name=_precommand 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ - = -[pPkK](n|) ]]
+compinit:509> compdef -na _precommand - nohup eval time rusage noglob nocorrect exec catchsegv aoss hilite eatmydata setsid
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 15  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 14  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _precommand = *=* ]]
+compdef:79> func=_precommand 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _precommand
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  13  ))
+compdef:132> [[ - = -N ]]
+compdef:134> [[ - = -p ]]
+compdef:136> [[ - = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ - = *=* ]]
+compdef:159> cmd=- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ nohup = -N ]]
+compdef:134> [[ nohup = -p ]]
+compdef:136> [[ nohup = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nohup = *=* ]]
+compdef:159> cmd=nohup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ eval = -N ]]
+compdef:134> [[ eval = -p ]]
+compdef:136> [[ eval = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ eval = *=* ]]
+compdef:159> cmd=eval 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ time = -N ]]
+compdef:134> [[ time = -p ]]
+compdef:136> [[ time = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ time = *=* ]]
+compdef:159> cmd=time 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ rusage = -N ]]
+compdef:134> [[ rusage = -p ]]
+compdef:136> [[ rusage = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rusage = *=* ]]
+compdef:159> cmd=rusage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ noglob = -N ]]
+compdef:134> [[ noglob = -p ]]
+compdef:136> [[ noglob = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ noglob = *=* ]]
+compdef:159> cmd=noglob 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ nocorrect = -N ]]
+compdef:134> [[ nocorrect = -p ]]
+compdef:136> [[ nocorrect = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nocorrect = *=* ]]
+compdef:159> cmd=nocorrect 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ exec = -N ]]
+compdef:134> [[ exec = -p ]]
+compdef:136> [[ exec = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ exec = *=* ]]
+compdef:159> cmd=exec 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ catchsegv = -N ]]
+compdef:134> [[ catchsegv = -p ]]
+compdef:136> [[ catchsegv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ catchsegv = *=* ]]
+compdef:159> cmd=catchsegv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ aoss = -N ]]
+compdef:134> [[ aoss = -p ]]
+compdef:136> [[ aoss = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ aoss = *=* ]]
+compdef:159> cmd=aoss 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ hilite = -N ]]
+compdef:134> [[ hilite = -p ]]
+compdef:136> [[ hilite = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hilite = *=* ]]
+compdef:159> cmd=hilite 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ eatmydata = -N ]]
+compdef:134> [[ eatmydata = -p ]]
+compdef:136> [[ eatmydata = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ eatmydata = *=* ]]
+compdef:159> cmd=eatmydata 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ setsid = -N ]]
+compdef:134> [[ setsid = -p ]]
+compdef:136> [[ setsid = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ setsid = *=* ]]
+compdef:159> cmd=setsid 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_precommand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_prefix
+compinit:498> _i_name=_prefix 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _prefix
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_print
+compinit:498> _i_name=_print 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ print = -[pPkK](n|) ]]
+compinit:509> compdef -na _print print printf
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _print = *=* ]]
+compdef:79> func=_print 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _print
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ print = -N ]]
+compdef:134> [[ print = -p ]]
+compdef:136> [[ print = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ print = *=* ]]
+compdef:159> cmd=print 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_print 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ printf = -N ]]
+compdef:134> [[ printf = -p ]]
+compdef:136> [[ printf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ printf = *=* ]]
+compdef:159> cmd=printf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_print 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_printenv
+compinit:498> _i_name=_printenv 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ printenv = -[pPkK](n|) ]]
+compinit:509> compdef -na _printenv printenv
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _printenv = *=* ]]
+compdef:79> func=_printenv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _printenv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ printenv = -N ]]
+compdef:134> [[ printenv = -p ]]
+compdef:136> [[ printenv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ printenv = *=* ]]
+compdef:159> cmd=printenv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_printenv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_printers
+compinit:498> _i_name=_printers 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -value-,PRINTER,-default- = -[pPkK](n|) ]]
+compinit:509> compdef -na _printers -value-,PRINTER,-default- -value-,LPDEST,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _printers = *=* ]]
+compdef:79> func=_printers 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _printers
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,PRINTER,-default- = -N ]]
+compdef:134> [[ -value-,PRINTER,-default- = -p ]]
+compdef:136> [[ -value-,PRINTER,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PRINTER,-default- = *=* ]]
+compdef:159> cmd=-value-,PRINTER,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_printers 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,LPDEST,-default- = -N ]]
+compdef:134> [[ -value-,LPDEST,-default- = -p ]]
+compdef:136> [[ -value-,LPDEST,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,LPDEST,-default- = *=* ]]
+compdef:159> cmd=-value-,LPDEST,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_printers 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_procstat
+compinit:498> _i_name=_procstat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ procstat = -[pPkK](n|) ]]
+compinit:509> compdef -na _procstat procstat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _procstat = *=* ]]
+compdef:79> func=_procstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _procstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ procstat = -N ]]
+compdef:134> [[ procstat = -p ]]
+compdef:136> [[ procstat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ procstat = *=* ]]
+compdef:159> cmd=procstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_procstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_prompt
+compinit:498> _i_name=_prompt 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ prompt = -[pPkK](n|) ]]
+compinit:509> compdef -na _prompt prompt
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _prompt = *=* ]]
+compdef:79> func=_prompt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _prompt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ prompt = -N ]]
+compdef:134> [[ prompt = -p ]]
+compdef:136> [[ prompt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prompt = *=* ]]
+compdef:159> cmd=prompt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_prompt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_prove
+compinit:498> _i_name=_prove 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ prove = -[pPkK](n|) ]]
+compinit:509> compdef -na _prove prove
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _prove = *=* ]]
+compdef:79> func=_prove 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _prove
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ prove = -N ]]
+compdef:134> [[ prove = -p ]]
+compdef:136> [[ prove = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prove = *=* ]]
+compdef:159> cmd=prove 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_prove 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_prstat
+compinit:498> _i_name=_prstat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ prstat = -[pPkK](n|) ]]
+compinit:509> compdef -na _prstat prstat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _prstat = *=* ]]
+compdef:79> func=_prstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _prstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ prstat = -N ]]
+compdef:134> [[ prstat = -p ]]
+compdef:136> [[ prstat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prstat = *=* ]]
+compdef:159> cmd=prstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_prstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ps
+compinit:498> _i_name=_ps 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ps = -[pPkK](n|) ]]
+compinit:509> compdef -na _ps ps
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ps = *=* ]]
+compdef:79> func=_ps 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ps
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ps = -N ]]
+compdef:134> [[ ps = -p ]]
+compdef:136> [[ ps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps = *=* ]]
+compdef:159> cmd=ps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ps1234
+compinit:498> _i_name=_ps1234 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -value-,PROMPT,-default- = -[pPkK](n|) ]]
+compinit:509> compdef -na _ps1234 -value-,PROMPT,-default- -value-,PROMPT2,-default- -value-,PROMPT3,-default- -value-,PROMPT4,-default- -value-,RPROMPT,-default- -value-,RPROMPT2,-default- -value-,PS1,-default- -value-,PS2,-default- -value-,PS3,-default- -value-,PS4,-default- -value-,RPS1,-default- -value-,RPS2,-default- -value-,SPROMPT,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 15  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 14  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ps1234 = *=* ]]
+compdef:79> func=_ps1234 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ps1234
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  13  ))
+compdef:132> [[ -value-,PROMPT,-default- = -N ]]
+compdef:134> [[ -value-,PROMPT,-default- = -p ]]
+compdef:136> [[ -value-,PROMPT,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PROMPT,-default- = *=* ]]
+compdef:159> cmd=-value-,PROMPT,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ -value-,PROMPT2,-default- = -N ]]
+compdef:134> [[ -value-,PROMPT2,-default- = -p ]]
+compdef:136> [[ -value-,PROMPT2,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PROMPT2,-default- = *=* ]]
+compdef:159> cmd=-value-,PROMPT2,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ -value-,PROMPT3,-default- = -N ]]
+compdef:134> [[ -value-,PROMPT3,-default- = -p ]]
+compdef:136> [[ -value-,PROMPT3,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PROMPT3,-default- = *=* ]]
+compdef:159> cmd=-value-,PROMPT3,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ -value-,PROMPT4,-default- = -N ]]
+compdef:134> [[ -value-,PROMPT4,-default- = -p ]]
+compdef:136> [[ -value-,PROMPT4,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PROMPT4,-default- = *=* ]]
+compdef:159> cmd=-value-,PROMPT4,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ -value-,RPROMPT,-default- = -N ]]
+compdef:134> [[ -value-,RPROMPT,-default- = -p ]]
+compdef:136> [[ -value-,RPROMPT,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,RPROMPT,-default- = *=* ]]
+compdef:159> cmd=-value-,RPROMPT,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ -value-,RPROMPT2,-default- = -N ]]
+compdef:134> [[ -value-,RPROMPT2,-default- = -p ]]
+compdef:136> [[ -value-,RPROMPT2,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,RPROMPT2,-default- = *=* ]]
+compdef:159> cmd=-value-,RPROMPT2,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ -value-,PS1,-default- = -N ]]
+compdef:134> [[ -value-,PS1,-default- = -p ]]
+compdef:136> [[ -value-,PS1,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PS1,-default- = *=* ]]
+compdef:159> cmd=-value-,PS1,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ -value-,PS2,-default- = -N ]]
+compdef:134> [[ -value-,PS2,-default- = -p ]]
+compdef:136> [[ -value-,PS2,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PS2,-default- = *=* ]]
+compdef:159> cmd=-value-,PS2,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ -value-,PS3,-default- = -N ]]
+compdef:134> [[ -value-,PS3,-default- = -p ]]
+compdef:136> [[ -value-,PS3,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PS3,-default- = *=* ]]
+compdef:159> cmd=-value-,PS3,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ -value-,PS4,-default- = -N ]]
+compdef:134> [[ -value-,PS4,-default- = -p ]]
+compdef:136> [[ -value-,PS4,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,PS4,-default- = *=* ]]
+compdef:159> cmd=-value-,PS4,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,RPS1,-default- = -N ]]
+compdef:134> [[ -value-,RPS1,-default- = -p ]]
+compdef:136> [[ -value-,RPS1,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,RPS1,-default- = *=* ]]
+compdef:159> cmd=-value-,RPS1,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,RPS2,-default- = -N ]]
+compdef:134> [[ -value-,RPS2,-default- = -p ]]
+compdef:136> [[ -value-,RPS2,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,RPS2,-default- = *=* ]]
+compdef:159> cmd=-value-,RPS2,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,SPROMPT,-default- = -N ]]
+compdef:134> [[ -value-,SPROMPT,-default- = -p ]]
+compdef:136> [[ -value-,SPROMPT,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,SPROMPT,-default- = *=* ]]
+compdef:159> cmd=-value-,SPROMPT,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ps1234 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pscp
+compinit:498> _i_name=_pscp 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pscp = -[pPkK](n|) ]]
+compinit:509> compdef -na _pscp pscp pscp.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pscp = *=* ]]
+compdef:79> func=_pscp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pscp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ pscp = -N ]]
+compdef:134> [[ pscp = -p ]]
+compdef:136> [[ pscp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pscp = *=* ]]
+compdef:159> cmd=pscp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pscp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ pscp.exe = -N ]]
+compdef:134> [[ pscp.exe = -p ]]
+compdef:136> [[ pscp.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pscp.exe = *=* ]]
+compdef:159> cmd=pscp.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pscp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pspdf
+compinit:498> _i_name=_pspdf 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ gsbj = -[pPkK](n|) ]]
+compinit:509> compdef -na _pspdf gsbj gsdj gsdj500 gslj gslp gsnd ps2ascii ghostview mgv pstoedit pstotgif zathura
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 14  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 13  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pspdf = *=* ]]
+compdef:79> func=_pspdf 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pspdf
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  12  ))
+compdef:132> [[ gsbj = -N ]]
+compdef:134> [[ gsbj = -p ]]
+compdef:136> [[ gsbj = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gsbj = *=* ]]
+compdef:159> cmd=gsbj 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ gsdj = -N ]]
+compdef:134> [[ gsdj = -p ]]
+compdef:136> [[ gsdj = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gsdj = *=* ]]
+compdef:159> cmd=gsdj 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ gsdj500 = -N ]]
+compdef:134> [[ gsdj500 = -p ]]
+compdef:136> [[ gsdj500 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gsdj500 = *=* ]]
+compdef:159> cmd=gsdj500 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ gslj = -N ]]
+compdef:134> [[ gslj = -p ]]
+compdef:136> [[ gslj = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gslj = *=* ]]
+compdef:159> cmd=gslj 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ gslp = -N ]]
+compdef:134> [[ gslp = -p ]]
+compdef:136> [[ gslp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gslp = *=* ]]
+compdef:159> cmd=gslp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ gsnd = -N ]]
+compdef:134> [[ gsnd = -p ]]
+compdef:136> [[ gsnd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gsnd = *=* ]]
+compdef:159> cmd=gsnd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ ps2ascii = -N ]]
+compdef:134> [[ ps2ascii = -p ]]
+compdef:136> [[ ps2ascii = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ps2ascii = *=* ]]
+compdef:159> cmd=ps2ascii 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ ghostview = -N ]]
+compdef:134> [[ ghostview = -p ]]
+compdef:136> [[ ghostview = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ghostview = *=* ]]
+compdef:159> cmd=ghostview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ mgv = -N ]]
+compdef:134> [[ mgv = -p ]]
+compdef:136> [[ mgv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mgv = *=* ]]
+compdef:159> cmd=mgv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ pstoedit = -N ]]
+compdef:134> [[ pstoedit = -p ]]
+compdef:136> [[ pstoedit = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pstoedit = *=* ]]
+compdef:159> cmd=pstoedit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ pstotgif = -N ]]
+compdef:134> [[ pstotgif = -p ]]
+compdef:136> [[ pstotgif = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pstotgif = *=* ]]
+compdef:159> cmd=pstotgif 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zathura = -N ]]
+compdef:134> [[ zathura = -p ]]
+compdef:136> [[ zathura = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zathura = *=* ]]
+compdef:159> cmd=zathura 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pspdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_psutils
+compinit:498> _i_name=_psutils 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ epsffit = -[pPkK](n|) ]]
+compinit:509> compdef -na _psutils epsffit extractres fixdlsrps fixfmps fixmacps fixpsditps fixpspps fixscribeps fixtpps fixwfwps fixwpps fixwwps includeres psbook psmerge psnup psresize psselect pstops getafm showchar
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 23  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 22  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _psutils = *=* ]]
+compdef:79> func=_psutils 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _psutils
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  21  ))
+compdef:132> [[ epsffit = -N ]]
+compdef:134> [[ epsffit = -p ]]
+compdef:136> [[ epsffit = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ epsffit = *=* ]]
+compdef:159> cmd=epsffit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  20  ))
+compdef:132> [[ extractres = -N ]]
+compdef:134> [[ extractres = -p ]]
+compdef:136> [[ extractres = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ extractres = *=* ]]
+compdef:159> cmd=extractres 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  19  ))
+compdef:132> [[ fixdlsrps = -N ]]
+compdef:134> [[ fixdlsrps = -p ]]
+compdef:136> [[ fixdlsrps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixdlsrps = *=* ]]
+compdef:159> cmd=fixdlsrps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  18  ))
+compdef:132> [[ fixfmps = -N ]]
+compdef:134> [[ fixfmps = -p ]]
+compdef:136> [[ fixfmps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixfmps = *=* ]]
+compdef:159> cmd=fixfmps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  17  ))
+compdef:132> [[ fixmacps = -N ]]
+compdef:134> [[ fixmacps = -p ]]
+compdef:136> [[ fixmacps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixmacps = *=* ]]
+compdef:159> cmd=fixmacps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ fixpsditps = -N ]]
+compdef:134> [[ fixpsditps = -p ]]
+compdef:136> [[ fixpsditps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixpsditps = *=* ]]
+compdef:159> cmd=fixpsditps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ fixpspps = -N ]]
+compdef:134> [[ fixpspps = -p ]]
+compdef:136> [[ fixpspps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixpspps = *=* ]]
+compdef:159> cmd=fixpspps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ fixscribeps = -N ]]
+compdef:134> [[ fixscribeps = -p ]]
+compdef:136> [[ fixscribeps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixscribeps = *=* ]]
+compdef:159> cmd=fixscribeps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ fixtpps = -N ]]
+compdef:134> [[ fixtpps = -p ]]
+compdef:136> [[ fixtpps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixtpps = *=* ]]
+compdef:159> cmd=fixtpps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ fixwfwps = -N ]]
+compdef:134> [[ fixwfwps = -p ]]
+compdef:136> [[ fixwfwps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixwfwps = *=* ]]
+compdef:159> cmd=fixwfwps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ fixwpps = -N ]]
+compdef:134> [[ fixwpps = -p ]]
+compdef:136> [[ fixwpps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixwpps = *=* ]]
+compdef:159> cmd=fixwpps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ fixwwps = -N ]]
+compdef:134> [[ fixwwps = -p ]]
+compdef:136> [[ fixwwps = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fixwwps = *=* ]]
+compdef:159> cmd=fixwwps 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ includeres = -N ]]
+compdef:134> [[ includeres = -p ]]
+compdef:136> [[ includeres = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ includeres = *=* ]]
+compdef:159> cmd=includeres 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ psbook = -N ]]
+compdef:134> [[ psbook = -p ]]
+compdef:136> [[ psbook = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psbook = *=* ]]
+compdef:159> cmd=psbook 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ psmerge = -N ]]
+compdef:134> [[ psmerge = -p ]]
+compdef:136> [[ psmerge = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psmerge = *=* ]]
+compdef:159> cmd=psmerge 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ psnup = -N ]]
+compdef:134> [[ psnup = -p ]]
+compdef:136> [[ psnup = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psnup = *=* ]]
+compdef:159> cmd=psnup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ psresize = -N ]]
+compdef:134> [[ psresize = -p ]]
+compdef:136> [[ psresize = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psresize = *=* ]]
+compdef:159> cmd=psresize 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ psselect = -N ]]
+compdef:134> [[ psselect = -p ]]
+compdef:136> [[ psselect = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psselect = *=* ]]
+compdef:159> cmd=psselect 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ pstops = -N ]]
+compdef:134> [[ pstops = -p ]]
+compdef:136> [[ pstops = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pstops = *=* ]]
+compdef:159> cmd=pstops 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ getafm = -N ]]
+compdef:134> [[ getafm = -p ]]
+compdef:136> [[ getafm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getafm = *=* ]]
+compdef:159> cmd=getafm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ showchar = -N ]]
+compdef:134> [[ showchar = -p ]]
+compdef:136> [[ showchar = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ showchar = *=* ]]
+compdef:159> cmd=showchar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_psutils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ptree
+compinit:498> _i_name=_ptree 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ptree = -[pPkK](n|) ]]
+compinit:509> compdef -na _ptree ptree
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ptree = *=* ]]
+compdef:79> func=_ptree 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ptree
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ptree = -N ]]
+compdef:134> [[ ptree = -p ]]
+compdef:136> [[ ptree = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ptree = *=* ]]
+compdef:159> cmd=ptree 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ptree 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pump
+compinit:498> _i_name=_pump 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ pump = -[pPkK](n|) ]]
+compinit:509> compdef -na _pump pump
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pump = *=* ]]
+compdef:79> func=_pump 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pump
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ pump = -N ]]
+compdef:134> [[ pump = -p ]]
+compdef:136> [[ pump = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pump = *=* ]]
+compdef:159> cmd=pump 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_pump 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_putclip
+compinit:498> _i_name=_putclip 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ putclip = -[pPkK](n|) ]]
+compinit:509> compdef -na _putclip putclip putclip.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _putclip = *=* ]]
+compdef:79> func=_putclip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _putclip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ putclip = -N ]]
+compdef:134> [[ putclip = -p ]]
+compdef:136> [[ putclip = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ putclip = *=* ]]
+compdef:159> cmd=putclip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_putclip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ putclip.exe = -N ]]
+compdef:134> [[ putclip.exe = -p ]]
+compdef:136> [[ putclip.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ putclip.exe = *=* ]]
+compdef:159> cmd=putclip.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_putclip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_pydoc
+compinit:498> _i_name=_pydoc 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -P = -[pPkK](n|) ]]
+compinit:507> compdef -Pna _pydoc 'pydoc[0-9.]#'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P = p ]]
+compdef:26> [[ P = P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _pydoc = *=* ]]
+compdef:79> func=_pydoc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _pydoc
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'pydoc[0-9.]#' = -N ]]
+compdef:134> [[ 'pydoc[0-9.]#' = -p ]]
+compdef:136> [[ 'pydoc[0-9.]#' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ 'pydoc[0-9.]#' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_pydoc 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_python
+compinit:498> _i_name=_python 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -P = -[pPkK](n|) ]]
+compinit:507> compdef -Pna _python 'python[0-9.]#'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P = p ]]
+compdef:26> [[ P = P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _python = *=* ]]
+compdef:79> func=_python 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _python
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'python[0-9.]#' = -N ]]
+compdef:134> [[ 'python[0-9.]#' = -p ]]
+compdef:136> [[ 'python[0-9.]#' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ 'python[0-9.]#' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_python 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_python_modules
+compinit:498> _i_name=_python_modules 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _python_modules
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_qdbus
+compinit:498> _i_name=_qdbus 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ qdbus = -[pPkK](n|) ]]
+compinit:509> compdef -na _qdbus qdbus
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _qdbus = *=* ]]
+compdef:79> func=_qdbus 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _qdbus
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ qdbus = -N ]]
+compdef:134> [[ qdbus = -p ]]
+compdef:136> [[ qdbus = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ qdbus = *=* ]]
+compdef:159> cmd=qdbus 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_qdbus 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_qemu
+compinit:498> _i_name=_qemu 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -P = -[pPkK](n|) ]]
+compinit:507> compdef -Pna _qemu 'qemu(|-system-*)'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P = p ]]
+compdef:26> [[ P = P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _qemu = *=* ]]
+compdef:79> func=_qemu 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _qemu
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'qemu(|-system-*)' = -N ]]
+compdef:134> [[ 'qemu(|-system-*)' = -p ]]
+compdef:136> [[ 'qemu(|-system-*)' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ 'qemu(|-system-*)' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_qemu 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_qiv
+compinit:498> _i_name=_qiv 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ qiv = -[pPkK](n|) ]]
+compinit:509> compdef -na _qiv qiv
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _qiv = *=* ]]
+compdef:79> func=_qiv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _qiv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ qiv = -N ]]
+compdef:134> [[ qiv = -p ]]
+compdef:136> [[ qiv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ qiv = *=* ]]
+compdef:159> cmd=qiv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_qiv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_qtplay
+compinit:498> _i_name=_qtplay 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ qtplay = -[pPkK](n|) ]]
+compinit:509> compdef -na _qtplay qtplay
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _qtplay = *=* ]]
+compdef:79> func=_qtplay 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _qtplay
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ qtplay = -N ]]
+compdef:134> [[ qtplay = -p ]]
+compdef:136> [[ qtplay = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ qtplay = *=* ]]
+compdef:159> cmd=qtplay 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_qtplay 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_quilt
+compinit:498> _i_name=_quilt 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ quilt = -[pPkK](n|) ]]
+compinit:509> compdef -na _quilt quilt
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _quilt = *=* ]]
+compdef:79> func=_quilt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _quilt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ quilt = -N ]]
+compdef:134> [[ quilt = -p ]]
+compdef:136> [[ quilt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ quilt = *=* ]]
+compdef:159> cmd=quilt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_quilt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_raggle
+compinit:498> _i_name=_raggle 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ raggle = -[pPkK](n|) ]]
+compinit:509> compdef -na _raggle raggle
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _raggle = *=* ]]
+compdef:79> func=_raggle 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _raggle
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ raggle = -N ]]
+compdef:134> [[ raggle = -p ]]
+compdef:136> [[ raggle = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ raggle = *=* ]]
+compdef:159> cmd=raggle 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_raggle 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rake
+compinit:498> _i_name=_rake 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rake = -[pPkK](n|) ]]
+compinit:509> compdef -na _rake rake
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rake = *=* ]]
+compdef:79> func=_rake 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rake
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rake = -N ]]
+compdef:134> [[ rake = -p ]]
+compdef:136> [[ rake = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rake = *=* ]]
+compdef:159> cmd=rake 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rake 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ranlib
+compinit:498> _i_name=_ranlib 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ranlib = -[pPkK](n|) ]]
+compinit:509> compdef -na _ranlib ranlib
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ranlib = *=* ]]
+compdef:79> func=_ranlib 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ranlib
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ranlib = -N ]]
+compdef:134> [[ ranlib = -p ]]
+compdef:136> [[ ranlib = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ranlib = *=* ]]
+compdef:159> cmd=ranlib 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ranlib 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rar
+compinit:498> _i_name=_rar 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rar = -[pPkK](n|) ]]
+compinit:509> compdef -na _rar rar unrar
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rar = *=* ]]
+compdef:79> func=_rar 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rar
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ rar = -N ]]
+compdef:134> [[ rar = -p ]]
+compdef:136> [[ rar = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rar = *=* ]]
+compdef:159> cmd=rar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rar 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ unrar = -N ]]
+compdef:134> [[ unrar = -p ]]
+compdef:136> [[ unrar = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unrar = *=* ]]
+compdef:159> cmd=unrar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rar 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rcctl
+compinit:498> _i_name=_rcctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rcctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _rcctl rcctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rcctl = *=* ]]
+compdef:79> func=_rcctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rcctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rcctl = -N ]]
+compdef:134> [[ rcctl = -p ]]
+compdef:136> [[ rcctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rcctl = *=* ]]
+compdef:159> cmd=rcctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rcctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rcs
+compinit:498> _i_name=_rcs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ co = -[pPkK](n|) ]]
+compinit:509> compdef -na _rcs co ci rcs rcsdiff merge
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rcs = *=* ]]
+compdef:79> func=_rcs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rcs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ co = -N ]]
+compdef:134> [[ co = -p ]]
+compdef:136> [[ co = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ co = *=* ]]
+compdef:159> cmd=co 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ ci = -N ]]
+compdef:134> [[ ci = -p ]]
+compdef:136> [[ ci = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ci = *=* ]]
+compdef:159> cmd=ci 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ rcs = -N ]]
+compdef:134> [[ rcs = -p ]]
+compdef:136> [[ rcs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rcs = *=* ]]
+compdef:159> cmd=rcs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ rcsdiff = -N ]]
+compdef:134> [[ rcsdiff = -p ]]
+compdef:136> [[ rcsdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rcsdiff = *=* ]]
+compdef:159> cmd=rcsdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ merge = -N ]]
+compdef:134> [[ merge = -p ]]
+compdef:136> [[ merge = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ merge = *=* ]]
+compdef:159> cmd=merge 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rdesktop
+compinit:498> _i_name=_rdesktop 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rdesktop = -[pPkK](n|) ]]
+compinit:509> compdef -na _rdesktop rdesktop xfreerdp
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rdesktop = *=* ]]
+compdef:79> func=_rdesktop 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rdesktop
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ rdesktop = -N ]]
+compdef:134> [[ rdesktop = -p ]]
+compdef:136> [[ rdesktop = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rdesktop = *=* ]]
+compdef:159> cmd=rdesktop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rdesktop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ xfreerdp = -N ]]
+compdef:134> [[ xfreerdp = -p ]]
+compdef:136> [[ xfreerdp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xfreerdp = *=* ]]
+compdef:159> cmd=xfreerdp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rdesktop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_read
+compinit:498> _i_name=_read 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ read = -[pPkK](n|) ]]
+compinit:509> compdef -na _read read
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _read = *=* ]]
+compdef:79> func=_read 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _read
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ read = -N ]]
+compdef:134> [[ read = -p ]]
+compdef:136> [[ read = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ read = *=* ]]
+compdef:159> cmd=read 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_read 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_read_comp
+compinit:498> _i_name=_read_comp 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -k = -[pPkK](n|) ]]
+compinit:507> compdef -kna _read_comp complete-word '\C-x\C-r'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case k (a)
+compdef:15> case k (n)
+compdef:15> case k ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ k = p ]]
+compdef:26> [[ k = P ]]
+compdef:28> [[ k = K ]]
+compdef:31> type=key 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _read_comp = *=* ]]
+compdef:79> func=_read_comp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _read_comp
+compdef:81> shift
+compdef:83> case key (widgetkey)
+compdef:83> case key (key)
+compdef:104> [[ 2 -lt 2 ]]
+compdef:110> [[ complete-word = .* ]]
+compdef:114> [[ complete-word = menu-select ]]
+compdef:115> zle -C _read_comp .complete-word _read_comp
+compdef:117> shift
+compdef:120> i=\C-x\C-r
+compdef:121> [[ -n yes ]]
+compdef:122> bindkey '\C-x\C-r'
+compdef:122> IFS=$' \t' +compdef:122> read -A opt
+compdef:123> [[ undefined-key = undefined-key ]]
+compdef:125> bindkey '\C-x\C-r' _read_comp
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_readelf
+compinit:498> _i_name=_readelf 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ readelf = -[pPkK](n|) ]]
+compinit:509> compdef -na _readelf readelf eu-readelf
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _readelf = *=* ]]
+compdef:79> func=_readelf 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _readelf
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ readelf = -N ]]
+compdef:134> [[ readelf = -p ]]
+compdef:136> [[ readelf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ readelf = *=* ]]
+compdef:159> cmd=readelf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_readelf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ eu-readelf = -N ]]
+compdef:134> [[ eu-readelf = -p ]]
+compdef:136> [[ eu-readelf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ eu-readelf = *=* ]]
+compdef:159> cmd=eu-readelf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_readelf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_readshortcut
+compinit:498> _i_name=_readshortcut 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ readshortcut = -[pPkK](n|) ]]
+compinit:509> compdef -na _readshortcut readshortcut readshortcut.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _readshortcut = *=* ]]
+compdef:79> func=_readshortcut 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _readshortcut
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ readshortcut = -N ]]
+compdef:134> [[ readshortcut = -p ]]
+compdef:136> [[ readshortcut = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ readshortcut = *=* ]]
+compdef:159> cmd=readshortcut 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_readshortcut 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ readshortcut.exe = -N ]]
+compdef:134> [[ readshortcut.exe = -p ]]
+compdef:136> [[ readshortcut.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ readshortcut.exe = *=* ]]
+compdef:159> cmd=readshortcut.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_readshortcut 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rebootin
+compinit:498> _i_name=_rebootin 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rebootin = -[pPkK](n|) ]]
+compinit:509> compdef -na _rebootin rebootin
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rebootin = *=* ]]
+compdef:79> func=_rebootin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rebootin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rebootin = -N ]]
+compdef:134> [[ rebootin = -p ]]
+compdef:136> [[ rebootin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rebootin = *=* ]]
+compdef:159> cmd=rebootin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rebootin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_redirect
+compinit:498> _i_name=_redirect 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -redirect- = -[pPkK](n|) ]]
+compinit:509> compdef -na _redirect -redirect-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _redirect = *=* ]]
+compdef:79> func=_redirect 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _redirect
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -redirect- = -N ]]
+compdef:134> [[ -redirect- = -p ]]
+compdef:136> [[ -redirect- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -redirect- = *=* ]]
+compdef:159> cmd=-redirect- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_redirect 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_regex_arguments
+compinit:498> _i_name=_regex_arguments 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _regex_arguments
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_regex_words
+compinit:498> _i_name=_regex_words 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _regex_words
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_remote_files
+compinit:498> _i_name=_remote_files 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _remote_files
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_renice
+compinit:498> _i_name=_renice 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ renice = -[pPkK](n|) ]]
+compinit:509> compdef -na _renice renice
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _renice = *=* ]]
+compdef:79> func=_renice 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _renice
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ renice = -N ]]
+compdef:134> [[ renice = -p ]]
+compdef:136> [[ renice = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ renice = *=* ]]
+compdef:159> cmd=renice 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_renice 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_reprepro
+compinit:498> _i_name=_reprepro 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ reprepro = -[pPkK](n|) ]]
+compinit:509> compdef -na _reprepro reprepro
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _reprepro = *=* ]]
+compdef:79> func=_reprepro 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _reprepro
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ reprepro = -N ]]
+compdef:134> [[ reprepro = -p ]]
+compdef:136> [[ reprepro = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ reprepro = *=* ]]
+compdef:159> cmd=reprepro 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_reprepro 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_requested
+compinit:498> _i_name=_requested 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _requested
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_retrieve_cache
+compinit:498> _i_name=_retrieve_cache 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _retrieve_cache
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_retrieve_mac_apps
+compinit:498> _i_name=_retrieve_mac_apps 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _retrieve_mac_apps
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ri
+compinit:498> _i_name=_ri 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ri = -[pPkK](n|) ]]
+compinit:509> compdef -na _ri ri
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ri = *=* ]]
+compdef:79> func=_ri 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ri
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ri = -N ]]
+compdef:134> [[ ri = -p ]]
+compdef:136> [[ ri = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ri = *=* ]]
+compdef:159> cmd=ri 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ri 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rlogin
+compinit:498> _i_name=_rlogin 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rlogin = -[pPkK](n|) ]]
+compinit:509> compdef -na _rlogin rlogin rsh 'remsh=rsh' rcp
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rlogin = *=* ]]
+compdef:79> func=_rlogin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rlogin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ rlogin = -N ]]
+compdef:134> [[ rlogin = -p ]]
+compdef:136> [[ rlogin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rlogin = *=* ]]
+compdef:159> cmd=rlogin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rlogin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ rsh = -N ]]
+compdef:134> [[ rsh = -p ]]
+compdef:136> [[ rsh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rsh = *=* ]]
+compdef:159> cmd=rsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rlogin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ 'remsh=rsh' = -N ]]
+compdef:134> [[ 'remsh=rsh' = -p ]]
+compdef:136> [[ 'remsh=rsh' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'remsh=rsh' = *=* ]]
+compdef:156> cmd=remsh 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rlogin 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=rsh 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ rcp = -N ]]
+compdef:134> [[ rcp = -p ]]
+compdef:136> [[ rcp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rcp = *=* ]]
+compdef:159> cmd=rcp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rlogin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rm
+compinit:498> _i_name=_rm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rm = -[pPkK](n|) ]]
+compinit:509> compdef -na _rm rm grm zf_rm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rm = *=* ]]
+compdef:79> func=_rm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ rm = -N ]]
+compdef:134> [[ rm = -p ]]
+compdef:136> [[ rm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rm = *=* ]]
+compdef:159> cmd=rm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ grm = -N ]]
+compdef:134> [[ grm = -p ]]
+compdef:136> [[ grm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ grm = *=* ]]
+compdef:159> cmd=grm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zf_rm = -N ]]
+compdef:134> [[ zf_rm = -p ]]
+compdef:136> [[ zf_rm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zf_rm = *=* ]]
+compdef:159> cmd=zf_rm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rpm
+compinit:498> _i_name=_rpm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rpm = -[pPkK](n|) ]]
+compinit:509> compdef -na _rpm rpm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rpm = *=* ]]
+compdef:79> func=_rpm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rpm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rpm = -N ]]
+compdef:134> [[ rpm = -p ]]
+compdef:136> [[ rpm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rpm = *=* ]]
+compdef:159> cmd=rpm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rpm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rpmbuild
+compinit:498> _i_name=_rpmbuild 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rpmbuild = -[pPkK](n|) ]]
+compinit:509> compdef -na _rpmbuild rpmbuild
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rpmbuild = *=* ]]
+compdef:79> func=_rpmbuild 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rpmbuild
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rpmbuild = -N ]]
+compdef:134> [[ rpmbuild = -p ]]
+compdef:136> [[ rpmbuild = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rpmbuild = *=* ]]
+compdef:159> cmd=rpmbuild 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rpmbuild 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rrdtool
+compinit:498> _i_name=_rrdtool 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rrdtool = -[pPkK](n|) ]]
+compinit:509> compdef -na _rrdtool rrdtool
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rrdtool = *=* ]]
+compdef:79> func=_rrdtool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rrdtool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rrdtool = -N ]]
+compdef:134> [[ rrdtool = -p ]]
+compdef:136> [[ rrdtool = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rrdtool = *=* ]]
+compdef:159> cmd=rrdtool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rrdtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rsync
+compinit:498> _i_name=_rsync 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rsync = -[pPkK](n|) ]]
+compinit:509> compdef -na _rsync rsync
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rsync = *=* ]]
+compdef:79> func=_rsync 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rsync
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ rsync = -N ]]
+compdef:134> [[ rsync = -p ]]
+compdef:136> [[ rsync = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rsync = *=* ]]
+compdef:159> cmd=rsync 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rsync 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_rubber
+compinit:498> _i_name=_rubber 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rubber = -[pPkK](n|) ]]
+compinit:509> compdef -na _rubber rubber rubber-pipe rubber-info
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _rubber = *=* ]]
+compdef:79> func=_rubber 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _rubber
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ rubber = -N ]]
+compdef:134> [[ rubber = -p ]]
+compdef:136> [[ rubber = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rubber = *=* ]]
+compdef:159> cmd=rubber 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rubber 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ rubber-pipe = -N ]]
+compdef:134> [[ rubber-pipe = -p ]]
+compdef:136> [[ rubber-pipe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rubber-pipe = *=* ]]
+compdef:159> cmd=rubber-pipe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rubber 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ rubber-info = -N ]]
+compdef:134> [[ rubber-info = -p ]]
+compdef:136> [[ rubber-info = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rubber-info = *=* ]]
+compdef:159> cmd=rubber-info 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_rubber 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ruby
+compinit:498> _i_name=_ruby 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ruby = -[pPkK](n|) ]]
+compinit:509> compdef -na _ruby ruby irb erb -P '(ruby|[ei]rb)[0-9.]#' '-value-,RUBY(LIB|OPT|PATH),-default-'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ruby = *=* ]]
+compdef:79> func=_ruby 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ruby
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ ruby = -N ]]
+compdef:134> [[ ruby = -p ]]
+compdef:136> [[ ruby = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ruby = *=* ]]
+compdef:159> cmd=ruby 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ruby 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ irb = -N ]]
+compdef:134> [[ irb = -p ]]
+compdef:136> [[ irb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ irb = *=* ]]
+compdef:159> cmd=irb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ruby 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ erb = -N ]]
+compdef:134> [[ erb = -p ]]
+compdef:136> [[ erb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ erb = *=* ]]
+compdef:159> cmd=erb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ruby 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ -P = -N ]]
+compdef:134> [[ -P = -p ]]
+compdef:136> [[ -P = -P ]]
+compdef:137> type=postpattern 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ '(ruby|[ei]rb)[0-9.]#' = -N ]]
+compdef:134> [[ '(ruby|[ei]rb)[0-9.]#' = -p ]]
+compdef:136> [[ '(ruby|[ei]rb)[0-9.]#' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '(ruby|[ei]rb)[0-9.]#' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_ruby 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-value-,RUBY(LIB|OPT|PATH),-default-' = -N ]]
+compdef:134> [[ '-value-,RUBY(LIB|OPT|PATH),-default-' = -p ]]
+compdef:136> [[ '-value-,RUBY(LIB|OPT|PATH),-default-' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '-value-,RUBY(LIB|OPT|PATH),-default-' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_ruby 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_run-help
+compinit:498> _i_name=_run-help 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ run-help = -[pPkK](n|) ]]
+compinit:509> compdef -na _run-help run-help
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _run-help = *=* ]]
+compdef:79> func=_run-help 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _run-help
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ run-help = -N ]]
+compdef:134> [[ run-help = -p ]]
+compdef:136> [[ run-help = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ run-help = *=* ]]
+compdef:159> cmd=run-help 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_run-help 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_runit
+compinit:498> _i_name=_runit 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sv = -[pPkK](n|) ]]
+compinit:509> compdef -na _runit sv
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _runit = *=* ]]
+compdef:79> func=_runit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _runit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sv = -N ]]
+compdef:134> [[ sv = -p ]]
+compdef:136> [[ sv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sv = *=* ]]
+compdef:159> cmd=sv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_runit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sablotron
+compinit:498> _i_name=_sablotron 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sabcmd = -[pPkK](n|) ]]
+compinit:509> compdef -na _sablotron sabcmd
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sablotron = *=* ]]
+compdef:79> func=_sablotron 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sablotron
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sabcmd = -N ]]
+compdef:134> [[ sabcmd = -p ]]
+compdef:136> [[ sabcmd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sabcmd = *=* ]]
+compdef:159> cmd=sabcmd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sablotron 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_samba
+compinit:498> _i_name=_samba 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ smbcontrol = -[pPkK](n|) ]]
+compinit:509> compdef -na _samba smbcontrol smbclient nmblookup smbstatus
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _samba = *=* ]]
+compdef:79> func=_samba 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _samba
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ smbcontrol = -N ]]
+compdef:134> [[ smbcontrol = -p ]]
+compdef:136> [[ smbcontrol = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ smbcontrol = *=* ]]
+compdef:159> cmd=smbcontrol 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_samba 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ smbclient = -N ]]
+compdef:134> [[ smbclient = -p ]]
+compdef:136> [[ smbclient = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ smbclient = *=* ]]
+compdef:159> cmd=smbclient 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_samba 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ nmblookup = -N ]]
+compdef:134> [[ nmblookup = -p ]]
+compdef:136> [[ nmblookup = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nmblookup = *=* ]]
+compdef:159> cmd=nmblookup 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_samba 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ smbstatus = -N ]]
+compdef:134> [[ smbstatus = -p ]]
+compdef:136> [[ smbstatus = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ smbstatus = *=* ]]
+compdef:159> cmd=smbstatus 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_samba 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_savecore
+compinit:498> _i_name=_savecore 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ savecore = -[pPkK](n|) ]]
+compinit:509> compdef -na _savecore savecore
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _savecore = *=* ]]
+compdef:79> func=_savecore 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _savecore
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ savecore = -N ]]
+compdef:134> [[ savecore = -p ]]
+compdef:136> [[ savecore = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ savecore = *=* ]]
+compdef:159> cmd=savecore 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_savecore 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sccs
+compinit:498> _i_name=_sccs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sccs = -[pPkK](n|) ]]
+compinit:509> compdef -na _sccs sccs admin cdc comb delta get help prs prt rmdel sact sccsdiff unget val what
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 17  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 16  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sccs = *=* ]]
+compdef:79> func=_sccs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sccs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  15  ))
+compdef:132> [[ sccs = -N ]]
+compdef:134> [[ sccs = -p ]]
+compdef:136> [[ sccs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sccs = *=* ]]
+compdef:159> cmd=sccs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ admin = -N ]]
+compdef:134> [[ admin = -p ]]
+compdef:136> [[ admin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ admin = *=* ]]
+compdef:159> cmd=admin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ cdc = -N ]]
+compdef:134> [[ cdc = -p ]]
+compdef:136> [[ cdc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cdc = *=* ]]
+compdef:159> cmd=cdc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ comb = -N ]]
+compdef:134> [[ comb = -p ]]
+compdef:136> [[ comb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ comb = *=* ]]
+compdef:159> cmd=comb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ delta = -N ]]
+compdef:134> [[ delta = -p ]]
+compdef:136> [[ delta = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ delta = *=* ]]
+compdef:159> cmd=delta 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ get = -N ]]
+compdef:134> [[ get = -p ]]
+compdef:136> [[ get = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ get = *=* ]]
+compdef:159> cmd=get 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ help = -N ]]
+compdef:134> [[ help = -p ]]
+compdef:136> [[ help = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ help = *=* ]]
+compdef:159> cmd=help 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ prs = -N ]]
+compdef:134> [[ prs = -p ]]
+compdef:136> [[ prs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prs = *=* ]]
+compdef:159> cmd=prs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ prt = -N ]]
+compdef:134> [[ prt = -p ]]
+compdef:136> [[ prt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ prt = *=* ]]
+compdef:159> cmd=prt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ rmdel = -N ]]
+compdef:134> [[ rmdel = -p ]]
+compdef:136> [[ rmdel = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rmdel = *=* ]]
+compdef:159> cmd=rmdel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ sact = -N ]]
+compdef:134> [[ sact = -p ]]
+compdef:136> [[ sact = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sact = *=* ]]
+compdef:159> cmd=sact 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ sccsdiff = -N ]]
+compdef:134> [[ sccsdiff = -p ]]
+compdef:136> [[ sccsdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sccsdiff = *=* ]]
+compdef:159> cmd=sccsdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ unget = -N ]]
+compdef:134> [[ unget = -p ]]
+compdef:136> [[ unget = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unget = *=* ]]
+compdef:159> cmd=unget 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ val = -N ]]
+compdef:134> [[ val = -p ]]
+compdef:136> [[ val = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ val = *=* ]]
+compdef:159> cmd=val 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ what = -N ]]
+compdef:134> [[ what = -p ]]
+compdef:136> [[ what = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ what = *=* ]]
+compdef:159> cmd=what 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sccs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sched
+compinit:498> _i_name=_sched 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sched = -[pPkK](n|) ]]
+compinit:509> compdef -na _sched sched
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sched = *=* ]]
+compdef:79> func=_sched 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sched
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sched = -N ]]
+compdef:134> [[ sched = -p ]]
+compdef:136> [[ sched = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sched = *=* ]]
+compdef:159> cmd=sched 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sched 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_schedtool
+compinit:498> _i_name=_schedtool 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ schedtool = -[pPkK](n|) ]]
+compinit:509> compdef -na _schedtool schedtool
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _schedtool = *=* ]]
+compdef:79> func=_schedtool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _schedtool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ schedtool = -N ]]
+compdef:134> [[ schedtool = -p ]]
+compdef:136> [[ schedtool = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ schedtool = *=* ]]
+compdef:159> cmd=schedtool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_schedtool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_schroot
+compinit:498> _i_name=_schroot 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ schroot = -[pPkK](n|) ]]
+compinit:509> compdef -na _schroot schroot
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _schroot = *=* ]]
+compdef:79> func=_schroot 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _schroot
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ schroot = -N ]]
+compdef:134> [[ schroot = -p ]]
+compdef:136> [[ schroot = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ schroot = *=* ]]
+compdef:159> cmd=schroot 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_schroot 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_scl
+compinit:498> _i_name=_scl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ scl = -[pPkK](n|) ]]
+compinit:509> compdef -na _scl scl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _scl = *=* ]]
+compdef:79> func=_scl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _scl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ scl = -N ]]
+compdef:134> [[ scl = -p ]]
+compdef:136> [[ scl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ scl = *=* ]]
+compdef:159> cmd=scl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_scl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_screen
+compinit:498> _i_name=_screen 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ screen = -[pPkK](n|) ]]
+compinit:509> compdef -na _screen screen
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _screen = *=* ]]
+compdef:79> func=_screen 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _screen
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ screen = -N ]]
+compdef:134> [[ screen = -p ]]
+compdef:136> [[ screen = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ screen = *=* ]]
+compdef:159> cmd=screen 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_screen 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_script
+compinit:498> _i_name=_script 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ script = -[pPkK](n|) ]]
+compinit:509> compdef -na _script script scriptreplay
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _script = *=* ]]
+compdef:79> func=_script 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _script
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ script = -N ]]
+compdef:134> [[ script = -p ]]
+compdef:136> [[ script = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ script = *=* ]]
+compdef:159> cmd=script 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_script 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ scriptreplay = -N ]]
+compdef:134> [[ scriptreplay = -p ]]
+compdef:136> [[ scriptreplay = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ scriptreplay = *=* ]]
+compdef:159> cmd=scriptreplay 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_script 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sed
+compinit:498> _i_name=_sed 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sed = -[pPkK](n|) ]]
+compinit:509> compdef -na _sed sed gsed psed s2p
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sed = *=* ]]
+compdef:79> func=_sed 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sed
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ sed = -N ]]
+compdef:134> [[ sed = -p ]]
+compdef:136> [[ sed = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sed = *=* ]]
+compdef:159> cmd=sed 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sed 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ gsed = -N ]]
+compdef:134> [[ gsed = -p ]]
+compdef:136> [[ gsed = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gsed = *=* ]]
+compdef:159> cmd=gsed 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sed 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ psed = -N ]]
+compdef:134> [[ psed = -p ]]
+compdef:136> [[ psed = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ psed = *=* ]]
+compdef:159> cmd=psed 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sed 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ s2p = -N ]]
+compdef:134> [[ s2p = -p ]]
+compdef:136> [[ s2p = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ s2p = *=* ]]
+compdef:159> cmd=s2p 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sed 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sep_parts
+compinit:498> _i_name=_sep_parts 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _sep_parts
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sequence
+compinit:498> _i_name=_sequence 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _sequence
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_service
+compinit:498> _i_name=_service 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ service = -[pPkK](n|) ]]
+compinit:509> compdef -na _service service
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _service = *=* ]]
+compdef:79> func=_service 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _service
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ service = -N ]]
+compdef:134> [[ service = -p ]]
+compdef:136> [[ service = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ service = *=* ]]
+compdef:159> cmd=service 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_service 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_services
+compinit:498> _i_name=_services 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _services
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_set
+compinit:498> _i_name=_set 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ set = -[pPkK](n|) ]]
+compinit:509> compdef -na _set set
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _set = *=* ]]
+compdef:79> func=_set 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _set
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ set = -N ]]
+compdef:134> [[ set = -p ]]
+compdef:136> [[ set = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ set = *=* ]]
+compdef:159> cmd=set 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_set 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_set_command
+compinit:498> _i_name=_set_command 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _set_command
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_setfacl
+compinit:498> _i_name=_setfacl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ setfacl = -[pPkK](n|) ]]
+compinit:509> compdef -na _setfacl setfacl setfacl.exe
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _setfacl = *=* ]]
+compdef:79> func=_setfacl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _setfacl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ setfacl = -N ]]
+compdef:134> [[ setfacl = -p ]]
+compdef:136> [[ setfacl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ setfacl = *=* ]]
+compdef:159> cmd=setfacl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_setfacl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ setfacl.exe = -N ]]
+compdef:134> [[ setfacl.exe = -p ]]
+compdef:136> [[ setfacl.exe = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ setfacl.exe = *=* ]]
+compdef:159> cmd=setfacl.exe 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_setfacl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_setopt
+compinit:498> _i_name=_setopt 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ setopt = -[pPkK](n|) ]]
+compinit:509> compdef -na _setopt setopt unsetopt
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _setopt = *=* ]]
+compdef:79> func=_setopt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _setopt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ setopt = -N ]]
+compdef:134> [[ setopt = -p ]]
+compdef:136> [[ setopt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ setopt = *=* ]]
+compdef:159> cmd=setopt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_setopt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ unsetopt = -N ]]
+compdef:134> [[ unsetopt = -p ]]
+compdef:136> [[ unsetopt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unsetopt = *=* ]]
+compdef:159> cmd=unsetopt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_setopt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_setup
+compinit:498> _i_name=_setup 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _setup
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_setxkbmap
+compinit:498> _i_name=_setxkbmap 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ setxkbmap = -[pPkK](n|) ]]
+compinit:509> compdef -na _setxkbmap setxkbmap
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _setxkbmap = *=* ]]
+compdef:79> func=_setxkbmap 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _setxkbmap
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ setxkbmap = -N ]]
+compdef:134> [[ setxkbmap = -p ]]
+compdef:136> [[ setxkbmap = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ setxkbmap = *=* ]]
+compdef:159> cmd=setxkbmap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_setxkbmap 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sh
+compinit:498> _i_name=_sh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sh = -[pPkK](n|) ]]
+compinit:509> compdef -na _sh sh ksh bash csh tcsh rc
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sh = *=* ]]
+compdef:79> func=_sh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ sh = -N ]]
+compdef:134> [[ sh = -p ]]
+compdef:136> [[ sh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sh = *=* ]]
+compdef:159> cmd=sh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ ksh = -N ]]
+compdef:134> [[ ksh = -p ]]
+compdef:136> [[ ksh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ksh = *=* ]]
+compdef:159> cmd=ksh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ bash = -N ]]
+compdef:134> [[ bash = -p ]]
+compdef:136> [[ bash = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ bash = *=* ]]
+compdef:159> cmd=bash 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ csh = -N ]]
+compdef:134> [[ csh = -p ]]
+compdef:136> [[ csh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ csh = *=* ]]
+compdef:159> cmd=csh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ tcsh = -N ]]
+compdef:134> [[ tcsh = -p ]]
+compdef:136> [[ tcsh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tcsh = *=* ]]
+compdef:159> cmd=tcsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ rc = -N ]]
+compdef:134> [[ rc = -p ]]
+compdef:136> [[ rc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rc = *=* ]]
+compdef:159> cmd=rc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_showmount
+compinit:498> _i_name=_showmount 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ showmount = -[pPkK](n|) ]]
+compinit:509> compdef -na _showmount showmount
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _showmount = *=* ]]
+compdef:79> func=_showmount 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _showmount
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ showmount = -N ]]
+compdef:134> [[ showmount = -p ]]
+compdef:136> [[ showmount = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ showmount = *=* ]]
+compdef:159> cmd=showmount 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_showmount 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_signals
+compinit:498> _i_name=_signals 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _signals
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sisu
+compinit:498> _i_name=_sisu 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sisu = -[pPkK](n|) ]]
+compinit:509> compdef -na _sisu sisu
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sisu = *=* ]]
+compdef:79> func=_sisu 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sisu
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sisu = -N ]]
+compdef:134> [[ sisu = -p ]]
+compdef:136> [[ sisu = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sisu = *=* ]]
+compdef:159> cmd=sisu 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sisu 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_slrn
+compinit:498> _i_name=_slrn 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ slrn = -[pPkK](n|) ]]
+compinit:509> compdef -na _slrn slrn
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _slrn = *=* ]]
+compdef:79> func=_slrn 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _slrn
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ slrn = -N ]]
+compdef:134> [[ slrn = -p ]]
+compdef:136> [[ slrn = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ slrn = *=* ]]
+compdef:159> cmd=slrn 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_slrn 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_smit
+compinit:498> _i_name=_smit 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ smit = -[pPkK](n|) ]]
+compinit:509> compdef -na _smit smit smitty
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _smit = *=* ]]
+compdef:79> func=_smit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _smit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ smit = -N ]]
+compdef:134> [[ smit = -p ]]
+compdef:136> [[ smit = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ smit = *=* ]]
+compdef:159> cmd=smit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_smit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ smitty = -N ]]
+compdef:134> [[ smitty = -p ]]
+compdef:136> [[ smitty = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ smitty = *=* ]]
+compdef:159> cmd=smitty 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_smit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_snoop
+compinit:498> _i_name=_snoop 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ snoop = -[pPkK](n|) ]]
+compinit:509> compdef -na _snoop snoop
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _snoop = *=* ]]
+compdef:79> func=_snoop 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _snoop
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ snoop = -N ]]
+compdef:134> [[ snoop = -p ]]
+compdef:136> [[ snoop = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ snoop = *=* ]]
+compdef:159> cmd=snoop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_snoop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_socket
+compinit:498> _i_name=_socket 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ socket = -[pPkK](n|) ]]
+compinit:509> compdef -na _socket socket
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _socket = *=* ]]
+compdef:79> func=_socket 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _socket
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ socket = -N ]]
+compdef:134> [[ socket = -p ]]
+compdef:136> [[ socket = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ socket = *=* ]]
+compdef:159> cmd=socket 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_socket 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sockstat
+compinit:498> _i_name=_sockstat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sockstat = -[pPkK](n|) ]]
+compinit:509> compdef -na _sockstat sockstat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sockstat = *=* ]]
+compdef:79> func=_sockstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sockstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sockstat = -N ]]
+compdef:134> [[ sockstat = -p ]]
+compdef:136> [[ sockstat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sockstat = *=* ]]
+compdef:159> cmd=sockstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sockstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_softwareupdate
+compinit:498> _i_name=_softwareupdate 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ softwareupdate = -[pPkK](n|) ]]
+compinit:509> compdef -na _softwareupdate softwareupdate
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _softwareupdate = *=* ]]
+compdef:79> func=_softwareupdate 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _softwareupdate
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ softwareupdate = -N ]]
+compdef:134> [[ softwareupdate = -p ]]
+compdef:136> [[ softwareupdate = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ softwareupdate = *=* ]]
+compdef:159> cmd=softwareupdate 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_softwareupdate 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sort
+compinit:498> _i_name=_sort 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sort = -[pPkK](n|) ]]
+compinit:509> compdef -na _sort sort gsort
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sort = *=* ]]
+compdef:79> func=_sort 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sort
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ sort = -N ]]
+compdef:134> [[ sort = -p ]]
+compdef:136> [[ sort = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sort = *=* ]]
+compdef:159> cmd=sort 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sort 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gsort = -N ]]
+compdef:134> [[ gsort = -p ]]
+compdef:136> [[ gsort = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gsort = *=* ]]
+compdef:159> cmd=gsort 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sort 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_source
+compinit:498> _i_name=_source 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ source = -[pPkK](n|) ]]
+compinit:509> compdef -na _source source .
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _source = *=* ]]
+compdef:79> func=_source 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _source
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ source = -N ]]
+compdef:134> [[ source = -p ]]
+compdef:136> [[ source = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ source = *=* ]]
+compdef:159> cmd=source 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ . = -N ]]
+compdef:134> [[ . = -p ]]
+compdef:136> [[ . = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ . = *=* ]]
+compdef:159> cmd=. 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_spamassassin
+compinit:498> _i_name=_spamassassin 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ spamassassin = -[pPkK](n|) ]]
+compinit:509> compdef -na _spamassassin spamassassin
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _spamassassin = *=* ]]
+compdef:79> func=_spamassassin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _spamassassin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ spamassassin = -N ]]
+compdef:134> [[ spamassassin = -p ]]
+compdef:136> [[ spamassassin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ spamassassin = *=* ]]
+compdef:159> cmd=spamassassin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_spamassassin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sqlite
+compinit:498> _i_name=_sqlite 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sqlite = -[pPkK](n|) ]]
+compinit:509> compdef -na _sqlite sqlite sqlite3
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sqlite = *=* ]]
+compdef:79> func=_sqlite 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sqlite
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ sqlite = -N ]]
+compdef:134> [[ sqlite = -p ]]
+compdef:136> [[ sqlite = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sqlite = *=* ]]
+compdef:159> cmd=sqlite 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sqlite 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ sqlite3 = -N ]]
+compdef:134> [[ sqlite3 = -p ]]
+compdef:136> [[ sqlite3 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sqlite3 = *=* ]]
+compdef:159> cmd=sqlite3 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sqlite 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sqsh
+compinit:498> _i_name=_sqsh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sqsh = -[pPkK](n|) ]]
+compinit:509> compdef -na _sqsh sqsh
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sqsh = *=* ]]
+compdef:79> func=_sqsh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sqsh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sqsh = -N ]]
+compdef:134> [[ sqsh = -p ]]
+compdef:136> [[ sqsh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sqsh = *=* ]]
+compdef:159> cmd=sqsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sqsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ss
+compinit:498> _i_name=_ss 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ss = -[pPkK](n|) ]]
+compinit:509> compdef -na _ss ss
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ss = *=* ]]
+compdef:79> func=_ss 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ss
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ss = -N ]]
+compdef:134> [[ ss = -p ]]
+compdef:136> [[ ss = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ss = *=* ]]
+compdef:159> cmd=ss 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ss 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ssh
+compinit:498> _i_name=_ssh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ssh = -[pPkK](n|) ]]
+compinit:509> compdef -na _ssh ssh 'slogin=ssh' scp ssh-add ssh-agent ssh-keygen sftp ssh-copy-id
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ssh = *=* ]]
+compdef:79> func=_ssh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ssh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ ssh = -N ]]
+compdef:134> [[ ssh = -p ]]
+compdef:136> [[ ssh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ssh = *=* ]]
+compdef:159> cmd=ssh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ 'slogin=ssh' = -N ]]
+compdef:134> [[ 'slogin=ssh' = -p ]]
+compdef:136> [[ 'slogin=ssh' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'slogin=ssh' = *=* ]]
+compdef:156> cmd=slogin 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=ssh 
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ scp = -N ]]
+compdef:134> [[ scp = -p ]]
+compdef:136> [[ scp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ scp = *=* ]]
+compdef:159> cmd=scp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ ssh-add = -N ]]
+compdef:134> [[ ssh-add = -p ]]
+compdef:136> [[ ssh-add = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ssh-add = *=* ]]
+compdef:159> cmd=ssh-add 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ ssh-agent = -N ]]
+compdef:134> [[ ssh-agent = -p ]]
+compdef:136> [[ ssh-agent = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ssh-agent = *=* ]]
+compdef:159> cmd=ssh-agent 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ ssh-keygen = -N ]]
+compdef:134> [[ ssh-keygen = -p ]]
+compdef:136> [[ ssh-keygen = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ssh-keygen = *=* ]]
+compdef:159> cmd=ssh-keygen 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ sftp = -N ]]
+compdef:134> [[ sftp = -p ]]
+compdef:136> [[ sftp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sftp = *=* ]]
+compdef:159> cmd=sftp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ ssh-copy-id = -N ]]
+compdef:134> [[ ssh-copy-id = -p ]]
+compdef:136> [[ ssh-copy-id = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ssh-copy-id = *=* ]]
+compdef:159> cmd=ssh-copy-id 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ssh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sshfs
+compinit:498> _i_name=_sshfs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sshfs = -[pPkK](n|) ]]
+compinit:509> compdef -na _sshfs sshfs
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sshfs = *=* ]]
+compdef:79> func=_sshfs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sshfs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sshfs = -N ]]
+compdef:134> [[ sshfs = -p ]]
+compdef:136> [[ sshfs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sshfs = *=* ]]
+compdef:159> cmd=sshfs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sshfs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_stat
+compinit:498> _i_name=_stat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ stat = -[pPkK](n|) ]]
+compinit:509> compdef -na _stat stat zstat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _stat = *=* ]]
+compdef:79> func=_stat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _stat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ stat = -N ]]
+compdef:134> [[ stat = -p ]]
+compdef:136> [[ stat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ stat = *=* ]]
+compdef:159> cmd=stat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_stat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zstat = -N ]]
+compdef:134> [[ zstat = -p ]]
+compdef:136> [[ zstat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zstat = *=* ]]
+compdef:159> cmd=zstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_stat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_stgit
+compinit:498> _i_name=_stgit 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ stg = -[pPkK](n|) ]]
+compinit:509> compdef -na _stgit stg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _stgit = *=* ]]
+compdef:79> func=_stgit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _stgit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ stg = -N ]]
+compdef:134> [[ stg = -p ]]
+compdef:136> [[ stg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ stg = *=* ]]
+compdef:159> cmd=stg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_stgit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_store_cache
+compinit:498> _i_name=_store_cache 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _store_cache
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_strace
+compinit:498> _i_name=_strace 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ strace = -[pPkK](n|) ]]
+compinit:509> compdef -na _strace strace strace64
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _strace = *=* ]]
+compdef:79> func=_strace 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _strace
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ strace = -N ]]
+compdef:134> [[ strace = -p ]]
+compdef:136> [[ strace = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ strace = *=* ]]
+compdef:159> cmd=strace 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_strace 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ strace64 = -N ]]
+compdef:134> [[ strace64 = -p ]]
+compdef:136> [[ strace64 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ strace64 = *=* ]]
+compdef:159> cmd=strace64 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_strace 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_strftime
+compinit:498> _i_name=_strftime 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ strftime = -[pPkK](n|) ]]
+compinit:509> compdef -na _strftime strftime
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _strftime = *=* ]]
+compdef:79> func=_strftime 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _strftime
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ strftime = -N ]]
+compdef:134> [[ strftime = -p ]]
+compdef:136> [[ strftime = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ strftime = *=* ]]
+compdef:159> cmd=strftime 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_strftime 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_strip
+compinit:498> _i_name=_strip 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ strip = -[pPkK](n|) ]]
+compinit:509> compdef -na _strip strip
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _strip = *=* ]]
+compdef:79> func=_strip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _strip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ strip = -N ]]
+compdef:134> [[ strip = -p ]]
+compdef:136> [[ strip = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ strip = *=* ]]
+compdef:159> cmd=strip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_strip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_stty
+compinit:498> _i_name=_stty 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ stty = -[pPkK](n|) ]]
+compinit:509> compdef -na _stty stty
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _stty = *=* ]]
+compdef:79> func=_stty 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _stty
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ stty = -N ]]
+compdef:134> [[ stty = -p ]]
+compdef:136> [[ stty = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ stty = *=* ]]
+compdef:159> cmd=stty 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_stty 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_su
+compinit:498> _i_name=_su 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ su = -[pPkK](n|) ]]
+compinit:509> compdef -na _su su
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _su = *=* ]]
+compdef:79> func=_su 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _su
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ su = -N ]]
+compdef:134> [[ su = -p ]]
+compdef:136> [[ su = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ su = *=* ]]
+compdef:159> cmd=su 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_su 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sub_commands
+compinit:498> _i_name=_sub_commands 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _sub_commands
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_subscript
+compinit:498> _i_name=_subscript 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -subscript- = -[pPkK](n|) ]]
+compinit:509> compdef -na _subscript -subscript-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _subscript = *=* ]]
+compdef:79> func=_subscript 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _subscript
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -subscript- = -N ]]
+compdef:134> [[ -subscript- = -p ]]
+compdef:136> [[ -subscript- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -subscript- = *=* ]]
+compdef:159> cmd=-subscript- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_subscript 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_subversion
+compinit:498> _i_name=_subversion 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ svn = -[pPkK](n|) ]]
+compinit:509> compdef -na _subversion svn svnadmin 'svnadmin-static=svnadmin'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _subversion = *=* ]]
+compdef:79> func=_subversion 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _subversion
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ svn = -N ]]
+compdef:134> [[ svn = -p ]]
+compdef:136> [[ svn = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svn = *=* ]]
+compdef:159> cmd=svn 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_subversion 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ svnadmin = -N ]]
+compdef:134> [[ svnadmin = -p ]]
+compdef:136> [[ svnadmin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svnadmin = *=* ]]
+compdef:159> cmd=svnadmin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_subversion 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ 'svnadmin-static=svnadmin' = -N ]]
+compdef:134> [[ 'svnadmin-static=svnadmin' = -p ]]
+compdef:136> [[ 'svnadmin-static=svnadmin' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'svnadmin-static=svnadmin' = *=* ]]
+compdef:156> cmd=svnadmin-static 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_subversion 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=svnadmin 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sudo
+compinit:498> _i_name=_sudo 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sudo = -[pPkK](n|) ]]
+compinit:509> compdef -na _sudo sudo sudoedit
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sudo = *=* ]]
+compdef:79> func=_sudo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sudo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ sudo = -N ]]
+compdef:134> [[ sudo = -p ]]
+compdef:136> [[ sudo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sudo = *=* ]]
+compdef:159> cmd=sudo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sudo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ sudoedit = -N ]]
+compdef:134> [[ sudoedit = -p ]]
+compdef:136> [[ sudoedit = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sudoedit = *=* ]]
+compdef:159> cmd=sudoedit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sudo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_suffix_alias_files
+compinit:498> _i_name=_suffix_alias_files 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _suffix_alias_files
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_surfraw
+compinit:498> _i_name=_surfraw 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ surfraw = -[pPkK](n|) ]]
+compinit:509> compdef -na _surfraw surfraw sr
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _surfraw = *=* ]]
+compdef:79> func=_surfraw 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _surfraw
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ surfraw = -N ]]
+compdef:134> [[ surfraw = -p ]]
+compdef:136> [[ surfraw = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ surfraw = *=* ]]
+compdef:159> cmd=surfraw 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_surfraw 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ sr = -N ]]
+compdef:134> [[ sr = -p ]]
+compdef:136> [[ sr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sr = *=* ]]
+compdef:159> cmd=sr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_surfraw 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_SUSEconfig
+compinit:498> _i_name=_SUSEconfig 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ SuSEconfig = -[pPkK](n|) ]]
+compinit:509> compdef -na _SUSEconfig SuSEconfig
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _SUSEconfig = *=* ]]
+compdef:79> func=_SUSEconfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _SUSEconfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ SuSEconfig = -N ]]
+compdef:134> [[ SuSEconfig = -p ]]
+compdef:136> [[ SuSEconfig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ SuSEconfig = *=* ]]
+compdef:159> cmd=SuSEconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_SUSEconfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_svcadm
+compinit:498> _i_name=_svcadm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ svcadm = -[pPkK](n|) ]]
+compinit:509> compdef -na _svcadm svcadm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _svcadm = *=* ]]
+compdef:79> func=_svcadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _svcadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ svcadm = -N ]]
+compdef:134> [[ svcadm = -p ]]
+compdef:136> [[ svcadm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svcadm = *=* ]]
+compdef:159> cmd=svcadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_svcadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_svccfg
+compinit:498> _i_name=_svccfg 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ svccfg = -[pPkK](n|) ]]
+compinit:509> compdef -na _svccfg svccfg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _svccfg = *=* ]]
+compdef:79> func=_svccfg 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _svccfg
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ svccfg = -N ]]
+compdef:134> [[ svccfg = -p ]]
+compdef:136> [[ svccfg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svccfg = *=* ]]
+compdef:159> cmd=svccfg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_svccfg 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_svcprop
+compinit:498> _i_name=_svcprop 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ svcprop = -[pPkK](n|) ]]
+compinit:509> compdef -na _svcprop svcprop
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _svcprop = *=* ]]
+compdef:79> func=_svcprop 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _svcprop
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ svcprop = -N ]]
+compdef:134> [[ svcprop = -p ]]
+compdef:136> [[ svcprop = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svcprop = *=* ]]
+compdef:159> cmd=svcprop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_svcprop 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_svcs
+compinit:498> _i_name=_svcs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ svcs = -[pPkK](n|) ]]
+compinit:509> compdef -na _svcs svcs
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _svcs = *=* ]]
+compdef:79> func=_svcs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _svcs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ svcs = -N ]]
+compdef:134> [[ svcs = -p ]]
+compdef:136> [[ svcs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svcs = *=* ]]
+compdef:159> cmd=svcs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_svcs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_svcs_fmri
+compinit:498> _i_name=_svcs_fmri 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _svcs_fmri
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_svn-buildpackage
+compinit:498> _i_name=_svn-buildpackage 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ svn-buildpackage = -[pPkK](n|) ]]
+compinit:509> compdef -na _svn-buildpackage svn-buildpackage
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _svn-buildpackage = *=* ]]
+compdef:79> func=_svn-buildpackage 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _svn-buildpackage
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ svn-buildpackage = -N ]]
+compdef:134> [[ svn-buildpackage = -p ]]
+compdef:136> [[ svn-buildpackage = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ svn-buildpackage = *=* ]]
+compdef:159> cmd=svn-buildpackage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_svn-buildpackage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_swaks
+compinit:498> _i_name=_swaks 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ swaks = -[pPkK](n|) ]]
+compinit:509> compdef -na _swaks swaks
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _swaks = *=* ]]
+compdef:79> func=_swaks 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _swaks
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ swaks = -N ]]
+compdef:134> [[ swaks = -p ]]
+compdef:136> [[ swaks = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ swaks = *=* ]]
+compdef:159> cmd=swaks 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_swaks 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_swift
+compinit:498> _i_name=_swift 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ swift = -[pPkK](n|) ]]
+compinit:509> compdef -na _swift swift swiftc
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _swift = *=* ]]
+compdef:79> func=_swift 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _swift
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ swift = -N ]]
+compdef:134> [[ swift = -p ]]
+compdef:136> [[ swift = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ swift = *=* ]]
+compdef:159> cmd=swift 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_swift 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ swiftc = -N ]]
+compdef:134> [[ swiftc = -p ]]
+compdef:136> [[ swiftc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ swiftc = *=* ]]
+compdef:159> cmd=swiftc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_swift 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sys_calls
+compinit:498> _i_name=_sys_calls 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _sys_calls
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sysctl
+compinit:498> _i_name=_sysctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sysctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _sysctl sysctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sysctl = *=* ]]
+compdef:79> func=_sysctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sysctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sysctl = -N ]]
+compdef:134> [[ sysctl = -p ]]
+compdef:136> [[ sysctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sysctl = *=* ]]
+compdef:159> cmd=sysctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sysctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sysrc
+compinit:498> _i_name=_sysrc 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ sysrc = -[pPkK](n|) ]]
+compinit:509> compdef -na _sysrc sysrc
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sysrc = *=* ]]
+compdef:79> func=_sysrc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sysrc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ sysrc = -N ]]
+compdef:134> [[ sysrc = -p ]]
+compdef:136> [[ sysrc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sysrc = *=* ]]
+compdef:159> cmd=sysrc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sysrc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_sysstat
+compinit:498> _i_name=_sysstat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ mpstat = -[pPkK](n|) ]]
+compinit:509> compdef -na _sysstat mpstat cifsiostat isag sadf sar pidstat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 8  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 7  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _sysstat = *=* ]]
+compdef:79> func=_sysstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _sysstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  6  ))
+compdef:132> [[ mpstat = -N ]]
+compdef:134> [[ mpstat = -p ]]
+compdef:136> [[ mpstat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mpstat = *=* ]]
+compdef:159> cmd=mpstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sysstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ cifsiostat = -N ]]
+compdef:134> [[ cifsiostat = -p ]]
+compdef:136> [[ cifsiostat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cifsiostat = *=* ]]
+compdef:159> cmd=cifsiostat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sysstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ isag = -N ]]
+compdef:134> [[ isag = -p ]]
+compdef:136> [[ isag = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ isag = *=* ]]
+compdef:159> cmd=isag 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sysstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ sadf = -N ]]
+compdef:134> [[ sadf = -p ]]
+compdef:136> [[ sadf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sadf = *=* ]]
+compdef:159> cmd=sadf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sysstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ sar = -N ]]
+compdef:134> [[ sar = -p ]]
+compdef:136> [[ sar = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ sar = *=* ]]
+compdef:159> cmd=sar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sysstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ pidstat = -N ]]
+compdef:134> [[ pidstat = -p ]]
+compdef:136> [[ pidstat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pidstat = *=* ]]
+compdef:159> cmd=pidstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_sysstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_systat
+compinit:498> _i_name=_systat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ systat = -[pPkK](n|) ]]
+compinit:509> compdef -na _systat systat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _systat = *=* ]]
+compdef:79> func=_systat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _systat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ systat = -N ]]
+compdef:134> [[ systat = -p ]]
+compdef:136> [[ systat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ systat = *=* ]]
+compdef:159> cmd=systat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_systat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_system_profiler
+compinit:498> _i_name=_system_profiler 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ system_profiler = -[pPkK](n|) ]]
+compinit:509> compdef -na _system_profiler system_profiler
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _system_profiler = *=* ]]
+compdef:79> func=_system_profiler 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _system_profiler
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ system_profiler = -N ]]
+compdef:134> [[ system_profiler = -p ]]
+compdef:136> [[ system_profiler = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ system_profiler = *=* ]]
+compdef:159> cmd=system_profiler 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_system_profiler 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tags
+compinit:498> _i_name=_tags 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _tags
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tail
+compinit:498> _i_name=_tail 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tail = -[pPkK](n|) ]]
+compinit:509> compdef -na _tail tail
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tail = *=* ]]
+compdef:79> func=_tail 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tail
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tail = -N ]]
+compdef:134> [[ tail = -p ]]
+compdef:136> [[ tail = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tail = *=* ]]
+compdef:159> cmd=tail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tail 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tar
+compinit:498> _i_name=_tar 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tar = -[pPkK](n|) ]]
+compinit:509> compdef -na _tar tar gtar star
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tar = *=* ]]
+compdef:79> func=_tar 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tar
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ tar = -N ]]
+compdef:134> [[ tar = -p ]]
+compdef:136> [[ tar = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tar = *=* ]]
+compdef:159> cmd=tar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tar 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ gtar = -N ]]
+compdef:134> [[ gtar = -p ]]
+compdef:136> [[ gtar = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gtar = *=* ]]
+compdef:159> cmd=gtar 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tar 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ star = -N ]]
+compdef:134> [[ star = -p ]]
+compdef:136> [[ star = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ star = *=* ]]
+compdef:159> cmd=star 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tar 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tar_archive
+compinit:498> _i_name=_tar_archive 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _tar_archive
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tardy
+compinit:498> _i_name=_tardy 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tardy = -[pPkK](n|) ]]
+compinit:509> compdef -na _tardy tardy
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tardy = *=* ]]
+compdef:79> func=_tardy 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tardy
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tardy = -N ]]
+compdef:134> [[ tardy = -p ]]
+compdef:136> [[ tardy = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tardy = *=* ]]
+compdef:159> cmd=tardy 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tardy 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tcpdump
+compinit:498> _i_name=_tcpdump 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tcpdump = -[pPkK](n|) ]]
+compinit:509> compdef -na _tcpdump tcpdump
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tcpdump = *=* ]]
+compdef:79> func=_tcpdump 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tcpdump
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tcpdump = -N ]]
+compdef:134> [[ tcpdump = -p ]]
+compdef:136> [[ tcpdump = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tcpdump = *=* ]]
+compdef:159> cmd=tcpdump 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tcpdump 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tcpsys
+compinit:498> _i_name=_tcpsys 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tcp_open = -[pPkK](n|) ]]
+compinit:509> compdef -na _tcpsys tcp_open
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tcpsys = *=* ]]
+compdef:79> func=_tcpsys 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tcpsys
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tcp_open = -N ]]
+compdef:134> [[ tcp_open = -p ]]
+compdef:136> [[ tcp_open = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tcp_open = *=* ]]
+compdef:159> cmd=tcp_open 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tcpsys 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tcptraceroute
+compinit:498> _i_name=_tcptraceroute 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tcptraceroute = -[pPkK](n|) ]]
+compinit:509> compdef -na _tcptraceroute tcptraceroute
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tcptraceroute = *=* ]]
+compdef:79> func=_tcptraceroute 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tcptraceroute
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tcptraceroute = -N ]]
+compdef:134> [[ tcptraceroute = -p ]]
+compdef:136> [[ tcptraceroute = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tcptraceroute = *=* ]]
+compdef:159> cmd=tcptraceroute 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tcptraceroute 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_telnet
+compinit:498> _i_name=_telnet 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ telnet = -[pPkK](n|) ]]
+compinit:509> compdef -na _telnet telnet
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _telnet = *=* ]]
+compdef:79> func=_telnet 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _telnet
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ telnet = -N ]]
+compdef:134> [[ telnet = -p ]]
+compdef:136> [[ telnet = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ telnet = *=* ]]
+compdef:159> cmd=telnet 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_telnet 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_terminals
+compinit:498> _i_name=_terminals 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ infocmp = -[pPkK](n|) ]]
+compinit:509> compdef -na _terminals infocmp -value-,TERM,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _terminals = *=* ]]
+compdef:79> func=_terminals 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _terminals
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ infocmp = -N ]]
+compdef:134> [[ infocmp = -p ]]
+compdef:136> [[ infocmp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ infocmp = *=* ]]
+compdef:159> cmd=infocmp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_terminals 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,TERM,-default- = -N ]]
+compdef:134> [[ -value-,TERM,-default- = -p ]]
+compdef:136> [[ -value-,TERM,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,TERM,-default- = *=* ]]
+compdef:159> cmd=-value-,TERM,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_terminals 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tex
+compinit:498> _i_name=_tex 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tex = -[pPkK](n|) ]]
+compinit:509> compdef -na _tex tex latex slitex pdftex pdflatex jadetex pdfjadetex 'xetex=tex' 'xelatex=latex' latexmk
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 12  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 11  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tex = *=* ]]
+compdef:79> func=_tex 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tex
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  10  ))
+compdef:132> [[ tex = -N ]]
+compdef:134> [[ tex = -p ]]
+compdef:136> [[ tex = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tex = *=* ]]
+compdef:159> cmd=tex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ latex = -N ]]
+compdef:134> [[ latex = -p ]]
+compdef:136> [[ latex = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ latex = *=* ]]
+compdef:159> cmd=latex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ slitex = -N ]]
+compdef:134> [[ slitex = -p ]]
+compdef:136> [[ slitex = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ slitex = *=* ]]
+compdef:159> cmd=slitex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ pdftex = -N ]]
+compdef:134> [[ pdftex = -p ]]
+compdef:136> [[ pdftex = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdftex = *=* ]]
+compdef:159> cmd=pdftex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ pdflatex = -N ]]
+compdef:134> [[ pdflatex = -p ]]
+compdef:136> [[ pdflatex = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdflatex = *=* ]]
+compdef:159> cmd=pdflatex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ jadetex = -N ]]
+compdef:134> [[ jadetex = -p ]]
+compdef:136> [[ jadetex = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ jadetex = *=* ]]
+compdef:159> cmd=jadetex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ pdfjadetex = -N ]]
+compdef:134> [[ pdfjadetex = -p ]]
+compdef:136> [[ pdfjadetex = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdfjadetex = *=* ]]
+compdef:159> cmd=pdfjadetex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ 'xetex=tex' = -N ]]
+compdef:134> [[ 'xetex=tex' = -p ]]
+compdef:136> [[ 'xetex=tex' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'xetex=tex' = *=* ]]
+compdef:156> cmd=xetex 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=tex 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ 'xelatex=latex' = -N ]]
+compdef:134> [[ 'xelatex=latex' = -p ]]
+compdef:136> [[ 'xelatex=latex' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'xelatex=latex' = *=* ]]
+compdef:156> cmd=xelatex 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=latex 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ latexmk = -N ]]
+compdef:134> [[ latexmk = -p ]]
+compdef:136> [[ latexmk = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ latexmk = *=* ]]
+compdef:159> cmd=latexmk 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tex 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_texi
+compinit:498> _i_name=_texi 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -P = -[pPkK](n|) ]]
+compinit:507> compdef -Pna _texi '(texi(2*|ndex))'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P = p ]]
+compdef:26> [[ P = P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _texi = *=* ]]
+compdef:79> func=_texi 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _texi
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ '(texi(2*|ndex))' = -N ]]
+compdef:134> [[ '(texi(2*|ndex))' = -p ]]
+compdef:136> [[ '(texi(2*|ndex))' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '(texi(2*|ndex))' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_texi 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_texinfo
+compinit:498> _i_name=_texinfo 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ info = -[pPkK](n|) ]]
+compinit:509> compdef -na _texinfo info tkinfo install-info makeinfo texi2any texi2dvi pdftexi2dvi texi2pdf texindex
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 11  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 10  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _texinfo = *=* ]]
+compdef:79> func=_texinfo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _texinfo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  9  ))
+compdef:132> [[ info = -N ]]
+compdef:134> [[ info = -p ]]
+compdef:136> [[ info = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ info = *=* ]]
+compdef:159> cmd=info 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ tkinfo = -N ]]
+compdef:134> [[ tkinfo = -p ]]
+compdef:136> [[ tkinfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tkinfo = *=* ]]
+compdef:159> cmd=tkinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ install-info = -N ]]
+compdef:134> [[ install-info = -p ]]
+compdef:136> [[ install-info = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ install-info = *=* ]]
+compdef:159> cmd=install-info 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ makeinfo = -N ]]
+compdef:134> [[ makeinfo = -p ]]
+compdef:136> [[ makeinfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ makeinfo = *=* ]]
+compdef:159> cmd=makeinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ texi2any = -N ]]
+compdef:134> [[ texi2any = -p ]]
+compdef:136> [[ texi2any = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ texi2any = *=* ]]
+compdef:159> cmd=texi2any 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ texi2dvi = -N ]]
+compdef:134> [[ texi2dvi = -p ]]
+compdef:136> [[ texi2dvi = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ texi2dvi = *=* ]]
+compdef:159> cmd=texi2dvi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ pdftexi2dvi = -N ]]
+compdef:134> [[ pdftexi2dvi = -p ]]
+compdef:136> [[ pdftexi2dvi = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pdftexi2dvi = *=* ]]
+compdef:159> cmd=pdftexi2dvi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ texi2pdf = -N ]]
+compdef:134> [[ texi2pdf = -p ]]
+compdef:136> [[ texi2pdf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ texi2pdf = *=* ]]
+compdef:159> cmd=texi2pdf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ texindex = -N ]]
+compdef:134> [[ texindex = -p ]]
+compdef:136> [[ texindex = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ texindex = *=* ]]
+compdef:159> cmd=texindex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_texinfo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tidy
+compinit:498> _i_name=_tidy 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tidy = -[pPkK](n|) ]]
+compinit:509> compdef -na _tidy tidy
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tidy = *=* ]]
+compdef:79> func=_tidy 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tidy
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tidy = -N ]]
+compdef:134> [[ tidy = -p ]]
+compdef:136> [[ tidy = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tidy = *=* ]]
+compdef:159> cmd=tidy 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tidy 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tiff
+compinit:498> _i_name=_tiff 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -P = -[pPkK](n|) ]]
+compinit:507> compdef -Pna _tiff '(tiff*|*2tiff|pal2rgb)'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P = p ]]
+compdef:26> [[ P = P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tiff = *=* ]]
+compdef:79> func=_tiff 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tiff
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ '(tiff*|*2tiff|pal2rgb)' = -N ]]
+compdef:134> [[ '(tiff*|*2tiff|pal2rgb)' = -p ]]
+compdef:136> [[ '(tiff*|*2tiff|pal2rgb)' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '(tiff*|*2tiff|pal2rgb)' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_tiff 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tilde
+compinit:498> _i_name=_tilde 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -tilde- = -[pPkK](n|) ]]
+compinit:509> compdef -na _tilde -tilde-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tilde = *=* ]]
+compdef:79> func=_tilde 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tilde
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -tilde- = -N ]]
+compdef:134> [[ -tilde- = -p ]]
+compdef:136> [[ -tilde- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -tilde- = *=* ]]
+compdef:159> cmd=-tilde- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tilde 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tilde_files
+compinit:498> _i_name=_tilde_files 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _tilde_files
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_time_zone
+compinit:498> _i_name=_time_zone 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -value-,TZ,-default- = -[pPkK](n|) ]]
+compinit:509> compdef -na _time_zone -value-,TZ,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _time_zone = *=* ]]
+compdef:79> func=_time_zone 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _time_zone
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,TZ,-default- = -N ]]
+compdef:134> [[ -value-,TZ,-default- = -p ]]
+compdef:136> [[ -value-,TZ,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,TZ,-default- = *=* ]]
+compdef:159> cmd=-value-,TZ,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_time_zone 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tin
+compinit:498> _i_name=_tin 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tin = -[pPkK](n|) ]]
+compinit:509> compdef -na _tin tin rtin
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tin = *=* ]]
+compdef:79> func=_tin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ tin = -N ]]
+compdef:134> [[ tin = -p ]]
+compdef:136> [[ tin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tin = *=* ]]
+compdef:159> cmd=tin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ rtin = -N ]]
+compdef:134> [[ rtin = -p ]]
+compdef:136> [[ rtin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rtin = *=* ]]
+compdef:159> cmd=rtin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tla
+compinit:498> _i_name=_tla 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tla = -[pPkK](n|) ]]
+compinit:509> compdef -na _tla tla
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tla = *=* ]]
+compdef:79> func=_tla 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tla
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tla = -N ]]
+compdef:134> [[ tla = -p ]]
+compdef:136> [[ tla = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tla = *=* ]]
+compdef:159> cmd=tla 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tla 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tmux
+compinit:498> _i_name=_tmux 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tmux = -[pPkK](n|) ]]
+compinit:509> compdef -na _tmux tmux
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tmux = *=* ]]
+compdef:79> func=_tmux 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tmux
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tmux = -N ]]
+compdef:134> [[ tmux = -p ]]
+compdef:136> [[ tmux = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tmux = *=* ]]
+compdef:159> cmd=tmux 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tmux 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_todo.sh
+compinit:498> _i_name=_todo.sh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ todo.sh = -[pPkK](n|) ]]
+compinit:509> compdef -na _todo.sh todo.sh
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _todo.sh = *=* ]]
+compdef:79> func=_todo.sh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _todo.sh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ todo.sh = -N ]]
+compdef:134> [[ todo.sh = -p ]]
+compdef:136> [[ todo.sh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ todo.sh = *=* ]]
+compdef:159> cmd=todo.sh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_todo.sh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_toilet
+compinit:498> _i_name=_toilet 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ toilet = -[pPkK](n|) ]]
+compinit:509> compdef -na _toilet toilet
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _toilet = *=* ]]
+compdef:79> func=_toilet 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _toilet
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ toilet = -N ]]
+compdef:134> [[ toilet = -p ]]
+compdef:136> [[ toilet = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ toilet = *=* ]]
+compdef:159> cmd=toilet 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_toilet 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_toolchain-source
+compinit:498> _i_name=_toolchain-source 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tpkg-install = -[pPkK](n|) ]]
+compinit:509> compdef -na _toolchain-source tpkg-install tpkg-make tpkg-debarch tpkg-update tpkg-install-libc
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _toolchain-source = *=* ]]
+compdef:79> func=_toolchain-source 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _toolchain-source
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ tpkg-install = -N ]]
+compdef:134> [[ tpkg-install = -p ]]
+compdef:136> [[ tpkg-install = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpkg-install = *=* ]]
+compdef:159> cmd=tpkg-install 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_toolchain-source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ tpkg-make = -N ]]
+compdef:134> [[ tpkg-make = -p ]]
+compdef:136> [[ tpkg-make = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpkg-make = *=* ]]
+compdef:159> cmd=tpkg-make 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_toolchain-source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ tpkg-debarch = -N ]]
+compdef:134> [[ tpkg-debarch = -p ]]
+compdef:136> [[ tpkg-debarch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpkg-debarch = *=* ]]
+compdef:159> cmd=tpkg-debarch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_toolchain-source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ tpkg-update = -N ]]
+compdef:134> [[ tpkg-update = -p ]]
+compdef:136> [[ tpkg-update = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpkg-update = *=* ]]
+compdef:159> cmd=tpkg-update 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_toolchain-source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ tpkg-install-libc = -N ]]
+compdef:134> [[ tpkg-install-libc = -p ]]
+compdef:136> [[ tpkg-install-libc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpkg-install-libc = *=* ]]
+compdef:159> cmd=tpkg-install-libc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_toolchain-source 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_top
+compinit:498> _i_name=_top 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ top = -[pPkK](n|) ]]
+compinit:509> compdef -na _top top
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _top = *=* ]]
+compdef:79> func=_top 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _top
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ top = -N ]]
+compdef:134> [[ top = -p ]]
+compdef:136> [[ top = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ top = *=* ]]
+compdef:159> cmd=top 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_top 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_topgit
+compinit:498> _i_name=_topgit 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tg = -[pPkK](n|) ]]
+compinit:509> compdef -na _topgit tg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _topgit = *=* ]]
+compdef:79> func=_topgit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _topgit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tg = -N ]]
+compdef:134> [[ tg = -p ]]
+compdef:136> [[ tg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tg = *=* ]]
+compdef:159> cmd=tg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_topgit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_totd
+compinit:498> _i_name=_totd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ totdconfig = -[pPkK](n|) ]]
+compinit:509> compdef -na _totd totdconfig
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _totd = *=* ]]
+compdef:79> func=_totd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _totd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ totdconfig = -N ]]
+compdef:134> [[ totdconfig = -p ]]
+compdef:136> [[ totdconfig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ totdconfig = *=* ]]
+compdef:159> cmd=totdconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_totd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_touch
+compinit:498> _i_name=_touch 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ touch = -[pPkK](n|) ]]
+compinit:509> compdef -na _touch touch gtouch
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _touch = *=* ]]
+compdef:79> func=_touch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _touch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ touch = -N ]]
+compdef:134> [[ touch = -p ]]
+compdef:136> [[ touch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ touch = *=* ]]
+compdef:159> cmd=touch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_touch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gtouch = -N ]]
+compdef:134> [[ gtouch = -p ]]
+compdef:136> [[ gtouch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gtouch = *=* ]]
+compdef:159> cmd=gtouch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_touch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tpb
+compinit:498> _i_name=_tpb 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tpb = -[pPkK](n|) ]]
+compinit:509> compdef -na _tpb tpb
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tpb = *=* ]]
+compdef:79> func=_tpb 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tpb
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tpb = -N ]]
+compdef:134> [[ tpb = -p ]]
+compdef:136> [[ tpb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpb = *=* ]]
+compdef:159> cmd=tpb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tpb 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tpconfig
+compinit:498> _i_name=_tpconfig 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tpconfig = -[pPkK](n|) ]]
+compinit:509> compdef -na _tpconfig tpconfig
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tpconfig = *=* ]]
+compdef:79> func=_tpconfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tpconfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tpconfig = -N ]]
+compdef:134> [[ tpconfig = -p ]]
+compdef:136> [[ tpconfig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tpconfig = *=* ]]
+compdef:159> cmd=tpconfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tpconfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tput
+compinit:498> _i_name=_tput 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tput = -[pPkK](n|) ]]
+compinit:509> compdef -na _tput tput
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tput = *=* ]]
+compdef:79> func=_tput 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tput
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tput = -N ]]
+compdef:134> [[ tput = -p ]]
+compdef:136> [[ tput = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tput = *=* ]]
+compdef:159> cmd=tput 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tput 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tr
+compinit:498> _i_name=_tr 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tr = -[pPkK](n|) ]]
+compinit:509> compdef -na _tr tr
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tr = *=* ]]
+compdef:79> func=_tr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tr = -N ]]
+compdef:134> [[ tr = -p ]]
+compdef:136> [[ tr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tr = *=* ]]
+compdef:159> cmd=tr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tracepath
+compinit:498> _i_name=_tracepath 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tracepath = -[pPkK](n|) ]]
+compinit:509> compdef -na _tracepath tracepath tracepath6
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tracepath = *=* ]]
+compdef:79> func=_tracepath 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tracepath
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ tracepath = -N ]]
+compdef:134> [[ tracepath = -p ]]
+compdef:136> [[ tracepath = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tracepath = *=* ]]
+compdef:159> cmd=tracepath 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tracepath 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ tracepath6 = -N ]]
+compdef:134> [[ tracepath6 = -p ]]
+compdef:136> [[ tracepath6 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tracepath6 = *=* ]]
+compdef:159> cmd=tracepath6 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tracepath 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_trap
+compinit:498> _i_name=_trap 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ trap = -[pPkK](n|) ]]
+compinit:509> compdef -na _trap trap
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _trap = *=* ]]
+compdef:79> func=_trap 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _trap
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ trap = -N ]]
+compdef:134> [[ trap = -p ]]
+compdef:136> [[ trap = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ trap = *=* ]]
+compdef:159> cmd=trap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_trap 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tree
+compinit:498> _i_name=_tree 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tree = -[pPkK](n|) ]]
+compinit:509> compdef -na _tree tree
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tree = *=* ]]
+compdef:79> func=_tree 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tree
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tree = -N ]]
+compdef:134> [[ tree = -p ]]
+compdef:136> [[ tree = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tree = *=* ]]
+compdef:159> cmd=tree 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tree 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_truss
+compinit:498> _i_name=_truss 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ truss = -[pPkK](n|) ]]
+compinit:509> compdef -na _truss truss
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _truss = *=* ]]
+compdef:79> func=_truss 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _truss
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ truss = -N ]]
+compdef:134> [[ truss = -p ]]
+compdef:136> [[ truss = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ truss = *=* ]]
+compdef:159> cmd=truss 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_truss 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ttyctl
+compinit:498> _i_name=_ttyctl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ttyctl = -[pPkK](n|) ]]
+compinit:509> compdef -na _ttyctl ttyctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ttyctl = *=* ]]
+compdef:79> func=_ttyctl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ttyctl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ttyctl = -N ]]
+compdef:134> [[ ttyctl = -p ]]
+compdef:136> [[ ttyctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ttyctl = *=* ]]
+compdef:159> cmd=ttyctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ttyctl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ttys
+compinit:498> _i_name=_ttys 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _ttys
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_tune2fs
+compinit:498> _i_name=_tune2fs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ tune2fs = -[pPkK](n|) ]]
+compinit:509> compdef -na _tune2fs tune2fs
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _tune2fs = *=* ]]
+compdef:79> func=_tune2fs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _tune2fs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ tune2fs = -N ]]
+compdef:134> [[ tune2fs = -p ]]
+compdef:136> [[ tune2fs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tune2fs = *=* ]]
+compdef:159> cmd=tune2fs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_tune2fs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_twidge
+compinit:498> _i_name=_twidge 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ twidge = -[pPkK](n|) ]]
+compinit:509> compdef -na _twidge twidge
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _twidge = *=* ]]
+compdef:79> func=_twidge 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _twidge
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ twidge = -N ]]
+compdef:134> [[ twidge = -p ]]
+compdef:136> [[ twidge = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ twidge = *=* ]]
+compdef:159> cmd=twidge 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twidge 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_twisted
+compinit:498> _i_name=_twisted 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ twistd = -[pPkK](n|) ]]
+compinit:509> compdef -na _twisted twistd trial conch cftp tapconvert ckeygen lore pyhtmlizer tap2deb tkconch manhole tap2rpm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 14  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 13  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _twisted = *=* ]]
+compdef:79> func=_twisted 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _twisted
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  12  ))
+compdef:132> [[ twistd = -N ]]
+compdef:134> [[ twistd = -p ]]
+compdef:136> [[ twistd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ twistd = *=* ]]
+compdef:159> cmd=twistd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ trial = -N ]]
+compdef:134> [[ trial = -p ]]
+compdef:136> [[ trial = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ trial = *=* ]]
+compdef:159> cmd=trial 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ conch = -N ]]
+compdef:134> [[ conch = -p ]]
+compdef:136> [[ conch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ conch = *=* ]]
+compdef:159> cmd=conch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ cftp = -N ]]
+compdef:134> [[ cftp = -p ]]
+compdef:136> [[ cftp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ cftp = *=* ]]
+compdef:159> cmd=cftp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ tapconvert = -N ]]
+compdef:134> [[ tapconvert = -p ]]
+compdef:136> [[ tapconvert = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tapconvert = *=* ]]
+compdef:159> cmd=tapconvert 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ ckeygen = -N ]]
+compdef:134> [[ ckeygen = -p ]]
+compdef:136> [[ ckeygen = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ckeygen = *=* ]]
+compdef:159> cmd=ckeygen 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ lore = -N ]]
+compdef:134> [[ lore = -p ]]
+compdef:136> [[ lore = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ lore = *=* ]]
+compdef:159> cmd=lore 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ pyhtmlizer = -N ]]
+compdef:134> [[ pyhtmlizer = -p ]]
+compdef:136> [[ pyhtmlizer = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ pyhtmlizer = *=* ]]
+compdef:159> cmd=pyhtmlizer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ tap2deb = -N ]]
+compdef:134> [[ tap2deb = -p ]]
+compdef:136> [[ tap2deb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tap2deb = *=* ]]
+compdef:159> cmd=tap2deb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ tkconch = -N ]]
+compdef:134> [[ tkconch = -p ]]
+compdef:136> [[ tkconch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tkconch = *=* ]]
+compdef:159> cmd=tkconch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ manhole = -N ]]
+compdef:134> [[ manhole = -p ]]
+compdef:136> [[ manhole = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ manhole = *=* ]]
+compdef:159> cmd=manhole 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ tap2rpm = -N ]]
+compdef:134> [[ tap2rpm = -p ]]
+compdef:136> [[ tap2rpm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tap2rpm = *=* ]]
+compdef:159> cmd=tap2rpm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_twisted 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_typeset
+compinit:498> _i_name=_typeset 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ autoload = -[pPkK](n|) ]]
+compinit:509> compdef -na _typeset autoload declare export functions integer float local readonly typeset
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 11  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 10  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _typeset = *=* ]]
+compdef:79> func=_typeset 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _typeset
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  9  ))
+compdef:132> [[ autoload = -N ]]
+compdef:134> [[ autoload = -p ]]
+compdef:136> [[ autoload = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ autoload = *=* ]]
+compdef:159> cmd=autoload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ declare = -N ]]
+compdef:134> [[ declare = -p ]]
+compdef:136> [[ declare = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ declare = *=* ]]
+compdef:159> cmd=declare 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ export = -N ]]
+compdef:134> [[ export = -p ]]
+compdef:136> [[ export = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ export = *=* ]]
+compdef:159> cmd=export 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ functions = -N ]]
+compdef:134> [[ functions = -p ]]
+compdef:136> [[ functions = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ functions = *=* ]]
+compdef:159> cmd=functions 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ integer = -N ]]
+compdef:134> [[ integer = -p ]]
+compdef:136> [[ integer = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ integer = *=* ]]
+compdef:159> cmd=integer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ float = -N ]]
+compdef:134> [[ float = -p ]]
+compdef:136> [[ float = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ float = *=* ]]
+compdef:159> cmd=float 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ local = -N ]]
+compdef:134> [[ local = -p ]]
+compdef:136> [[ local = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ local = *=* ]]
+compdef:159> cmd=local 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ readonly = -N ]]
+compdef:134> [[ readonly = -p ]]
+compdef:136> [[ readonly = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ readonly = *=* ]]
+compdef:159> cmd=readonly 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ typeset = -N ]]
+compdef:134> [[ typeset = -p ]]
+compdef:136> [[ typeset = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ typeset = *=* ]]
+compdef:159> cmd=typeset 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_typeset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ulimit
+compinit:498> _i_name=_ulimit 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ulimit = -[pPkK](n|) ]]
+compinit:509> compdef -na _ulimit ulimit
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ulimit = *=* ]]
+compdef:79> func=_ulimit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ulimit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ulimit = -N ]]
+compdef:134> [[ ulimit = -p ]]
+compdef:136> [[ ulimit = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ulimit = *=* ]]
+compdef:159> cmd=ulimit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ulimit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_uml
+compinit:498> _i_name=_uml 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ linux = -[pPkK](n|) ]]
+compinit:509> compdef -na _uml linux uml_moo uml_mconsole uml_switch tunctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _uml = *=* ]]
+compdef:79> func=_uml 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _uml
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ linux = -N ]]
+compdef:134> [[ linux = -p ]]
+compdef:136> [[ linux = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ linux = *=* ]]
+compdef:159> cmd=linux 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uml 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ uml_moo = -N ]]
+compdef:134> [[ uml_moo = -p ]]
+compdef:136> [[ uml_moo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uml_moo = *=* ]]
+compdef:159> cmd=uml_moo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uml 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ uml_mconsole = -N ]]
+compdef:134> [[ uml_mconsole = -p ]]
+compdef:136> [[ uml_mconsole = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uml_mconsole = *=* ]]
+compdef:159> cmd=uml_mconsole 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uml 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ uml_switch = -N ]]
+compdef:134> [[ uml_switch = -p ]]
+compdef:136> [[ uml_switch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uml_switch = *=* ]]
+compdef:159> cmd=uml_switch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uml 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ tunctl = -N ]]
+compdef:134> [[ tunctl = -p ]]
+compdef:136> [[ tunctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ tunctl = *=* ]]
+compdef:159> cmd=tunctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uml 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_umountable
+compinit:498> _i_name=_umountable 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _umountable
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_unace
+compinit:498> _i_name=_unace 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ unace = -[pPkK](n|) ]]
+compinit:509> compdef -na _unace unace
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _unace = *=* ]]
+compdef:79> func=_unace 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _unace
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unace = -N ]]
+compdef:134> [[ unace = -p ]]
+compdef:136> [[ unace = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unace = *=* ]]
+compdef:159> cmd=unace 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_unace 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_uname
+compinit:498> _i_name=_uname 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ uname = -[pPkK](n|) ]]
+compinit:509> compdef -na _uname uname
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _uname = *=* ]]
+compdef:79> func=_uname 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _uname
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ uname = -N ]]
+compdef:134> [[ uname = -p ]]
+compdef:136> [[ uname = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uname = *=* ]]
+compdef:159> cmd=uname 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uname 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_unexpand
+compinit:498> _i_name=_unexpand 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ unexpand = -[pPkK](n|) ]]
+compinit:509> compdef -na _unexpand unexpand
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _unexpand = *=* ]]
+compdef:79> func=_unexpand 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _unexpand
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unexpand = -N ]]
+compdef:134> [[ unexpand = -p ]]
+compdef:136> [[ unexpand = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unexpand = *=* ]]
+compdef:159> cmd=unexpand 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_unexpand 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_unhash
+compinit:498> _i_name=_unhash 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ unhash = -[pPkK](n|) ]]
+compinit:509> compdef -na _unhash unhash
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _unhash = *=* ]]
+compdef:79> func=_unhash 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _unhash
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unhash = -N ]]
+compdef:134> [[ unhash = -p ]]
+compdef:136> [[ unhash = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unhash = *=* ]]
+compdef:159> cmd=unhash 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_unhash 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_uniq
+compinit:498> _i_name=_uniq 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ uniq = -[pPkK](n|) ]]
+compinit:509> compdef -na _uniq uniq guniq
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _uniq = *=* ]]
+compdef:79> func=_uniq 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _uniq
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ uniq = -N ]]
+compdef:134> [[ uniq = -p ]]
+compdef:136> [[ uniq = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uniq = *=* ]]
+compdef:159> cmd=uniq 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uniq 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ guniq = -N ]]
+compdef:134> [[ guniq = -p ]]
+compdef:136> [[ guniq = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ guniq = *=* ]]
+compdef:159> cmd=guniq 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uniq 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_unison
+compinit:498> _i_name=_unison 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ unison = -[pPkK](n|) ]]
+compinit:509> compdef -na _unison unison
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _unison = *=* ]]
+compdef:79> func=_unison 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _unison
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ unison = -N ]]
+compdef:134> [[ unison = -p ]]
+compdef:136> [[ unison = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unison = *=* ]]
+compdef:159> cmd=unison 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_unison 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_units
+compinit:498> _i_name=_units 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ units = -[pPkK](n|) ]]
+compinit:509> compdef -na _units units
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _units = *=* ]]
+compdef:79> func=_units 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _units
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ units = -N ]]
+compdef:134> [[ units = -p ]]
+compdef:136> [[ units = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ units = *=* ]]
+compdef:159> cmd=units 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_units 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_update-alternatives
+compinit:498> _i_name=_update-alternatives 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ update-alternatives = -[pPkK](n|) ]]
+compinit:509> compdef -na _update-alternatives update-alternatives
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _update-alternatives = *=* ]]
+compdef:79> func=_update-alternatives 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _update-alternatives
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ update-alternatives = -N ]]
+compdef:134> [[ update-alternatives = -p ]]
+compdef:136> [[ update-alternatives = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ update-alternatives = *=* ]]
+compdef:159> cmd=update-alternatives 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_update-alternatives 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_update-rc.d
+compinit:498> _i_name=_update-rc.d 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ update-rc.d = -[pPkK](n|) ]]
+compinit:509> compdef -na _update-rc.d update-rc.d
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _update-rc.d = *=* ]]
+compdef:79> func=_update-rc.d 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _update-rc.d
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ update-rc.d = -N ]]
+compdef:134> [[ update-rc.d = -p ]]
+compdef:136> [[ update-rc.d = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ update-rc.d = *=* ]]
+compdef:159> cmd=update-rc.d 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_update-rc.d 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_urls
+compinit:498> _i_name=_urls 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -value-,WWW_HOME,-default- = -[pPkK](n|) ]]
+compinit:509> compdef -na _urls -value-,WWW_HOME,-default- -P '-value-,(ftp|http(|s))_proxy,-default-'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _urls = *=* ]]
+compdef:79> func=_urls 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _urls
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ -value-,WWW_HOME,-default- = -N ]]
+compdef:134> [[ -value-,WWW_HOME,-default- = -p ]]
+compdef:136> [[ -value-,WWW_HOME,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,WWW_HOME,-default- = *=* ]]
+compdef:159> cmd=-value-,WWW_HOME,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urls 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -P = -N ]]
+compdef:134> [[ -P = -p ]]
+compdef:136> [[ -P = -P ]]
+compdef:137> type=postpattern 
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ '-value-,(ftp|http(|s))_proxy,-default-' = -N ]]
+compdef:134> [[ '-value-,(ftp|http(|s))_proxy,-default-' = -p ]]
+compdef:136> [[ '-value-,(ftp|http(|s))_proxy,-default-' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '-value-,(ftp|http(|s))_proxy,-default-' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_urls 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_urpmi
+compinit:498> _i_name=_urpmi 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ urpme = -[pPkK](n|) ]]
+compinit:509> compdef -na _urpmi urpme urpmi urpmi.addmedia urpmi.removemedia urpmi.update urpmq urpmf parsehdlist
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 10  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 9  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _urpmi = *=* ]]
+compdef:79> func=_urpmi 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _urpmi
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  8  ))
+compdef:132> [[ urpme = -N ]]
+compdef:134> [[ urpme = -p ]]
+compdef:136> [[ urpme = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpme = *=* ]]
+compdef:159> cmd=urpme 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ urpmi = -N ]]
+compdef:134> [[ urpmi = -p ]]
+compdef:136> [[ urpmi = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpmi = *=* ]]
+compdef:159> cmd=urpmi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ urpmi.addmedia = -N ]]
+compdef:134> [[ urpmi.addmedia = -p ]]
+compdef:136> [[ urpmi.addmedia = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpmi.addmedia = *=* ]]
+compdef:159> cmd=urpmi.addmedia 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ urpmi.removemedia = -N ]]
+compdef:134> [[ urpmi.removemedia = -p ]]
+compdef:136> [[ urpmi.removemedia = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpmi.removemedia = *=* ]]
+compdef:159> cmd=urpmi.removemedia 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ urpmi.update = -N ]]
+compdef:134> [[ urpmi.update = -p ]]
+compdef:136> [[ urpmi.update = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpmi.update = *=* ]]
+compdef:159> cmd=urpmi.update 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ urpmq = -N ]]
+compdef:134> [[ urpmq = -p ]]
+compdef:136> [[ urpmq = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpmq = *=* ]]
+compdef:159> cmd=urpmq 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ urpmf = -N ]]
+compdef:134> [[ urpmf = -p ]]
+compdef:136> [[ urpmf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urpmf = *=* ]]
+compdef:159> cmd=urpmf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ parsehdlist = -N ]]
+compdef:134> [[ parsehdlist = -p ]]
+compdef:136> [[ parsehdlist = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ parsehdlist = *=* ]]
+compdef:159> cmd=parsehdlist 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urpmi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_urxvt
+compinit:498> _i_name=_urxvt 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ rxvt = -[pPkK](n|) ]]
+compinit:509> compdef -na _urxvt rxvt urxvt urxvtc urxvt256c urxvt256cc urxvt256c-ml urxvt256c-mlc
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 9  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 8  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _urxvt = *=* ]]
+compdef:79> func=_urxvt 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _urxvt
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  7  ))
+compdef:132> [[ rxvt = -N ]]
+compdef:134> [[ rxvt = -p ]]
+compdef:136> [[ rxvt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rxvt = *=* ]]
+compdef:159> cmd=rxvt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urxvt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ urxvt = -N ]]
+compdef:134> [[ urxvt = -p ]]
+compdef:136> [[ urxvt = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urxvt = *=* ]]
+compdef:159> cmd=urxvt 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urxvt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ urxvtc = -N ]]
+compdef:134> [[ urxvtc = -p ]]
+compdef:136> [[ urxvtc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urxvtc = *=* ]]
+compdef:159> cmd=urxvtc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urxvt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ urxvt256c = -N ]]
+compdef:134> [[ urxvt256c = -p ]]
+compdef:136> [[ urxvt256c = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urxvt256c = *=* ]]
+compdef:159> cmd=urxvt256c 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urxvt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ urxvt256cc = -N ]]
+compdef:134> [[ urxvt256cc = -p ]]
+compdef:136> [[ urxvt256cc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urxvt256cc = *=* ]]
+compdef:159> cmd=urxvt256cc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urxvt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ urxvt256c-ml = -N ]]
+compdef:134> [[ urxvt256c-ml = -p ]]
+compdef:136> [[ urxvt256c-ml = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urxvt256c-ml = *=* ]]
+compdef:159> cmd=urxvt256c-ml 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urxvt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ urxvt256c-mlc = -N ]]
+compdef:134> [[ urxvt256c-mlc = -p ]]
+compdef:136> [[ urxvt256c-mlc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ urxvt256c-mlc = *=* ]]
+compdef:159> cmd=urxvt256c-mlc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_urxvt 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_uscan
+compinit:498> _i_name=_uscan 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ uscan = -[pPkK](n|) ]]
+compinit:509> compdef -na _uscan uscan
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _uscan = *=* ]]
+compdef:79> func=_uscan 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _uscan
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ uscan = -N ]]
+compdef:134> [[ uscan = -p ]]
+compdef:136> [[ uscan = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uscan = *=* ]]
+compdef:159> cmd=uscan 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uscan 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_user_admin
+compinit:498> _i_name=_user_admin 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ useradd = -[pPkK](n|) ]]
+compinit:509> compdef -na _user_admin useradd usermod groupadd groupmod
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _user_admin = *=* ]]
+compdef:79> func=_user_admin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _user_admin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ useradd = -N ]]
+compdef:134> [[ useradd = -p ]]
+compdef:136> [[ useradd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ useradd = *=* ]]
+compdef:159> cmd=useradd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_user_admin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ usermod = -N ]]
+compdef:134> [[ usermod = -p ]]
+compdef:136> [[ usermod = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ usermod = *=* ]]
+compdef:159> cmd=usermod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_user_admin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ groupadd = -N ]]
+compdef:134> [[ groupadd = -p ]]
+compdef:136> [[ groupadd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ groupadd = *=* ]]
+compdef:159> cmd=groupadd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_user_admin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ groupmod = -N ]]
+compdef:134> [[ groupmod = -p ]]
+compdef:136> [[ groupmod = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ groupmod = *=* ]]
+compdef:159> cmd=groupmod 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_user_admin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_user_at_host
+compinit:498> _i_name=_user_at_host 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _user_at_host
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_user_expand
+compinit:498> _i_name=_user_expand 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _user_expand
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_user_math_func
+compinit:498> _i_name=_user_math_func 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _user_math_func
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_users
+compinit:498> _i_name=_users 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ passwd = -[pPkK](n|) ]]
+compinit:509> compdef -na _users passwd groups userdel chage chfn
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _users = *=* ]]
+compdef:79> func=_users 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _users
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ passwd = -N ]]
+compdef:134> [[ passwd = -p ]]
+compdef:136> [[ passwd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ passwd = *=* ]]
+compdef:159> cmd=passwd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ groups = -N ]]
+compdef:134> [[ groups = -p ]]
+compdef:136> [[ groups = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ groups = *=* ]]
+compdef:159> cmd=groups 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ userdel = -N ]]
+compdef:134> [[ userdel = -p ]]
+compdef:136> [[ userdel = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ userdel = *=* ]]
+compdef:159> cmd=userdel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ chage = -N ]]
+compdef:134> [[ chage = -p ]]
+compdef:136> [[ chage = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chage = *=* ]]
+compdef:159> cmd=chage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ chfn = -N ]]
+compdef:134> [[ chfn = -p ]]
+compdef:136> [[ chfn = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chfn = *=* ]]
+compdef:159> cmd=chfn 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_users_on
+compinit:498> _i_name=_users_on 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ write = -[pPkK](n|) ]]
+compinit:509> compdef -na _users_on write
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _users_on = *=* ]]
+compdef:79> func=_users_on 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _users_on
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ write = -N ]]
+compdef:134> [[ write = -p ]]
+compdef:136> [[ write = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ write = *=* ]]
+compdef:159> cmd=write 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_users_on 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_uzbl
+compinit:498> _i_name=_uzbl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ uzbl = -[pPkK](n|) ]]
+compinit:509> compdef -na _uzbl uzbl uzbl-browser uzbl-tabbed
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _uzbl = *=* ]]
+compdef:79> func=_uzbl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _uzbl
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ uzbl = -N ]]
+compdef:134> [[ uzbl = -p ]]
+compdef:136> [[ uzbl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uzbl = *=* ]]
+compdef:159> cmd=uzbl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uzbl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ uzbl-browser = -N ]]
+compdef:134> [[ uzbl-browser = -p ]]
+compdef:136> [[ uzbl-browser = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uzbl-browser = *=* ]]
+compdef:159> cmd=uzbl-browser 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uzbl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ uzbl-tabbed = -N ]]
+compdef:134> [[ uzbl-tabbed = -p ]]
+compdef:136> [[ uzbl-tabbed = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ uzbl-tabbed = *=* ]]
+compdef:159> cmd=uzbl-tabbed 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_uzbl 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_valgrind
+compinit:498> _i_name=_valgrind 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ valgrind = -[pPkK](n|) ]]
+compinit:509> compdef -na _valgrind valgrind -value-,VALGRIND_OPTS,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _valgrind = *=* ]]
+compdef:79> func=_valgrind 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _valgrind
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ valgrind = -N ]]
+compdef:134> [[ valgrind = -p ]]
+compdef:136> [[ valgrind = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ valgrind = *=* ]]
+compdef:159> cmd=valgrind 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_valgrind 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,VALGRIND_OPTS,-default- = -N ]]
+compdef:134> [[ -value-,VALGRIND_OPTS,-default- = -p ]]
+compdef:136> [[ -value-,VALGRIND_OPTS,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,VALGRIND_OPTS,-default- = *=* ]]
+compdef:159> cmd=-value-,VALGRIND_OPTS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_valgrind 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_value
+compinit:498> _i_name=_value 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -value- = -[pPkK](n|) ]]
+compinit:509> compdef -na _value -value- -array-value- -value-,-default-,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _value = *=* ]]
+compdef:79> func=_value 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _value
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ -value- = -N ]]
+compdef:134> [[ -value- = -p ]]
+compdef:136> [[ -value- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value- = *=* ]]
+compdef:159> cmd=-value- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_value 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -array-value- = -N ]]
+compdef:134> [[ -array-value- = -p ]]
+compdef:136> [[ -array-value- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -array-value- = *=* ]]
+compdef:159> cmd=-array-value- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_value 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,-default-,-default- = -N ]]
+compdef:134> [[ -value-,-default-,-default- = -p ]]
+compdef:136> [[ -value-,-default-,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,-default-,-default- = *=* ]]
+compdef:159> cmd=-value-,-default-,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_value 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_values
+compinit:498> _i_name=_values 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _values
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_vared
+compinit:498> _i_name=_vared 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ vared = -[pPkK](n|) ]]
+compinit:509> compdef -na _vared vared
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vared = *=* ]]
+compdef:79> func=_vared 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vared
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ vared = -N ]]
+compdef:134> [[ vared = -p ]]
+compdef:136> [[ vared = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vared = *=* ]]
+compdef:159> cmd=vared 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vared 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_vars
+compinit:498> _i_name=_vars 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ getopts = -[pPkK](n|) ]]
+compinit:509> compdef -na _vars getopts unset
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vars = *=* ]]
+compdef:79> func=_vars 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vars
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ getopts = -N ]]
+compdef:134> [[ getopts = -p ]]
+compdef:136> [[ getopts = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ getopts = *=* ]]
+compdef:159> cmd=getopts 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vars 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ unset = -N ]]
+compdef:134> [[ unset = -p ]]
+compdef:136> [[ unset = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unset = *=* ]]
+compdef:159> cmd=unset 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vars 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_vcsh
+compinit:498> _i_name=_vcsh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ vcsh = -[pPkK](n|) ]]
+compinit:509> compdef -na _vcsh vcsh
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vcsh = *=* ]]
+compdef:79> func=_vcsh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vcsh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ vcsh = -N ]]
+compdef:134> [[ vcsh = -p ]]
+compdef:136> [[ vcsh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vcsh = *=* ]]
+compdef:159> cmd=vcsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vcsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_vim
+compinit:498> _i_name=_vim 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ vim = -[pPkK](n|) ]]
+compinit:509> compdef -na _vim vim gvim gex gview nvim rvim rview rgvim rgview evim eview vimdiff gvimdiff
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 15  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 14  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vim = *=* ]]
+compdef:79> func=_vim 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vim
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  13  ))
+compdef:132> [[ vim = -N ]]
+compdef:134> [[ vim = -p ]]
+compdef:136> [[ vim = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vim = *=* ]]
+compdef:159> cmd=vim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ gvim = -N ]]
+compdef:134> [[ gvim = -p ]]
+compdef:136> [[ gvim = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gvim = *=* ]]
+compdef:159> cmd=gvim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ gex = -N ]]
+compdef:134> [[ gex = -p ]]
+compdef:136> [[ gex = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gex = *=* ]]
+compdef:159> cmd=gex 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ gview = -N ]]
+compdef:134> [[ gview = -p ]]
+compdef:136> [[ gview = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gview = *=* ]]
+compdef:159> cmd=gview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ nvim = -N ]]
+compdef:134> [[ nvim = -p ]]
+compdef:136> [[ nvim = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ nvim = *=* ]]
+compdef:159> cmd=nvim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ rvim = -N ]]
+compdef:134> [[ rvim = -p ]]
+compdef:136> [[ rvim = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rvim = *=* ]]
+compdef:159> cmd=rvim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ rview = -N ]]
+compdef:134> [[ rview = -p ]]
+compdef:136> [[ rview = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rview = *=* ]]
+compdef:159> cmd=rview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ rgvim = -N ]]
+compdef:134> [[ rgvim = -p ]]
+compdef:136> [[ rgvim = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rgvim = *=* ]]
+compdef:159> cmd=rgvim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ rgview = -N ]]
+compdef:134> [[ rgview = -p ]]
+compdef:136> [[ rgview = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ rgview = *=* ]]
+compdef:159> cmd=rgview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ evim = -N ]]
+compdef:134> [[ evim = -p ]]
+compdef:136> [[ evim = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ evim = *=* ]]
+compdef:159> cmd=evim 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ eview = -N ]]
+compdef:134> [[ eview = -p ]]
+compdef:136> [[ eview = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ eview = *=* ]]
+compdef:159> cmd=eview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ vimdiff = -N ]]
+compdef:134> [[ vimdiff = -p ]]
+compdef:136> [[ vimdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vimdiff = *=* ]]
+compdef:159> cmd=vimdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gvimdiff = -N ]]
+compdef:134> [[ gvimdiff = -p ]]
+compdef:136> [[ gvimdiff = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gvimdiff = *=* ]]
+compdef:159> cmd=gvimdiff 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_vim-addons
+compinit:498> _i_name=_vim-addons 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ vim-addons = -[pPkK](n|) ]]
+compinit:509> compdef -na _vim-addons vim-addons
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vim-addons = *=* ]]
+compdef:79> func=_vim-addons 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vim-addons
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ vim-addons = -N ]]
+compdef:134> [[ vim-addons = -p ]]
+compdef:136> [[ vim-addons = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vim-addons = *=* ]]
+compdef:159> cmd=vim-addons 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vim-addons 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_vmstat
+compinit:498> _i_name=_vmstat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ vmstat = -[pPkK](n|) ]]
+compinit:509> compdef -na _vmstat vmstat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vmstat = *=* ]]
+compdef:79> func=_vmstat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vmstat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ vmstat = -N ]]
+compdef:134> [[ vmstat = -p ]]
+compdef:136> [[ vmstat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vmstat = *=* ]]
+compdef:159> cmd=vmstat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vmstat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_vnc
+compinit:498> _i_name=_vnc 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ vncserver = -[pPkK](n|) ]]
+compinit:509> compdef -na _vnc vncserver vncviewer xvncviewer xtightvncviewer xvnc4viewer
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 7  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 6  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vnc = *=* ]]
+compdef:79> func=_vnc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vnc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  5  ))
+compdef:132> [[ vncserver = -N ]]
+compdef:134> [[ vncserver = -p ]]
+compdef:136> [[ vncserver = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vncserver = *=* ]]
+compdef:159> cmd=vncserver 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vnc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ vncviewer = -N ]]
+compdef:134> [[ vncviewer = -p ]]
+compdef:136> [[ vncviewer = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vncviewer = *=* ]]
+compdef:159> cmd=vncviewer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vnc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ xvncviewer = -N ]]
+compdef:134> [[ xvncviewer = -p ]]
+compdef:136> [[ xvncviewer = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xvncviewer = *=* ]]
+compdef:159> cmd=xvncviewer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vnc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ xtightvncviewer = -N ]]
+compdef:134> [[ xtightvncviewer = -p ]]
+compdef:136> [[ xtightvncviewer = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xtightvncviewer = *=* ]]
+compdef:159> cmd=xtightvncviewer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vnc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ xvnc4viewer = -N ]]
+compdef:134> [[ xvnc4viewer = -p ]]
+compdef:136> [[ xvnc4viewer = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xvnc4viewer = *=* ]]
+compdef:159> cmd=xvnc4viewer 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vnc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_volume_groups
+compinit:498> _i_name=_volume_groups 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _volume_groups
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_vorbis
+compinit:498> _i_name=_vorbis 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ oggenc = -[pPkK](n|) ]]
+compinit:509> compdef -na _vorbis oggenc ogg123 ogginfo oggdec
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vorbis = *=* ]]
+compdef:79> func=_vorbis 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vorbis
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ oggenc = -N ]]
+compdef:134> [[ oggenc = -p ]]
+compdef:136> [[ oggenc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ oggenc = *=* ]]
+compdef:159> cmd=oggenc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vorbis 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ ogg123 = -N ]]
+compdef:134> [[ ogg123 = -p ]]
+compdef:136> [[ ogg123 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ogg123 = *=* ]]
+compdef:159> cmd=ogg123 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vorbis 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ ogginfo = -N ]]
+compdef:134> [[ ogginfo = -p ]]
+compdef:136> [[ ogginfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ogginfo = *=* ]]
+compdef:159> cmd=ogginfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vorbis 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ oggdec = -N ]]
+compdef:134> [[ oggdec = -p ]]
+compdef:136> [[ oggdec = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ oggdec = *=* ]]
+compdef:159> cmd=oggdec 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vorbis 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_vorbiscomment
+compinit:498> _i_name=_vorbiscomment 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ vorbiscomment = -[pPkK](n|) ]]
+compinit:509> compdef -na _vorbiscomment vorbiscomment
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vorbiscomment = *=* ]]
+compdef:79> func=_vorbiscomment 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vorbiscomment
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ vorbiscomment = -N ]]
+compdef:134> [[ vorbiscomment = -p ]]
+compdef:136> [[ vorbiscomment = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vorbiscomment = *=* ]]
+compdef:159> cmd=vorbiscomment 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vorbiscomment 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_vserver
+compinit:498> _i_name=_vserver 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ vserver = -[pPkK](n|) ]]
+compinit:509> compdef -na _vserver vserver
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vserver = *=* ]]
+compdef:79> func=_vserver 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vserver
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ vserver = -N ]]
+compdef:134> [[ vserver = -p ]]
+compdef:136> [[ vserver = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vserver = *=* ]]
+compdef:159> cmd=vserver 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vserver 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_vux
+compinit:498> _i_name=_vux 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ vux = -[pPkK](n|) ]]
+compinit:509> compdef -na _vux vux vuxctl
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _vux = *=* ]]
+compdef:79> func=_vux 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _vux
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ vux = -N ]]
+compdef:134> [[ vux = -p ]]
+compdef:136> [[ vux = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vux = *=* ]]
+compdef:159> cmd=vux 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vux 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ vuxctl = -N ]]
+compdef:134> [[ vuxctl = -p ]]
+compdef:136> [[ vuxctl = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ vuxctl = *=* ]]
+compdef:159> cmd=vuxctl 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_vux 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_w3m
+compinit:498> _i_name=_w3m 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ w3m = -[pPkK](n|) ]]
+compinit:509> compdef -na _w3m w3m
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _w3m = *=* ]]
+compdef:79> func=_w3m 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _w3m
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ w3m = -N ]]
+compdef:134> [[ w3m = -p ]]
+compdef:136> [[ w3m = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ w3m = *=* ]]
+compdef:159> cmd=w3m 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_w3m 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_wait
+compinit:498> _i_name=_wait 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ wait = -[pPkK](n|) ]]
+compinit:509> compdef -na _wait wait
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wait = *=* ]]
+compdef:79> func=_wait 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wait
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ wait = -N ]]
+compdef:134> [[ wait = -p ]]
+compdef:136> [[ wait = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wait = *=* ]]
+compdef:159> cmd=wait 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wait 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_wajig
+compinit:498> _i_name=_wajig 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ wajig = -[pPkK](n|) ]]
+compinit:509> compdef -na _wajig wajig
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wajig = *=* ]]
+compdef:79> func=_wajig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wajig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ wajig = -N ]]
+compdef:134> [[ wajig = -p ]]
+compdef:136> [[ wajig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wajig = *=* ]]
+compdef:159> cmd=wajig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wajig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_wakeup_capable_devices
+compinit:498> _i_name=_wakeup_capable_devices 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _wakeup_capable_devices
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_wanna-build
+compinit:498> _i_name=_wanna-build 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ wanna-build = -[pPkK](n|) ]]
+compinit:509> compdef -na _wanna-build wanna-build
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wanna-build = *=* ]]
+compdef:79> func=_wanna-build 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wanna-build
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ wanna-build = -N ]]
+compdef:134> [[ wanna-build = -p ]]
+compdef:136> [[ wanna-build = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wanna-build = *=* ]]
+compdef:159> cmd=wanna-build 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wanna-build 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_wanted
+compinit:498> _i_name=_wanted 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _wanted
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_watch
+compinit:498> _i_name=_watch 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ watch = -[pPkK](n|) ]]
+compinit:509> compdef -na _watch watch
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _watch = *=* ]]
+compdef:79> func=_watch 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _watch
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ watch = -N ]]
+compdef:134> [[ watch = -p ]]
+compdef:136> [[ watch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ watch = *=* ]]
+compdef:159> cmd=watch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_watch 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_watch-snoop
+compinit:498> _i_name=_watch-snoop 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _watch-snoop
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_wc
+compinit:498> _i_name=_wc 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ wc = -[pPkK](n|) ]]
+compinit:509> compdef -na _wc wc gwc
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wc = *=* ]]
+compdef:79> func=_wc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ wc = -N ]]
+compdef:134> [[ wc = -p ]]
+compdef:136> [[ wc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wc = *=* ]]
+compdef:159> cmd=wc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gwc = -N ]]
+compdef:134> [[ gwc = -p ]]
+compdef:136> [[ gwc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gwc = *=* ]]
+compdef:159> cmd=gwc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_webbrowser
+compinit:498> _i_name=_webbrowser 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ amaya = -[pPkK](n|) ]]
+compinit:509> compdef -na _webbrowser amaya arena chimera dillo dwb express galeon grail gzilla hotjava konqueror light mmm Mosaic netrik opera opera-next retawq skipstone www xmosaic zen
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 24  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 23  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _webbrowser = *=* ]]
+compdef:79> func=_webbrowser 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _webbrowser
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  22  ))
+compdef:132> [[ amaya = -N ]]
+compdef:134> [[ amaya = -p ]]
+compdef:136> [[ amaya = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ amaya = *=* ]]
+compdef:159> cmd=amaya 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  21  ))
+compdef:132> [[ arena = -N ]]
+compdef:134> [[ arena = -p ]]
+compdef:136> [[ arena = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ arena = *=* ]]
+compdef:159> cmd=arena 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  20  ))
+compdef:132> [[ chimera = -N ]]
+compdef:134> [[ chimera = -p ]]
+compdef:136> [[ chimera = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ chimera = *=* ]]
+compdef:159> cmd=chimera 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  19  ))
+compdef:132> [[ dillo = -N ]]
+compdef:134> [[ dillo = -p ]]
+compdef:136> [[ dillo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dillo = *=* ]]
+compdef:159> cmd=dillo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  18  ))
+compdef:132> [[ dwb = -N ]]
+compdef:134> [[ dwb = -p ]]
+compdef:136> [[ dwb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ dwb = *=* ]]
+compdef:159> cmd=dwb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  17  ))
+compdef:132> [[ express = -N ]]
+compdef:134> [[ express = -p ]]
+compdef:136> [[ express = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ express = *=* ]]
+compdef:159> cmd=express 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  16  ))
+compdef:132> [[ galeon = -N ]]
+compdef:134> [[ galeon = -p ]]
+compdef:136> [[ galeon = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ galeon = *=* ]]
+compdef:159> cmd=galeon 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  15  ))
+compdef:132> [[ grail = -N ]]
+compdef:134> [[ grail = -p ]]
+compdef:136> [[ grail = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ grail = *=* ]]
+compdef:159> cmd=grail 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ gzilla = -N ]]
+compdef:134> [[ gzilla = -p ]]
+compdef:136> [[ gzilla = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gzilla = *=* ]]
+compdef:159> cmd=gzilla 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ hotjava = -N ]]
+compdef:134> [[ hotjava = -p ]]
+compdef:136> [[ hotjava = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ hotjava = *=* ]]
+compdef:159> cmd=hotjava 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ konqueror = -N ]]
+compdef:134> [[ konqueror = -p ]]
+compdef:136> [[ konqueror = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ konqueror = *=* ]]
+compdef:159> cmd=konqueror 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ light = -N ]]
+compdef:134> [[ light = -p ]]
+compdef:136> [[ light = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ light = *=* ]]
+compdef:159> cmd=light 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ mmm = -N ]]
+compdef:134> [[ mmm = -p ]]
+compdef:136> [[ mmm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ mmm = *=* ]]
+compdef:159> cmd=mmm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ Mosaic = -N ]]
+compdef:134> [[ Mosaic = -p ]]
+compdef:136> [[ Mosaic = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ Mosaic = *=* ]]
+compdef:159> cmd=Mosaic 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ netrik = -N ]]
+compdef:134> [[ netrik = -p ]]
+compdef:136> [[ netrik = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ netrik = *=* ]]
+compdef:159> cmd=netrik 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ opera = -N ]]
+compdef:134> [[ opera = -p ]]
+compdef:136> [[ opera = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ opera = *=* ]]
+compdef:159> cmd=opera 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ opera-next = -N ]]
+compdef:134> [[ opera-next = -p ]]
+compdef:136> [[ opera-next = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ opera-next = *=* ]]
+compdef:159> cmd=opera-next 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ retawq = -N ]]
+compdef:134> [[ retawq = -p ]]
+compdef:136> [[ retawq = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ retawq = *=* ]]
+compdef:159> cmd=retawq 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ skipstone = -N ]]
+compdef:134> [[ skipstone = -p ]]
+compdef:136> [[ skipstone = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ skipstone = *=* ]]
+compdef:159> cmd=skipstone 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ www = -N ]]
+compdef:134> [[ www = -p ]]
+compdef:136> [[ www = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ www = *=* ]]
+compdef:159> cmd=www 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ xmosaic = -N ]]
+compdef:134> [[ xmosaic = -p ]]
+compdef:136> [[ xmosaic = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xmosaic = *=* ]]
+compdef:159> cmd=xmosaic 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zen = -N ]]
+compdef:134> [[ zen = -p ]]
+compdef:136> [[ zen = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zen = *=* ]]
+compdef:159> cmd=zen 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_webbrowser 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_wget
+compinit:498> _i_name=_wget 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ wget = -[pPkK](n|) ]]
+compinit:509> compdef -na _wget wget
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wget = *=* ]]
+compdef:79> func=_wget 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wget
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ wget = -N ]]
+compdef:134> [[ wget = -p ]]
+compdef:136> [[ wget = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wget = *=* ]]
+compdef:159> cmd=wget 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wget 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_whereis
+compinit:498> _i_name=_whereis 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ whereis = -[pPkK](n|) ]]
+compinit:509> compdef -na _whereis whereis
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _whereis = *=* ]]
+compdef:79> func=_whereis 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _whereis
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ whereis = -N ]]
+compdef:134> [[ whereis = -p ]]
+compdef:136> [[ whereis = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ whereis = *=* ]]
+compdef:159> cmd=whereis 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_whereis 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_which
+compinit:498> _i_name=_which 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ which = -[pPkK](n|) ]]
+compinit:509> compdef -na _which which whence where type
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _which = *=* ]]
+compdef:79> func=_which 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _which
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ which = -N ]]
+compdef:134> [[ which = -p ]]
+compdef:136> [[ which = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ which = *=* ]]
+compdef:159> cmd=which 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_which 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ whence = -N ]]
+compdef:134> [[ whence = -p ]]
+compdef:136> [[ whence = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ whence = *=* ]]
+compdef:159> cmd=whence 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_which 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ where = -N ]]
+compdef:134> [[ where = -p ]]
+compdef:136> [[ where = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ where = *=* ]]
+compdef:159> cmd=where 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_which 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ type = -N ]]
+compdef:134> [[ type = -p ]]
+compdef:136> [[ type = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ type = *=* ]]
+compdef:159> cmd=type 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_which 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_whois
+compinit:498> _i_name=_whois 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ whois = -[pPkK](n|) ]]
+compinit:509> compdef -na _whois whois fwhois
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _whois = *=* ]]
+compdef:79> func=_whois 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _whois
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ whois = -N ]]
+compdef:134> [[ whois = -p ]]
+compdef:136> [[ whois = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ whois = *=* ]]
+compdef:159> cmd=whois 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_whois 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ fwhois = -N ]]
+compdef:134> [[ fwhois = -p ]]
+compdef:136> [[ fwhois = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fwhois = *=* ]]
+compdef:159> cmd=fwhois 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_whois 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_widgets
+compinit:498> _i_name=_widgets 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _widgets
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_wiggle
+compinit:498> _i_name=_wiggle 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ wiggle = -[pPkK](n|) ]]
+compinit:509> compdef -na _wiggle wiggle
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wiggle = *=* ]]
+compdef:79> func=_wiggle 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wiggle
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ wiggle = -N ]]
+compdef:134> [[ wiggle = -p ]]
+compdef:136> [[ wiggle = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wiggle = *=* ]]
+compdef:159> cmd=wiggle 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wiggle 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_wpa_cli
+compinit:498> _i_name=_wpa_cli 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ wpa_cli = -[pPkK](n|) ]]
+compinit:509> compdef -na _wpa_cli wpa_cli
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _wpa_cli = *=* ]]
+compdef:79> func=_wpa_cli 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _wpa_cli
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ wpa_cli = -N ]]
+compdef:134> [[ wpa_cli = -p ]]
+compdef:136> [[ wpa_cli = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ wpa_cli = *=* ]]
+compdef:159> cmd=wpa_cli 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_wpa_cli 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xargs
+compinit:498> _i_name=_xargs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xargs = -[pPkK](n|) ]]
+compinit:509> compdef -na _xargs xargs gxargs
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xargs = *=* ]]
+compdef:79> func=_xargs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xargs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ xargs = -N ]]
+compdef:134> [[ xargs = -p ]]
+compdef:136> [[ xargs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xargs = *=* ]]
+compdef:159> cmd=xargs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xargs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ gxargs = -N ]]
+compdef:134> [[ gxargs = -p ]]
+compdef:136> [[ gxargs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gxargs = *=* ]]
+compdef:159> cmd=gxargs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xargs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_arguments
+compinit:498> _i_name=_x_arguments 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -P = -[pPkK](n|) ]]
+compinit:507> compdef -Pna _x_arguments '*/X11(|R<4->)/*'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P = p ]]
+compdef:26> [[ P = P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _x_arguments = *=* ]]
+compdef:79> func=_x_arguments 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _x_arguments
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ '*/X11(|R<4->)/*' = -N ]]
+compdef:134> [[ '*/X11(|R<4->)/*' = -p ]]
+compdef:136> [[ '*/X11(|R<4->)/*' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ '*/X11(|R<4->)/*' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_x_arguments 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xauth
+compinit:498> _i_name=_xauth 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xauth = -[pPkK](n|) ]]
+compinit:509> compdef -na _xauth xauth
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xauth = *=* ]]
+compdef:79> func=_xauth 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xauth
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xauth = -N ]]
+compdef:134> [[ xauth = -p ]]
+compdef:136> [[ xauth = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xauth = *=* ]]
+compdef:159> cmd=xauth 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xauth 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xautolock
+compinit:498> _i_name=_xautolock 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xautolock = -[pPkK](n|) ]]
+compinit:509> compdef -na _xautolock xautolock
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xautolock = *=* ]]
+compdef:79> func=_xautolock 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xautolock
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xautolock = -N ]]
+compdef:134> [[ xautolock = -p ]]
+compdef:136> [[ xautolock = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xautolock = *=* ]]
+compdef:159> cmd=xautolock 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xautolock 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_borderwidth
+compinit:498> _i_name=_x_borderwidth 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_borderwidth
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xclip
+compinit:498> _i_name=_xclip 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xclip = -[pPkK](n|) ]]
+compinit:509> compdef -na _xclip xclip
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xclip = *=* ]]
+compdef:79> func=_xclip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xclip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xclip = -N ]]
+compdef:134> [[ xclip = -p ]]
+compdef:136> [[ xclip = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xclip = *=* ]]
+compdef:159> cmd=xclip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xclip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_color
+compinit:498> _i_name=_x_color 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_color
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_colormapid
+compinit:498> _i_name=_x_colormapid 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_colormapid
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_cursor
+compinit:498> _i_name=_x_cursor 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_cursor
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_display
+compinit:498> _i_name=_x_display 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -value-,DISPLAY,-default- = -[pPkK](n|) ]]
+compinit:509> compdef -na _x_display -value-,DISPLAY,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _x_display = *=* ]]
+compdef:79> func=_x_display 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _x_display
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,DISPLAY,-default- = -N ]]
+compdef:134> [[ -value-,DISPLAY,-default- = -p ]]
+compdef:136> [[ -value-,DISPLAY,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,DISPLAY,-default- = *=* ]]
+compdef:159> cmd=-value-,DISPLAY,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_display 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xdvi
+compinit:498> _i_name=_xdvi 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xdvi = -[pPkK](n|) ]]
+compinit:509> compdef -na _xdvi xdvi
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xdvi = *=* ]]
+compdef:79> func=_xdvi 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xdvi
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xdvi = -N ]]
+compdef:134> [[ xdvi = -p ]]
+compdef:136> [[ xdvi = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xdvi = *=* ]]
+compdef:159> cmd=xdvi 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xdvi 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_extension
+compinit:498> _i_name=_x_extension 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_extension
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xfig
+compinit:498> _i_name=_xfig 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xfig = -[pPkK](n|) ]]
+compinit:509> compdef -na _xfig xfig
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xfig = *=* ]]
+compdef:79> func=_xfig 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xfig
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xfig = -N ]]
+compdef:134> [[ xfig = -p ]]
+compdef:136> [[ xfig = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xfig = *=* ]]
+compdef:159> cmd=xfig 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xfig 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_font
+compinit:498> _i_name=_x_font 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_font
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xft_fonts
+compinit:498> _i_name=_xft_fonts 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ fc-list = -[pPkK](n|) ]]
+compinit:509> compdef -na _xft_fonts fc-list fc-match
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xft_fonts = *=* ]]
+compdef:79> func=_xft_fonts 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xft_fonts
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ fc-list = -N ]]
+compdef:134> [[ fc-list = -p ]]
+compdef:136> [[ fc-list = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fc-list = *=* ]]
+compdef:159> cmd=fc-list 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xft_fonts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ fc-match = -N ]]
+compdef:134> [[ fc-match = -p ]]
+compdef:136> [[ fc-match = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fc-match = *=* ]]
+compdef:159> cmd=fc-match 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xft_fonts 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_geometry
+compinit:498> _i_name=_x_geometry 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_geometry
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_keysym
+compinit:498> _i_name=_x_keysym 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_keysym
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xloadimage
+compinit:498> _i_name=_xloadimage 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xli = -[pPkK](n|) ]]
+compinit:509> compdef -na _xloadimage xli xloadimage xsetbg xview
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xloadimage = *=* ]]
+compdef:79> func=_xloadimage 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xloadimage
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ xli = -N ]]
+compdef:134> [[ xli = -p ]]
+compdef:136> [[ xli = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xli = *=* ]]
+compdef:159> cmd=xli 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xloadimage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ xloadimage = -N ]]
+compdef:134> [[ xloadimage = -p ]]
+compdef:136> [[ xloadimage = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xloadimage = *=* ]]
+compdef:159> cmd=xloadimage 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xloadimage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ xsetbg = -N ]]
+compdef:134> [[ xsetbg = -p ]]
+compdef:136> [[ xsetbg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xsetbg = *=* ]]
+compdef:159> cmd=xsetbg 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xloadimage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ xview = -N ]]
+compdef:134> [[ xview = -p ]]
+compdef:136> [[ xview = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xview = *=* ]]
+compdef:159> cmd=xview 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xloadimage 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_locale
+compinit:498> _i_name=_x_locale 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_locale
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xmlsoft
+compinit:498> _i_name=_xmlsoft 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xsltproc = -[pPkK](n|) ]]
+compinit:509> compdef -na _xmlsoft xsltproc xmllint -value-,XML_CATALOG_FILES,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xmlsoft = *=* ]]
+compdef:79> func=_xmlsoft 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xmlsoft
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ xsltproc = -N ]]
+compdef:134> [[ xsltproc = -p ]]
+compdef:136> [[ xsltproc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xsltproc = *=* ]]
+compdef:159> cmd=xsltproc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xmlsoft 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ xmllint = -N ]]
+compdef:134> [[ xmllint = -p ]]
+compdef:136> [[ xmllint = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xmllint = *=* ]]
+compdef:159> cmd=xmllint 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xmlsoft 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,XML_CATALOG_FILES,-default- = -N ]]
+compdef:134> [[ -value-,XML_CATALOG_FILES,-default- = -p ]]
+compdef:136> [[ -value-,XML_CATALOG_FILES,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,XML_CATALOG_FILES,-default- = *=* ]]
+compdef:159> cmd=-value-,XML_CATALOG_FILES,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xmlsoft 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xmms2
+compinit:498> _i_name=_xmms2 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xmms2 = -[pPkK](n|) ]]
+compinit:509> compdef -na _xmms2 xmms2
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xmms2 = *=* ]]
+compdef:79> func=_xmms2 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xmms2
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xmms2 = -N ]]
+compdef:134> [[ xmms2 = -p ]]
+compdef:136> [[ xmms2 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xmms2 = *=* ]]
+compdef:159> cmd=xmms2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xmms2 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_modifier
+compinit:498> _i_name=_x_modifier 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_modifier
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xmodmap
+compinit:498> _i_name=_xmodmap 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xmodmap = -[pPkK](n|) ]]
+compinit:509> compdef -na _xmodmap xmodmap
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xmodmap = *=* ]]
+compdef:79> func=_xmodmap 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xmodmap
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xmodmap = -N ]]
+compdef:134> [[ xmodmap = -p ]]
+compdef:136> [[ xmodmap = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xmodmap = *=* ]]
+compdef:159> cmd=xmodmap 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xmodmap 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_name
+compinit:498> _i_name=_x_name 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_name
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xournal
+compinit:498> _i_name=_xournal 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xournal = -[pPkK](n|) ]]
+compinit:509> compdef -na _xournal xournal
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xournal = *=* ]]
+compdef:79> func=_xournal 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xournal
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xournal = -N ]]
+compdef:134> [[ xournal = -p ]]
+compdef:136> [[ xournal = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xournal = *=* ]]
+compdef:159> cmd=xournal 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xournal 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xpdf
+compinit:498> _i_name=_xpdf 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xpdf = -[pPkK](n|) ]]
+compinit:509> compdef -na _xpdf xpdf zxpdf
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xpdf = *=* ]]
+compdef:79> func=_xpdf 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xpdf
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ xpdf = -N ]]
+compdef:134> [[ xpdf = -p ]]
+compdef:136> [[ xpdf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xpdf = *=* ]]
+compdef:159> cmd=xpdf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xpdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zxpdf = -N ]]
+compdef:134> [[ zxpdf = -p ]]
+compdef:136> [[ zxpdf = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zxpdf = *=* ]]
+compdef:159> cmd=zxpdf 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xpdf 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xrandr
+compinit:498> _i_name=_xrandr 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xrandr = -[pPkK](n|) ]]
+compinit:509> compdef -na _xrandr xrandr
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xrandr = *=* ]]
+compdef:79> func=_xrandr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xrandr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xrandr = -N ]]
+compdef:134> [[ xrandr = -p ]]
+compdef:136> [[ xrandr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xrandr = *=* ]]
+compdef:159> cmd=xrandr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xrandr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_resource
+compinit:498> _i_name=_x_resource 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_resource
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xscreensaver
+compinit:498> _i_name=_xscreensaver 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xscreensaver-command = -[pPkK](n|) ]]
+compinit:509> compdef -na _xscreensaver xscreensaver-command
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xscreensaver = *=* ]]
+compdef:79> func=_xscreensaver 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xscreensaver
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xscreensaver-command = -N ]]
+compdef:134> [[ xscreensaver-command = -p ]]
+compdef:136> [[ xscreensaver-command = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xscreensaver-command = *=* ]]
+compdef:159> cmd=xscreensaver-command 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xscreensaver 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_selection_timeout
+compinit:498> _i_name=_x_selection_timeout 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_selection_timeout
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xset
+compinit:498> _i_name=_xset 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xset = -[pPkK](n|) ]]
+compinit:509> compdef -na _xset xset
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xset = *=* ]]
+compdef:79> func=_xset 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xset
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xset = -N ]]
+compdef:134> [[ xset = -p ]]
+compdef:136> [[ xset = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xset = *=* ]]
+compdef:159> cmd=xset 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xset 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xt_arguments
+compinit:498> _i_name=_xt_arguments 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _xt_arguments
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xterm
+compinit:498> _i_name=_xterm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xterm = -[pPkK](n|) ]]
+compinit:509> compdef -na _xterm xterm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xterm = *=* ]]
+compdef:79> func=_xterm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xterm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xterm = -N ]]
+compdef:134> [[ xterm = -p ]]
+compdef:136> [[ xterm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xterm = *=* ]]
+compdef:159> cmd=xterm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xterm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_title
+compinit:498> _i_name=_x_title 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_title
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xt_session_id
+compinit:498> _i_name=_xt_session_id 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _xt_session_id
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_utils
+compinit:498> _i_name=_x_utils 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xdpyinfo = -[pPkK](n|) ]]
+compinit:509> compdef -na _x_utils xdpyinfo xwininfo xkill xfontsel xfd xev xhost xon xsetroot xwd xwud xrdb xprop xlsatoms xlsclients
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 17  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 16  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _x_utils = *=* ]]
+compdef:79> func=_x_utils 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _x_utils
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  15  ))
+compdef:132> [[ xdpyinfo = -N ]]
+compdef:134> [[ xdpyinfo = -p ]]
+compdef:136> [[ xdpyinfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xdpyinfo = *=* ]]
+compdef:159> cmd=xdpyinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  14  ))
+compdef:132> [[ xwininfo = -N ]]
+compdef:134> [[ xwininfo = -p ]]
+compdef:136> [[ xwininfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xwininfo = *=* ]]
+compdef:159> cmd=xwininfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  13  ))
+compdef:132> [[ xkill = -N ]]
+compdef:134> [[ xkill = -p ]]
+compdef:136> [[ xkill = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xkill = *=* ]]
+compdef:159> cmd=xkill 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  12  ))
+compdef:132> [[ xfontsel = -N ]]
+compdef:134> [[ xfontsel = -p ]]
+compdef:136> [[ xfontsel = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xfontsel = *=* ]]
+compdef:159> cmd=xfontsel 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  11  ))
+compdef:132> [[ xfd = -N ]]
+compdef:134> [[ xfd = -p ]]
+compdef:136> [[ xfd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xfd = *=* ]]
+compdef:159> cmd=xfd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ xev = -N ]]
+compdef:134> [[ xev = -p ]]
+compdef:136> [[ xev = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xev = *=* ]]
+compdef:159> cmd=xev 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ xhost = -N ]]
+compdef:134> [[ xhost = -p ]]
+compdef:136> [[ xhost = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xhost = *=* ]]
+compdef:159> cmd=xhost 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ xon = -N ]]
+compdef:134> [[ xon = -p ]]
+compdef:136> [[ xon = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xon = *=* ]]
+compdef:159> cmd=xon 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ xsetroot = -N ]]
+compdef:134> [[ xsetroot = -p ]]
+compdef:136> [[ xsetroot = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xsetroot = *=* ]]
+compdef:159> cmd=xsetroot 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ xwd = -N ]]
+compdef:134> [[ xwd = -p ]]
+compdef:136> [[ xwd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xwd = *=* ]]
+compdef:159> cmd=xwd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ xwud = -N ]]
+compdef:134> [[ xwud = -p ]]
+compdef:136> [[ xwud = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xwud = *=* ]]
+compdef:159> cmd=xwud 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ xrdb = -N ]]
+compdef:134> [[ xrdb = -p ]]
+compdef:136> [[ xrdb = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xrdb = *=* ]]
+compdef:159> cmd=xrdb 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ xprop = -N ]]
+compdef:134> [[ xprop = -p ]]
+compdef:136> [[ xprop = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xprop = *=* ]]
+compdef:159> cmd=xprop 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ xlsatoms = -N ]]
+compdef:134> [[ xlsatoms = -p ]]
+compdef:136> [[ xlsatoms = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xlsatoms = *=* ]]
+compdef:159> cmd=xlsatoms 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ xlsclients = -N ]]
+compdef:134> [[ xlsclients = -p ]]
+compdef:136> [[ xlsclients = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xlsclients = *=* ]]
+compdef:159> cmd=xlsclients 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_x_utils 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xv
+compinit:498> _i_name=_xv 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xv = -[pPkK](n|) ]]
+compinit:509> compdef -na _xv xv
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xv = *=* ]]
+compdef:79> func=_xv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xv = -N ]]
+compdef:134> [[ xv = -p ]]
+compdef:136> [[ xv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xv = *=* ]]
+compdef:159> cmd=xv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_visual
+compinit:498> _i_name=_x_visual 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_visual
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_x_window
+compinit:498> _i_name=_x_window 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _x_window
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xwit
+compinit:498> _i_name=_xwit 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xwit = -[pPkK](n|) ]]
+compinit:509> compdef -na _xwit xwit
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xwit = *=* ]]
+compdef:79> func=_xwit 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xwit
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xwit = -N ]]
+compdef:134> [[ xwit = -p ]]
+compdef:136> [[ xwit = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xwit = *=* ]]
+compdef:159> cmd=xwit 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xwit 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xxd
+compinit:498> _i_name=_xxd 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xxd = -[pPkK](n|) ]]
+compinit:509> compdef -na _xxd xxd
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xxd = *=* ]]
+compdef:79> func=_xxd 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xxd
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ xxd = -N ]]
+compdef:134> [[ xxd = -p ]]
+compdef:136> [[ xxd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xxd = *=* ]]
+compdef:159> cmd=xxd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xxd 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_xz
+compinit:498> _i_name=_xz 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ xz = -[pPkK](n|) ]]
+compinit:509> compdef -na _xz xz unxz 'xzcat=unxz' 'lzma=xz' 'unlzma=unxz' 'lzcat=unxz' '-redirect-,<,unxz=unxz' '-redirect-,>,xz=unxz' '-redirect-,<,xz=xz' -value-,XZ_OPT,-default- -value-,XZ_DEFAULTS,-default-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 13  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 12  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _xz = *=* ]]
+compdef:79> func=_xz 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _xz
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  11  ))
+compdef:132> [[ xz = -N ]]
+compdef:134> [[ xz = -p ]]
+compdef:136> [[ xz = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ xz = *=* ]]
+compdef:159> cmd=xz 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ unxz = -N ]]
+compdef:134> [[ unxz = -p ]]
+compdef:136> [[ unxz = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unxz = *=* ]]
+compdef:159> cmd=unxz 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ 'xzcat=unxz' = -N ]]
+compdef:134> [[ 'xzcat=unxz' = -p ]]
+compdef:136> [[ 'xzcat=unxz' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'xzcat=unxz' = *=* ]]
+compdef:156> cmd=xzcat 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=unxz 
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ 'lzma=xz' = -N ]]
+compdef:134> [[ 'lzma=xz' = -p ]]
+compdef:136> [[ 'lzma=xz' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'lzma=xz' = *=* ]]
+compdef:156> cmd=lzma 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=xz 
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ 'unlzma=unxz' = -N ]]
+compdef:134> [[ 'unlzma=unxz' = -p ]]
+compdef:136> [[ 'unlzma=unxz' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'unlzma=unxz' = *=* ]]
+compdef:156> cmd=unlzma 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=unxz 
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ 'lzcat=unxz' = -N ]]
+compdef:134> [[ 'lzcat=unxz' = -p ]]
+compdef:136> [[ 'lzcat=unxz' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'lzcat=unxz' = *=* ]]
+compdef:156> cmd=lzcat 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=unxz 
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ '-redirect-,<,unxz=unxz' = -N ]]
+compdef:134> [[ '-redirect-,<,unxz=unxz' = -p ]]
+compdef:136> [[ '-redirect-,<,unxz=unxz' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,unxz=unxz' = *=* ]]
+compdef:156> cmd='-redirect-,<,unxz' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=unxz 
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ '-redirect-,>,xz=unxz' = -N ]]
+compdef:134> [[ '-redirect-,>,xz=unxz' = -p ]]
+compdef:136> [[ '-redirect-,>,xz=unxz' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,>,xz=unxz' = *=* ]]
+compdef:156> cmd='-redirect-,>,xz' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=unxz 
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ '-redirect-,<,xz=xz' = -N ]]
+compdef:134> [[ '-redirect-,<,xz=xz' = -p ]]
+compdef:136> [[ '-redirect-,<,xz=xz' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ '-redirect-,<,xz=xz' = *=* ]]
+compdef:156> cmd='-redirect-,<,xz' 
+compdef:157> svc=yes 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=xz 
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ -value-,XZ_OPT,-default- = -N ]]
+compdef:134> [[ -value-,XZ_OPT,-default- = -p ]]
+compdef:136> [[ -value-,XZ_OPT,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,XZ_OPT,-default- = *=* ]]
+compdef:159> cmd=-value-,XZ_OPT,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,XZ_DEFAULTS,-default- = -N ]]
+compdef:134> [[ -value-,XZ_DEFAULTS,-default- = -p ]]
+compdef:136> [[ -value-,XZ_DEFAULTS,-default- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,XZ_DEFAULTS,-default- = *=* ]]
+compdef:159> cmd=-value-,XZ_DEFAULTS,-default- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_xz 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_yafc
+compinit:498> _i_name=_yafc 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ yafc = -[pPkK](n|) ]]
+compinit:509> compdef -na _yafc yafc
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _yafc = *=* ]]
+compdef:79> func=_yafc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _yafc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ yafc = -N ]]
+compdef:134> [[ yafc = -p ]]
+compdef:136> [[ yafc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yafc = *=* ]]
+compdef:159> cmd=yafc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yafc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_yast
+compinit:498> _i_name=_yast 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ yast = -[pPkK](n|) ]]
+compinit:509> compdef -na _yast yast yast2
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _yast = *=* ]]
+compdef:79> func=_yast 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _yast
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ yast = -N ]]
+compdef:134> [[ yast = -p ]]
+compdef:136> [[ yast = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yast = *=* ]]
+compdef:159> cmd=yast 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yast 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ yast2 = -N ]]
+compdef:134> [[ yast2 = -p ]]
+compdef:136> [[ yast2 = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yast2 = *=* ]]
+compdef:159> cmd=yast2 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yast 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_yodl
+compinit:498> _i_name=_yodl 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -P = -[pPkK](n|) ]]
+compinit:507> compdef -Pna _yodl 'yodl(|2*)'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case P (a)
+compdef:15> case P (n)
+compdef:15> case P ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ P = p ]]
+compdef:26> [[ P = P ]]
+compdef:27> type=postpattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _yodl = *=* ]]
+compdef:79> func=_yodl 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _yodl
+compdef:81> shift
+compdef:83> case postpattern (widgetkey)
+compdef:83> case postpattern (key)
+compdef:83> case postpattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'yodl(|2*)' = -N ]]
+compdef:134> [[ 'yodl(|2*)' = -p ]]
+compdef:136> [[ 'yodl(|2*)' = -P ]]
+compdef:139> case postpattern (pattern)
+compdef:139> case postpattern (postpattern)
+compdef:148> [[ 'yodl(|2*)' = (#b)(*)=(*) ]]
+compdef:151> _postpatcomps[$1]=_yodl 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_yp
+compinit:498> _i_name=_yp 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ypcat = -[pPkK](n|) ]]
+compinit:509> compdef -na _yp ypcat ypmatch yppasswd ypwhich ypset ypserv ypbind yppush yppoll ypxfr domainname
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 13  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 12  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _yp = *=* ]]
+compdef:79> func=_yp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _yp
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  11  ))
+compdef:132> [[ ypcat = -N ]]
+compdef:134> [[ ypcat = -p ]]
+compdef:136> [[ ypcat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypcat = *=* ]]
+compdef:159> cmd=ypcat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  10  ))
+compdef:132> [[ ypmatch = -N ]]
+compdef:134> [[ ypmatch = -p ]]
+compdef:136> [[ ypmatch = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypmatch = *=* ]]
+compdef:159> cmd=ypmatch 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  9  ))
+compdef:132> [[ yppasswd = -N ]]
+compdef:134> [[ yppasswd = -p ]]
+compdef:136> [[ yppasswd = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yppasswd = *=* ]]
+compdef:159> cmd=yppasswd 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  8  ))
+compdef:132> [[ ypwhich = -N ]]
+compdef:134> [[ ypwhich = -p ]]
+compdef:136> [[ ypwhich = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypwhich = *=* ]]
+compdef:159> cmd=ypwhich 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  7  ))
+compdef:132> [[ ypset = -N ]]
+compdef:134> [[ ypset = -p ]]
+compdef:136> [[ ypset = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypset = *=* ]]
+compdef:159> cmd=ypset 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  6  ))
+compdef:132> [[ ypserv = -N ]]
+compdef:134> [[ ypserv = -p ]]
+compdef:136> [[ ypserv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypserv = *=* ]]
+compdef:159> cmd=ypserv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  5  ))
+compdef:132> [[ ypbind = -N ]]
+compdef:134> [[ ypbind = -p ]]
+compdef:136> [[ ypbind = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypbind = *=* ]]
+compdef:159> cmd=ypbind 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  4  ))
+compdef:132> [[ yppush = -N ]]
+compdef:134> [[ yppush = -p ]]
+compdef:136> [[ yppush = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yppush = *=* ]]
+compdef:159> cmd=yppush 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ yppoll = -N ]]
+compdef:134> [[ yppoll = -p ]]
+compdef:136> [[ yppoll = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yppoll = *=* ]]
+compdef:159> cmd=yppoll 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ ypxfr = -N ]]
+compdef:134> [[ ypxfr = -p ]]
+compdef:136> [[ ypxfr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ypxfr = *=* ]]
+compdef:159> cmd=ypxfr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ domainname = -N ]]
+compdef:134> [[ domainname = -p ]]
+compdef:136> [[ domainname = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ domainname = *=* ]]
+compdef:159> cmd=domainname 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yp 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_yum
+compinit:498> _i_name=_yum 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ yum = -[pPkK](n|) ]]
+compinit:509> compdef -na _yum yum
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _yum = *=* ]]
+compdef:79> func=_yum 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _yum
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ yum = -N ]]
+compdef:134> [[ yum = -p ]]
+compdef:136> [[ yum = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ yum = *=* ]]
+compdef:159> cmd=yum 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_yum 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zargs
+compinit:498> _i_name=_zargs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zargs = -[pPkK](n|) ]]
+compinit:509> compdef -na _zargs zargs -value-,-default-,-command-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zargs = *=* ]]
+compdef:79> func=_zargs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zargs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ zargs = -N ]]
+compdef:134> [[ zargs = -p ]]
+compdef:136> [[ zargs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zargs = *=* ]]
+compdef:159> cmd=zargs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zargs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ -value-,-default-,-command- = -N ]]
+compdef:134> [[ -value-,-default-,-command- = -p ]]
+compdef:136> [[ -value-,-default-,-command- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -value-,-default-,-command- = *=* ]]
+compdef:159> cmd=-value-,-default-,-command- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zargs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zattr
+compinit:498> _i_name=_zattr 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zgetattr = -[pPkK](n|) ]]
+compinit:509> compdef -na _zattr zgetattr zsetattr zdelattr zlistattr
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 6  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 5  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zattr = *=* ]]
+compdef:79> func=_zattr 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zattr
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  4  ))
+compdef:132> [[ zgetattr = -N ]]
+compdef:134> [[ zgetattr = -p ]]
+compdef:136> [[ zgetattr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zgetattr = *=* ]]
+compdef:159> cmd=zgetattr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zattr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  3  ))
+compdef:132> [[ zsetattr = -N ]]
+compdef:134> [[ zsetattr = -p ]]
+compdef:136> [[ zsetattr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zsetattr = *=* ]]
+compdef:159> cmd=zsetattr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zattr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ zdelattr = -N ]]
+compdef:134> [[ zdelattr = -p ]]
+compdef:136> [[ zdelattr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zdelattr = *=* ]]
+compdef:159> cmd=zdelattr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zattr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zlistattr = -N ]]
+compdef:134> [[ zlistattr = -p ]]
+compdef:136> [[ zlistattr = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zlistattr = *=* ]]
+compdef:159> cmd=zlistattr 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zattr 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zcalc
+compinit:498> _i_name=_zcalc 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zcalc = -[pPkK](n|) ]]
+compinit:509> compdef -na _zcalc zcalc
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zcalc = *=* ]]
+compdef:79> func=_zcalc 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zcalc
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zcalc = -N ]]
+compdef:134> [[ zcalc = -p ]]
+compdef:136> [[ zcalc = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zcalc = *=* ]]
+compdef:159> cmd=zcalc 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zcalc 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zcalc_line
+compinit:498> _i_name=_zcalc_line 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -zcalc-line- = -[pPkK](n|) ]]
+compinit:509> compdef -na _zcalc_line -zcalc-line-
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zcalc_line = *=* ]]
+compdef:79> func=_zcalc_line 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zcalc_line
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ -zcalc-line- = -N ]]
+compdef:134> [[ -zcalc-line- = -p ]]
+compdef:136> [[ -zcalc-line- = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ -zcalc-line- = *=* ]]
+compdef:159> cmd=-zcalc-line- 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zcalc_line 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zcat
+compinit:498> _i_name=_zcat 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zcat = -[pPkK](n|) ]]
+compinit:509> compdef -na _zcat zcat
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zcat = *=* ]]
+compdef:79> func=_zcat 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zcat
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zcat = -N ]]
+compdef:134> [[ zcat = -p ]]
+compdef:136> [[ zcat = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zcat = *=* ]]
+compdef:159> cmd=zcat 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zcat 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zcompile
+compinit:498> _i_name=_zcompile 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zcompile = -[pPkK](n|) ]]
+compinit:509> compdef -na _zcompile zcompile
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zcompile = *=* ]]
+compdef:79> func=_zcompile 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zcompile
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zcompile = -N ]]
+compdef:134> [[ zcompile = -p ]]
+compdef:136> [[ zcompile = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zcompile = *=* ]]
+compdef:159> cmd=zcompile 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zcompile 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zdump
+compinit:498> _i_name=_zdump 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zdump = -[pPkK](n|) ]]
+compinit:509> compdef -na _zdump zdump
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zdump = *=* ]]
+compdef:79> func=_zdump 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zdump
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zdump = -N ]]
+compdef:134> [[ zdump = -p ]]
+compdef:136> [[ zdump = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zdump = *=* ]]
+compdef:159> cmd=zdump 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zdump 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zed
+compinit:498> _i_name=_zed 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zed = -[pPkK](n|) ]]
+compinit:509> compdef -na _zed zed fned
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 4  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 3  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zed = *=* ]]
+compdef:79> func=_zed 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zed
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  2  ))
+compdef:132> [[ zed = -N ]]
+compdef:134> [[ zed = -p ]]
+compdef:136> [[ zed = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zed = *=* ]]
+compdef:159> cmd=zed 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zed 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ fned = -N ]]
+compdef:134> [[ fned = -p ]]
+compdef:136> [[ fned = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ fned = *=* ]]
+compdef:159> cmd=fned 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zed 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zfs
+compinit:498> _i_name=_zfs 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zfs = -[pPkK](n|) ]]
+compinit:509> compdef -na _zfs zfs
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zfs = *=* ]]
+compdef:79> func=_zfs 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zfs
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zfs = -N ]]
+compdef:134> [[ zfs = -p ]]
+compdef:136> [[ zfs = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zfs = *=* ]]
+compdef:159> cmd=zfs 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zfs 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zfs_dataset
+compinit:498> _i_name=_zfs_dataset 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _zfs_dataset
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zfs_keysource_props
+compinit:498> _i_name=_zfs_keysource_props 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _zfs_keysource_props
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zfs_pool
+compinit:498> _i_name=_zfs_pool 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _zfs_pool
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zftp
+compinit:498> _i_name=_zftp 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ -p = -[pPkK](n|) ]]
+compinit:507> compdef -pna _zftp 'zf*'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case p (a)
+compdef:15> case p (n)
+compdef:15> case p ([pPkK])
+compdef:18> [[ -n '' ]]
+compdef:24> [[ p = p ]]
+compdef:25> type=pattern 
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zftp = *=* ]]
+compdef:79> func=_zftp 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zftp
+compdef:81> shift
+compdef:83> case pattern (widgetkey)
+compdef:83> case pattern (key)
+compdef:83> case pattern (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'zf*' = -N ]]
+compdef:134> [[ 'zf*' = -p ]]
+compdef:136> [[ 'zf*' = -P ]]
+compdef:139> case pattern (pattern)
+compdef:141> [[ 'zf*' = (#b)(*)=(*) ]]
+compdef:144> _patcomps[$1]=_zftp 
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zip
+compinit:498> _i_name=_zip 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zip = -[pPkK](n|) ]]
+compinit:509> compdef -na _zip zip unzip zipinfo
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zip = *=* ]]
+compdef:79> func=_zip 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zip
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ zip = -N ]]
+compdef:134> [[ zip = -p ]]
+compdef:136> [[ zip = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zip = *=* ]]
+compdef:159> cmd=zip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ unzip = -N ]]
+compdef:134> [[ unzip = -p ]]
+compdef:136> [[ unzip = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ unzip = *=* ]]
+compdef:159> cmd=unzip 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zipinfo = -N ]]
+compdef:134> [[ zipinfo = -p ]]
+compdef:136> [[ zipinfo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zipinfo = *=* ]]
+compdef:159> cmd=zipinfo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zip 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zle
+compinit:498> _i_name=_zle 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zle = -[pPkK](n|) ]]
+compinit:509> compdef -na _zle zle
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zle = *=* ]]
+compdef:79> func=_zle 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zle
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zle = -N ]]
+compdef:134> [[ zle = -p ]]
+compdef:136> [[ zle = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zle = *=* ]]
+compdef:159> cmd=zle 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zle 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zlogin
+compinit:498> _i_name=_zlogin 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zlogin = -[pPkK](n|) ]]
+compinit:509> compdef -na _zlogin zlogin
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zlogin = *=* ]]
+compdef:79> func=_zlogin 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zlogin
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zlogin = -N ]]
+compdef:134> [[ zlogin = -p ]]
+compdef:136> [[ zlogin = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zlogin = *=* ]]
+compdef:159> cmd=zlogin 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zlogin 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zmodload
+compinit:498> _i_name=_zmodload 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zmodload = -[pPkK](n|) ]]
+compinit:509> compdef -na _zmodload zmodload
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zmodload = *=* ]]
+compdef:79> func=_zmodload 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zmodload
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zmodload = -N ]]
+compdef:134> [[ zmodload = -p ]]
+compdef:136> [[ zmodload = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zmodload = *=* ]]
+compdef:159> cmd=zmodload 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zmodload 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zmv
+compinit:498> _i_name=_zmv 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zmv = -[pPkK](n|) ]]
+compinit:509> compdef -na _zmv zmv zln zcp
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 5  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 4  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zmv = *=* ]]
+compdef:79> func=_zmv 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zmv
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  3  ))
+compdef:132> [[ zmv = -N ]]
+compdef:134> [[ zmv = -p ]]
+compdef:136> [[ zmv = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zmv = *=* ]]
+compdef:159> cmd=zmv 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zmv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  2  ))
+compdef:132> [[ zln = -N ]]
+compdef:134> [[ zln = -p ]]
+compdef:136> [[ zln = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zln = *=* ]]
+compdef:159> cmd=zln 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zmv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  1  ))
+compdef:132> [[ zcp = -N ]]
+compdef:134> [[ zcp = -p ]]
+compdef:136> [[ zcp = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zcp = *=* ]]
+compdef:159> cmd=zcp 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zmv 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zoneadm
+compinit:498> _i_name=_zoneadm 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zoneadm = -[pPkK](n|) ]]
+compinit:509> compdef -na _zoneadm zoneadm
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zoneadm = *=* ]]
+compdef:79> func=_zoneadm 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zoneadm
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zoneadm = -N ]]
+compdef:134> [[ zoneadm = -p ]]
+compdef:136> [[ zoneadm = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zoneadm = *=* ]]
+compdef:159> cmd=zoneadm 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zoneadm 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zones
+compinit:498> _i_name=_zones 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#autoload' 
+compinit:503> shift _i_line
+compinit:504> case #autoload (\#compdef)
+compinit:504> case #autoload (\#autoload)
+compinit:513> autoload -Uz _zones
+compinit:514> [[ '' != \ # ]]
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zpool
+compinit:498> _i_name=_zpool 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zpool = -[pPkK](n|) ]]
+compinit:509> compdef -na _zpool zpool
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zpool = *=* ]]
+compdef:79> func=_zpool 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zpool
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zpool = -N ]]
+compdef:134> [[ zpool = -p ]]
+compdef:136> [[ zpool = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zpool = *=* ]]
+compdef:159> cmd=zpool 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zpool 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zpty
+compinit:498> _i_name=_zpty 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zpty = -[pPkK](n|) ]]
+compinit:509> compdef -na _zpty zpty
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zpty = *=* ]]
+compdef:79> func=_zpty 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zpty
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zpty = -N ]]
+compdef:134> [[ zpty = -p ]]
+compdef:136> [[ zpty = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zpty = *=* ]]
+compdef:159> cmd=zpty 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zpty 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zsh
+compinit:498> _i_name=_zsh 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zsh = -[pPkK](n|) ]]
+compinit:509> compdef -na _zsh zsh
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zsh = *=* ]]
+compdef:79> func=_zsh 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zsh
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zsh = -N ]]
+compdef:134> [[ zsh = -p ]]
+compdef:136> [[ zsh = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zsh = *=* ]]
+compdef:159> cmd=zsh 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zsh 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zsh-mime-handler
+compinit:498> _i_name=_zsh-mime-handler 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zsh-mime-handler = -[pPkK](n|) ]]
+compinit:509> compdef -na _zsh-mime-handler zsh-mime-handler
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zsh-mime-handler = *=* ]]
+compdef:79> func=_zsh-mime-handler 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zsh-mime-handler
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zsh-mime-handler = -N ]]
+compdef:134> [[ zsh-mime-handler = -p ]]
+compdef:136> [[ zsh-mime-handler = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zsh-mime-handler = *=* ]]
+compdef:159> cmd=zsh-mime-handler 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zsh-mime-handler 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zsocket
+compinit:498> _i_name=_zsocket 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zsocket = -[pPkK](n|) ]]
+compinit:509> compdef -na _zsocket zsocket
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zsocket = *=* ]]
+compdef:79> func=_zsocket 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zsocket
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zsocket = -N ]]
+compdef:134> [[ zsocket = -p ]]
+compdef:136> [[ zsocket = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zsocket = *=* ]]
+compdef:159> cmd=zsocket 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zsocket 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zstyle
+compinit:498> _i_name=_zstyle 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zstyle = -[pPkK](n|) ]]
+compinit:509> compdef -na _zstyle zstyle
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zstyle = *=* ]]
+compdef:79> func=_zstyle 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zstyle
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zstyle = -N ]]
+compdef:134> [[ zstyle = -p ]]
+compdef:136> [[ zstyle = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zstyle = *=* ]]
+compdef:159> cmd=zstyle 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zstyle 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_ztodo
+compinit:498> _i_name=_ztodo 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ ztodo = -[pPkK](n|) ]]
+compinit:509> compdef -na _ztodo ztodo
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _ztodo = *=* ]]
+compdef:79> func=_ztodo 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _ztodo
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ ztodo = -N ]]
+compdef:134> [[ ztodo = -p ]]
+compdef:136> [[ ztodo = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ ztodo = *=* ]]
+compdef:159> cmd=ztodo 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_ztodo 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:497> _i_file=/usr/share/zsh/5.4.1/functions/_zypper
+compinit:498> _i_name=_zypper 
+compinit:499> ((  0 + 0  ))
+compinit:500> _i_test[$_i_name]=yes 
+compinit:501> IFS=$' \t' +compinit:501> read -rA _i_line
+compinit:502> _i_tag='#compdef' 
+compinit:503> shift _i_line
+compinit:504> case #compdef (\#compdef)
+compinit:506> [[ zypper = -[pPkK](n|) ]]
+compinit:509> compdef -na _zypper zypper
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 3  ))
+compdef:14> getopts anpPkKde opt
+compdef:15> case n (a)
+compdef:15> case n (n)
+compdef:17> new=yes 
+compdef:14> getopts anpPkKde opt
+compdef:15> case a (a)
+compdef:16> autol=yes 
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _zypper = *=* ]]
+compdef:79> func=_zypper 
+compdef:80> [[ -n yes ]]
+compdef:80> autoload -Uz _zypper
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ zypper = -N ]]
+compdef:134> [[ zypper = -p ]]
+compdef:136> [[ zypper = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ zypper = *=* ]]
+compdef:159> cmd=zypper 
+compdef:160> svc='' 
+compdef:162> [[ -z yes || -z '' ]]
+compdef:163> _comps[$cmd]=_zypper 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+compinit:522> [[ 1 = 1 ]]
+compinit:523> compdump
+compdump:16> emulate -L zsh
+compdump:17> setopt extendedglob noshglob
+compdump:19> typeset _d_file _d_f _d_bks _d_line _d_als _d_files _d_name _d_tmp
+compdump:21> _d_file=/root/.zcompdump-localhost-5.4.1.localhost.localdomain.3545 
+compdump:22> [[ /root/.zcompdump-localhost-5.4.1.localhost.localdomain.3545 = //* ]]
+compdump:24> [[ -w /root ]]
+compdump:26> _d_files=( /usr/share/zsh/site-functions/_bootctl /usr/share/zsh/site-functions/_busctl /usr/share/zsh/site-functions/_coredumpctl /usr/share/zsh/site-functions/_curl /usr/share/zsh/site-functions/_hostnamectl /usr/share/zsh/site-functions/_journalctl /usr/share/zsh/site-functions/_kernel-install /usr/share/zsh/site-functions/_localectl /usr/share/zsh/site-functions/_loginctl /usr/share/zsh/site-functions/_machinectl /usr/share/zsh/site-functions/_networkctl /usr/share/zsh/site-functions/_pulseaudio /usr/share/zsh/site-functions/_sd_hosts_or_user_at_host /usr/share/zsh/site-functions/_sd_machines /usr/share/zsh/site-functions/_sd_outputmodes /usr/share/zsh/site-functions/_sd_unit_files /usr/share/zsh/site-functions/_systemctl /usr/share/zsh/site-functions/_systemd /usr/share/zsh/site-functions/_systemd-analyze /usr/share/zsh/site-functions/_systemd-delta /usr/share/zsh/site-functions/_systemd-inhibit /usr/share/zsh/site-functions/_systemd-nspawn /usr/share/zsh/site-functions/_systemd-resolve /usr/share/zsh/site-functions/_systemd-run /usr/share/zsh/site-functions/_systemd-tmpfiles /usr/share/zsh/site-functions/_the_silver_searcher /usr/share/zsh/site-functions/_timedatectl /usr/share/zsh/site-functions/_udevadm /usr/share/zsh/5.4.1/functions/_a2ps /usr/share/zsh/5.4.1/functions/_a2utils /usr/share/zsh/5.4.1/functions/_aap /usr/share/zsh/5.4.1/functions/_absolute_command_paths /usr/share/zsh/5.4.1/functions/_acpi /usr/share/zsh/5.4.1/functions/_acpitool /usr/share/zsh/5.4.1/functions/_acroread /usr/share/zsh/5.4.1/functions/_adb /usr/share/zsh/5.4.1/functions/_add-zle-hook-widget /usr/share/zsh/5.4.1/functions/_add-zsh-hook /usr/share/zsh/5.4.1/functions/_alias /usr/share/zsh/5.4.1/functions/_aliases /usr/share/zsh/5.4.1/functions/_all_labels /usr/share/zsh/5.4.1/functions/_all_matches /usr/share/zsh/5.4.1/functions/_alternative /usr/share/zsh/5.4.1/functions/_analyseplugin /usr/share/zsh/5.4.1/functions/_ant /usr/share/zsh/5.4.1/functions/_antiword /usr/share/zsh/5.4.1/functions/_apachectl /usr/share/zsh/5.4.1/functions/_apm /usr/share/zsh/5.4.1/functions/_approximate /usr/share/zsh/5.4.1/functions/_apt /usr/share/zsh/5.4.1/functions/_apt-file /usr/share/zsh/5.4.1/functions/_aptitude /usr/share/zsh/5.4.1/functions/_apt-move /usr/share/zsh/5.4.1/functions/_apt-show-versions /usr/share/zsh/5.4.1/functions/_arch_archives /usr/share/zsh/5.4.1/functions/_arch_namespace /usr/share/zsh/5.4.1/functions/_arg_compile /usr/share/zsh/5.4.1/functions/_arguments /usr/share/zsh/5.4.1/functions/_arp /usr/share/zsh/5.4.1/functions/_arping /usr/share/zsh/5.4.1/functions/_arrays /usr/share/zsh/5.4.1/functions/_assign /usr/share/zsh/5.4.1/functions/_at /usr/share/zsh/5.4.1/functions/_attr /usr/share/zsh/5.4.1/functions/_augeas /usr/share/zsh/5.4.1/functions/_auto-apt /usr/share/zsh/5.4.1/functions/_autocd /usr/share/zsh/5.4.1/functions/_awk /usr/share/zsh/5.4.1/functions/_axi-cache /usr/share/zsh/5.4.1/functions/_basename /usr/share/zsh/5.4.1/functions/_bash_completions /usr/share/zsh/5.4.1/functions/_baudrates /usr/share/zsh/5.4.1/functions/_baz /usr/share/zsh/5.4.1/functions/_beadm /usr/share/zsh/5.4.1/functions/_beep /usr/share/zsh/5.4.1/functions/_be_name /usr/share/zsh/5.4.1/functions/_bibtex /usr/share/zsh/5.4.1/functions/_bind_addresses /usr/share/zsh/5.4.1/functions/_bindkey /usr/share/zsh/5.4.1/functions/_bison /usr/share/zsh/5.4.1/functions/_bittorrent /usr/share/zsh/5.4.1/functions/_bogofilter /usr/share/zsh/5.4.1/functions/_bpython /usr/share/zsh/5.4.1/functions/_brace_parameter /usr/share/zsh/5.4.1/functions/_brctl /usr/share/zsh/5.4.1/functions/_bsdconfig /usr/share/zsh/5.4.1/functions/_bsdinstall /usr/share/zsh/5.4.1/functions/_bsd_pkg /usr/share/zsh/5.4.1/functions/_btrfs /usr/share/zsh/5.4.1/functions/_bts /usr/share/zsh/5.4.1/functions/_bug /usr/share/zsh/5.4.1/functions/_builtin /usr/share/zsh/5.4.1/functions/_bzip2 /usr/share/zsh/5.4.1/functions/_bzr /usr/share/zsh/5.4.1/functions/_cabal /usr/share/zsh/5.4.1/functions/_cache_invalid /usr/share/zsh/5.4.1/functions/_cal /usr/share/zsh/5.4.1/functions/_calendar /usr/share/zsh/5.4.1/functions/_call_function /usr/share/zsh/5.4.1/functions/_call_program /usr/share/zsh/5.4.1/functions/_canonical_paths /usr/share/zsh/5.4.1/functions/_cat /usr/share/zsh/5.4.1/functions/_ccal /usr/share/zsh/5.4.1/functions/_cd /usr/share/zsh/5.4.1/functions/_cdbs-edit-patch /usr/share/zsh/5.4.1/functions/_cdcd /usr/share/zsh/5.4.1/functions/_cdr /usr/share/zsh/5.4.1/functions/_cdrdao /usr/share/zsh/5.4.1/functions/_cdrecord /usr/share/zsh/5.4.1/functions/_chflags /usr/share/zsh/5.4.1/functions/_chkconfig /usr/share/zsh/5.4.1/functions/_chmod /usr/share/zsh/5.4.1/functions/_chown /usr/share/zsh/5.4.1/functions/_chrt /usr/share/zsh/5.4.1/functions/_chsh /usr/share/zsh/5.4.1/functions/_clay /usr/share/zsh/5.4.1/functions/_cmdambivalent /usr/share/zsh/5.4.1/functions/_cmdstring /usr/share/zsh/5.4.1/functions/_cmp /usr/share/zsh/5.4.1/functions/_combination /usr/share/zsh/5.4.1/functions/_comm /usr/share/zsh/5.4.1/functions/_command /usr/share/zsh/5.4.1/functions/_command_names /usr/share/zsh/5.4.1/functions/_compadd /usr/share/zsh/5.4.1/functions/_compdef /usr/share/zsh/5.4.1/functions/_complete /usr/share/zsh/5.4.1/functions/_complete_debug /usr/share/zsh/5.4.1/functions/_complete_help /usr/share/zsh/5.4.1/functions/_complete_help_generic /usr/share/zsh/5.4.1/functions/_completers /usr/share/zsh/5.4.1/functions/_complete_tag /usr/share/zsh/5.4.1/functions/_comp_locale /usr/share/zsh/5.4.1/functions/_compress /usr/share/zsh/5.4.1/functions/_condition /usr/share/zsh/5.4.1/functions/_configure /usr/share/zsh/5.4.1/functions/_coreadm /usr/share/zsh/5.4.1/functions/_correct /usr/share/zsh/5.4.1/functions/_correct_filename /usr/share/zsh/5.4.1/functions/_correct_word /usr/share/zsh/5.4.1/functions/_cowsay /usr/share/zsh/5.4.1/functions/_cp /usr/share/zsh/5.4.1/functions/_cpio /usr/share/zsh/5.4.1/functions/_cplay /usr/share/zsh/5.4.1/functions/_cpupower /usr/share/zsh/5.4.1/functions/_cryptsetup /usr/share/zsh/5.4.1/functions/_cscope /usr/share/zsh/5.4.1/functions/_cssh /usr/share/zsh/5.4.1/functions/_csup /usr/share/zsh/5.4.1/functions/_ctags_tags /usr/share/zsh/5.4.1/functions/_cu /usr/share/zsh/5.4.1/functions/_curl /usr/share/zsh/5.4.1/functions/_cut /usr/share/zsh/5.4.1/functions/_cvs /usr/share/zsh/5.4.1/functions/_cvsup /usr/share/zsh/5.4.1/functions/_cygcheck /usr/share/zsh/5.4.1/functions/_cygpath /usr/share/zsh/5.4.1/functions/_cygrunsrv /usr/share/zsh/5.4.1/functions/_cygserver /usr/share/zsh/5.4.1/functions/_cygstart /usr/share/zsh/5.4.1/functions/_dak /usr/share/zsh/5.4.1/functions/_darcs /usr/share/zsh/5.4.1/functions/_date /usr/share/zsh/5.4.1/functions/_date_formats /usr/share/zsh/5.4.1/functions/_dates /usr/share/zsh/5.4.1/functions/_dbus /usr/share/zsh/5.4.1/functions/_dchroot /usr/share/zsh/5.4.1/functions/_dchroot-dsa /usr/share/zsh/5.4.1/functions/_dcop /usr/share/zsh/5.4.1/functions/_dcut /usr/share/zsh/5.4.1/functions/_dd /usr/share/zsh/5.4.1/functions/_deb_architectures /usr/share/zsh/5.4.1/functions/_debbugs_bugnumber /usr/share/zsh/5.4.1/functions/_debchange /usr/share/zsh/5.4.1/functions/_debcheckout /usr/share/zsh/5.4.1/functions/_deb_codenames /usr/share/zsh/5.4.1/functions/_debdiff /usr/share/zsh/5.4.1/functions/_debfoster /usr/share/zsh/5.4.1/functions/_deb_packages /usr/share/zsh/5.4.1/functions/_debsign /usr/share/zsh/5.4.1/functions/_default /usr/share/zsh/5.4.1/functions/_defaults /usr/share/zsh/5.4.1/functions/_delimiters /usr/share/zsh/5.4.1/functions/_describe /usr/share/zsh/5.4.1/functions/_description /usr/share/zsh/5.4.1/functions/_devtodo /usr/share/zsh/5.4.1/functions/_df /usr/share/zsh/5.4.1/functions/_dhclient /usr/share/zsh/5.4.1/functions/_dhcpinfo /usr/share/zsh/5.4.1/functions/_dict /usr/share/zsh/5.4.1/functions/_dict_words /usr/share/zsh/5.4.1/functions/_diff /usr/share/zsh/5.4.1/functions/_diff_options /usr/share/zsh/5.4.1/functions/_diffstat /usr/share/zsh/5.4.1/functions/_dig /usr/share/zsh/5.4.1/functions/_directories /usr/share/zsh/5.4.1/functions/_directory_stack /usr/share/zsh/5.4.1/functions/_dir_list /usr/share/zsh/5.4.1/functions/_dirs /usr/share/zsh/5.4.1/functions/_disable /usr/share/zsh/5.4.1/functions/_dispatch /usr/share/zsh/5.4.1/functions/_django /usr/share/zsh/5.4.1/functions/_dladm /usr/share/zsh/5.4.1/functions/_dlocate /usr/share/zsh/5.4.1/functions/_dmesg /usr/share/zsh/5.4.1/functions/_dmidecode /usr/share/zsh/5.4.1/functions/_dnf /usr/share/zsh/5.4.1/functions/_doas /usr/share/zsh/5.4.1/functions/_domains /usr/share/zsh/5.4.1/functions/_dpatch-edit-patch /usr/share/zsh/5.4.1/functions/_dpkg /usr/share/zsh/5.4.1/functions/_dpkg-buildpackage /usr/share/zsh/5.4.1/functions/_dpkg-cross /usr/share/zsh/5.4.1/functions/_dpkg-repack /usr/share/zsh/5.4.1/functions/_dpkg_source /usr/share/zsh/5.4.1/functions/_dput /usr/share/zsh/5.4.1/functions/_dsh /usr/share/zsh/5.4.1/functions/_dtrace /usr/share/zsh/5.4.1/functions/_du /usr/share/zsh/5.4.1/functions/_dumpadm /usr/share/zsh/5.4.1/functions/_dumper /usr/share/zsh/5.4.1/functions/_dupload /usr/share/zsh/5.4.1/functions/_dvi /usr/share/zsh/5.4.1/functions/_dynamic_directory_name /usr/share/zsh/5.4.1/functions/_ecasound /usr/share/zsh/5.4.1/functions/_echotc /usr/share/zsh/5.4.1/functions/_echoti /usr/share/zsh/5.4.1/functions/_elfdump /usr/share/zsh/5.4.1/functions/_elinks /usr/share/zsh/5.4.1/functions/_elm /usr/share/zsh/5.4.1/functions/_email_addresses /usr/share/zsh/5.4.1/functions/_emulate /usr/share/zsh/5.4.1/functions/_enable /usr/share/zsh/5.4.1/functions/_enscript /usr/share/zsh/5.4.1/functions/_entr /usr/share/zsh/5.4.1/functions/_env /usr/share/zsh/5.4.1/functions/_equal /usr/share/zsh/5.4.1/functions/_espeak /usr/share/zsh/5.4.1/functions/_etags /usr/share/zsh/5.4.1/functions/_ethtool /usr/share/zsh/5.4.1/functions/_evince /usr/share/zsh/5.4.1/functions/_expand /usr/share/zsh/5.4.1/functions/_expand_alias /usr/share/zsh/5.4.1/functions/_expand_word /usr/share/zsh/5.4.1/functions/_extensions /usr/share/zsh/5.4.1/functions/_external_pwds /usr/share/zsh/5.4.1/functions/_fakeroot /usr/share/zsh/5.4.1/functions/_fc /usr/share/zsh/5.4.1/functions/_feh /usr/share/zsh/5.4.1/functions/_fetch /usr/share/zsh/5.4.1/functions/_fetchmail /usr/share/zsh/5.4.1/functions/_ffmpeg /usr/share/zsh/5.4.1/functions/_figlet /usr/share/zsh/5.4.1/functions/_file_descriptors /usr/share/zsh/5.4.1/functions/_files /usr/share/zsh/5.4.1/functions/_file_systems /usr/share/zsh/5.4.1/functions/_find /usr/share/zsh/5.4.1/functions/_find_net_interfaces /usr/share/zsh/5.4.1/functions/_finger /usr/share/zsh/5.4.1/functions/_fink /usr/share/zsh/5.4.1/functions/_first /usr/share/zsh/5.4.1/functions/_flasher /usr/share/zsh/5.4.1/functions/_flex /usr/share/zsh/5.4.1/functions/_floppy /usr/share/zsh/5.4.1/functions/_flowadm /usr/share/zsh/5.4.1/functions/_fmadm /usr/share/zsh/5.4.1/functions/_fmt /usr/share/zsh/5.4.1/functions/_fortune /usr/share/zsh/5.4.1/functions/_freebsd-update /usr/share/zsh/5.4.1/functions/_fsh /usr/share/zsh/5.4.1/functions/_fstat /usr/share/zsh/5.4.1/functions/_functions /usr/share/zsh/5.4.1/functions/_fuse_arguments /usr/share/zsh/5.4.1/functions/_fuser /usr/share/zsh/5.4.1/functions/_fusermount /usr/share/zsh/5.4.1/functions/_fuse_values /usr/share/zsh/5.4.1/functions/_fw_update /usr/share/zsh/5.4.1/functions/_gcc /usr/share/zsh/5.4.1/functions/_gcore /usr/share/zsh/5.4.1/functions/_gdb /usr/share/zsh/5.4.1/functions/_generic /usr/share/zsh/5.4.1/functions/_genisoimage /usr/share/zsh/5.4.1/functions/_getclip /usr/share/zsh/5.4.1/functions/_getconf /usr/share/zsh/5.4.1/functions/_getent /usr/share/zsh/5.4.1/functions/_getfacl /usr/share/zsh/5.4.1/functions/_getmail /usr/share/zsh/5.4.1/functions/_git /usr/share/zsh/5.4.1/functions/_git-buildpackage /usr/share/zsh/5.4.1/functions/_global /usr/share/zsh/5.4.1/functions/_global_tags /usr/share/zsh/5.4.1/functions/_globflags /usr/share/zsh/5.4.1/functions/_globqual_delims /usr/share/zsh/5.4.1/functions/_globquals /usr/share/zsh/5.4.1/functions/_gnome-gv /usr/share/zsh/5.4.1/functions/_gnu_generic /usr/share/zsh/5.4.1/functions/_gnupod /usr/share/zsh/5.4.1/functions/_gnutls /usr/share/zsh/5.4.1/functions/_go /usr/share/zsh/5.4.1/functions/_gpasswd /usr/share/zsh/5.4.1/functions/_gpg /usr/share/zsh/5.4.1/functions/_gphoto2 /usr/share/zsh/5.4.1/functions/_gprof /usr/share/zsh/5.4.1/functions/_gqview /usr/share/zsh/5.4.1/functions/_gradle /usr/share/zsh/5.4.1/functions/_graphicsmagick /usr/share/zsh/5.4.1/functions/_grep /usr/share/zsh/5.4.1/functions/_grep-excuses /usr/share/zsh/5.4.1/functions/_groff /usr/share/zsh/5.4.1/functions/_groups /usr/share/zsh/5.4.1/functions/_growisofs /usr/share/zsh/5.4.1/functions/_gs /usr/share/zsh/5.4.1/functions/_gsettings /usr/share/zsh/5.4.1/functions/_gstat /usr/share/zsh/5.4.1/functions/_guard /usr/share/zsh/5.4.1/functions/_guilt /usr/share/zsh/5.4.1/functions/_gv /usr/share/zsh/5.4.1/functions/_gzip /usr/share/zsh/5.4.1/functions/_hash /usr/share/zsh/5.4.1/functions/_have_glob_qual /usr/share/zsh/5.4.1/functions/_hdiutil /usr/share/zsh/5.4.1/functions/_head /usr/share/zsh/5.4.1/functions/_hg /usr/share/zsh/5.4.1/functions/_history /usr/share/zsh/5.4.1/functions/_history_complete_word /usr/share/zsh/5.4.1/functions/_history_modifiers /usr/share/zsh/5.4.1/functions/_hosts /usr/share/zsh/5.4.1/functions/_htop /usr/share/zsh/5.4.1/functions/_hwinfo /usr/share/zsh/5.4.1/functions/_iconv /usr/share/zsh/5.4.1/functions/_iconvconfig /usr/share/zsh/5.4.1/functions/_id /usr/share/zsh/5.4.1/functions/_ifconfig /usr/share/zsh/5.4.1/functions/_iftop /usr/share/zsh/5.4.1/functions/_ignored /usr/share/zsh/5.4.1/functions/_imagemagick /usr/share/zsh/5.4.1/functions/_inetadm /usr/share/zsh/5.4.1/functions/_initctl /usr/share/zsh/5.4.1/functions/_init_d /usr/share/zsh/5.4.1/functions/_in_vared /usr/share/zsh/5.4.1/functions/_invoke-rc.d /usr/share/zsh/5.4.1/functions/_ionice /usr/share/zsh/5.4.1/functions/_iostat /usr/share/zsh/5.4.1/functions/_ip /usr/share/zsh/5.4.1/functions/_ipadm /usr/share/zsh/5.4.1/functions/_ipset /usr/share/zsh/5.4.1/functions/_iptables /usr/share/zsh/5.4.1/functions/_irssi /usr/share/zsh/5.4.1/functions/_ispell /usr/share/zsh/5.4.1/functions/_iwconfig /usr/share/zsh/5.4.1/functions/_jails /usr/share/zsh/5.4.1/functions/_java /usr/share/zsh/5.4.1/functions/_java_class /usr/share/zsh/5.4.1/functions/_jexec /usr/share/zsh/5.4.1/functions/_jls /usr/share/zsh/5.4.1/functions/_jobs /usr/share/zsh/5.4.1/functions/_jobs_bg /usr/share/zsh/5.4.1/functions/_jobs_builtin /usr/share/zsh/5.4.1/functions/_jobs_fg /usr/share/zsh/5.4.1/functions/_joe /usr/share/zsh/5.4.1/functions/_join /usr/share/zsh/5.4.1/functions/_jot /usr/share/zsh/5.4.1/functions/_kfmclient /usr/share/zsh/5.4.1/functions/_kill /usr/share/zsh/5.4.1/functions/_killall /usr/share/zsh/5.4.1/functions/_kld /usr/share/zsh/5.4.1/functions/_knock /usr/share/zsh/5.4.1/functions/_kpartx /usr/share/zsh/5.4.1/functions/_kvno /usr/share/zsh/5.4.1/functions/_last /usr/share/zsh/5.4.1/functions/_ldd /usr/share/zsh/5.4.1/functions/_ld_debug /usr/share/zsh/5.4.1/functions/_less /usr/share/zsh/5.4.1/functions/_lha /usr/share/zsh/5.4.1/functions/_libvirt /usr/share/zsh/5.4.1/functions/_lighttpd /usr/share/zsh/5.4.1/functions/_limit /usr/share/zsh/5.4.1/functions/_limits /usr/share/zsh/5.4.1/functions/_links /usr/share/zsh/5.4.1/functions/_lintian /usr/share/zsh/5.4.1/functions/_list /usr/share/zsh/5.4.1/functions/_list_files /usr/share/zsh/5.4.1/functions/_lldb /usr/share/zsh/5.4.1/functions/_ln /usr/share/zsh/5.4.1/functions/_loadkeys /usr/share/zsh/5.4.1/functions/_locale /usr/share/zsh/5.4.1/functions/_localedef /usr/share/zsh/5.4.1/functions/_locales /usr/share/zsh/5.4.1/functions/_locate /usr/share/zsh/5.4.1/functions/_logical_volumes /usr/share/zsh/5.4.1/functions/_look /usr/share/zsh/5.4.1/functions/_losetup /usr/share/zsh/5.4.1/functions/_lp /usr/share/zsh/5.4.1/functions/_ls /usr/share/zsh/5.4.1/functions/_lsblk /usr/share/zsh/5.4.1/functions/_lscfg /usr/share/zsh/5.4.1/functions/_lsdev /usr/share/zsh/5.4.1/functions/_lslv /usr/share/zsh/5.4.1/functions/_lsof /usr/share/zsh/5.4.1/functions/_lspv /usr/share/zsh/5.4.1/functions/_lsusb /usr/share/zsh/5.4.1/functions/_lsvg /usr/share/zsh/5.4.1/functions/_ltrace /usr/share/zsh/5.4.1/functions/_lynx /usr/share/zsh/5.4.1/functions/_lzop /usr/share/zsh/5.4.1/functions/_mac_applications /usr/share/zsh/5.4.1/functions/_mac_files_for_application /usr/share/zsh/5.4.1/functions/_madison /usr/share/zsh/5.4.1/functions/_mail /usr/share/zsh/5.4.1/functions/_mailboxes /usr/share/zsh/5.4.1/functions/_main_complete /usr/share/zsh/5.4.1/functions/_make /usr/share/zsh/5.4.1/functions/_make-kpkg /usr/share/zsh/5.4.1/functions/_man /usr/share/zsh/5.4.1/functions/_match /usr/share/zsh/5.4.1/functions/_math /usr/share/zsh/5.4.1/functions/_math_params /usr/share/zsh/5.4.1/functions/_matlab /usr/share/zsh/5.4.1/functions/_md5sum /usr/share/zsh/5.4.1/functions/_mdadm /usr/share/zsh/5.4.1/functions/_members /usr/share/zsh/5.4.1/functions/_mencal /usr/share/zsh/5.4.1/functions/_menu /usr/share/zsh/5.4.1/functions/_mere /usr/share/zsh/5.4.1/functions/_mergechanges /usr/share/zsh/5.4.1/functions/_message /usr/share/zsh/5.4.1/functions/_metaflac /usr/share/zsh/5.4.1/functions/_mh /usr/share/zsh/5.4.1/functions/_mii-tool /usr/share/zsh/5.4.1/functions/_mime_types /usr/share/zsh/5.4.1/functions/_mixerctl /usr/share/zsh/5.4.1/functions/_mkdir /usr/share/zsh/5.4.1/functions/_mkshortcut /usr/share/zsh/5.4.1/functions/_mkzsh /usr/share/zsh/5.4.1/functions/_module /usr/share/zsh/5.4.1/functions/_module-assistant /usr/share/zsh/5.4.1/functions/_module_math_func /usr/share/zsh/5.4.1/functions/_modutils /usr/share/zsh/5.4.1/functions/_mondo /usr/share/zsh/5.4.1/functions/_monotone /usr/share/zsh/5.4.1/functions/_moosic /usr/share/zsh/5.4.1/functions/_mosh /usr/share/zsh/5.4.1/functions/_most_recent_file /usr/share/zsh/5.4.1/functions/_mount /usr/share/zsh/5.4.1/functions/_mozilla /usr/share/zsh/5.4.1/functions/_mpc /usr/share/zsh/5.4.1/functions/_mplayer /usr/share/zsh/5.4.1/functions/_mt /usr/share/zsh/5.4.1/functions/_mtools /usr/share/zsh/5.4.1/functions/_mtr /usr/share/zsh/5.4.1/functions/_multi_parts /usr/share/zsh/5.4.1/functions/_mutt /usr/share/zsh/5.4.1/functions/_my_accounts /usr/share/zsh/5.4.1/functions/_mysqldiff /usr/share/zsh/5.4.1/functions/_mysql_utils /usr/share/zsh/5.4.1/functions/_nautilus /usr/share/zsh/5.4.1/functions/_ncftp /usr/share/zsh/5.4.1/functions/_nedit /usr/share/zsh/5.4.1/functions/_netcat /usr/share/zsh/5.4.1/functions/_net_interfaces /usr/share/zsh/5.4.1/functions/_netscape /usr/share/zsh/5.4.1/functions/_netstat /usr/share/zsh/5.4.1/functions/_newsgroups /usr/share/zsh/5.4.1/functions/_next_label /usr/share/zsh/5.4.1/functions/_next_tags /usr/share/zsh/5.4.1/functions/_nice /usr/share/zsh/5.4.1/functions/_nkf /usr/share/zsh/5.4.1/functions/_nl /usr/share/zsh/5.4.1/functions/_nm /usr/share/zsh/5.4.1/functions/_nmap /usr/share/zsh/5.4.1/functions/_nmcli /usr/share/zsh/5.4.1/functions/_normal /usr/share/zsh/5.4.1/functions/_nothing /usr/share/zsh/5.4.1/functions/_notmuch /usr/share/zsh/5.4.1/functions/_npm /usr/share/zsh/5.4.1/functions/_nslookup /usr/share/zsh/5.4.1/functions/_objdump /usr/share/zsh/5.4.1/functions/_object_classes /usr/share/zsh/5.4.1/functions/_object_files /usr/share/zsh/5.4.1/functions/_od /usr/share/zsh/5.4.1/functions/_okular /usr/share/zsh/5.4.1/functions/_oldlist /usr/share/zsh/5.4.1/functions/_open /usr/share/zsh/5.4.1/functions/_openstack /usr/share/zsh/5.4.1/functions/_options /usr/share/zsh/5.4.1/functions/_options_set /usr/share/zsh/5.4.1/functions/_options_unset /usr/share/zsh/5.4.1/functions/_osc /usr/share/zsh/5.4.1/functions/_other_accounts /usr/share/zsh/5.4.1/functions/_pack /usr/share/zsh/5.4.1/functions/_parameter /usr/share/zsh/5.4.1/functions/_parameters /usr/share/zsh/5.4.1/functions/_paste /usr/share/zsh/5.4.1/functions/_patch /usr/share/zsh/5.4.1/functions/_patchutils /usr/share/zsh/5.4.1/functions/_path_commands /usr/share/zsh/5.4.1/functions/_path_files /usr/share/zsh/5.4.1/functions/_pax /usr/share/zsh/5.4.1/functions/_pbm /usr/share/zsh/5.4.1/functions/_pbuilder /usr/share/zsh/5.4.1/functions/_pdf /usr/share/zsh/5.4.1/functions/_pdftk /usr/share/zsh/5.4.1/functions/_perforce /usr/share/zsh/5.4.1/functions/_perl /usr/share/zsh/5.4.1/functions/_perl_basepods /usr/share/zsh/5.4.1/functions/_perldoc /usr/share/zsh/5.4.1/functions/_perl_modules /usr/share/zsh/5.4.1/functions/_pfctl /usr/share/zsh/5.4.1/functions/_pfexec /usr/share/zsh/5.4.1/functions/_pgrep /usr/share/zsh/5.4.1/functions/_php /usr/share/zsh/5.4.1/functions/_physical_volumes /usr/share/zsh/5.4.1/functions/_pick_variant /usr/share/zsh/5.4.1/functions/_picocom /usr/share/zsh/5.4.1/functions/_pidof /usr/share/zsh/5.4.1/functions/_pids /usr/share/zsh/5.4.1/functions/_pine /usr/share/zsh/5.4.1/functions/_ping /usr/share/zsh/5.4.1/functions/_piuparts /usr/share/zsh/5.4.1/functions/_pkg5 /usr/share/zsh/5.4.1/functions/_pkgadd /usr/share/zsh/5.4.1/functions/_pkg-config /usr/share/zsh/5.4.1/functions/_pkginfo /usr/share/zsh/5.4.1/functions/_pkg_instance /usr/share/zsh/5.4.1/functions/_pkgrm /usr/share/zsh/5.4.1/functions/_pkgtool /usr/share/zsh/5.4.1/functions/_pon /usr/share/zsh/5.4.1/functions/_portaudit /usr/share/zsh/5.4.1/functions/_portlint /usr/share/zsh/5.4.1/functions/_portmaster /usr/share/zsh/5.4.1/functions/_ports /usr/share/zsh/5.4.1/functions/_portsnap /usr/share/zsh/5.4.1/functions/_postfix /usr/share/zsh/5.4.1/functions/_postscript /usr/share/zsh/5.4.1/functions/_powerd /usr/share/zsh/5.4.1/functions/_prcs /usr/share/zsh/5.4.1/functions/_precommand /usr/share/zsh/5.4.1/functions/_prefix /usr/share/zsh/5.4.1/functions/_print /usr/share/zsh/5.4.1/functions/_printenv /usr/share/zsh/5.4.1/functions/_printers /usr/share/zsh/5.4.1/functions/_procstat /usr/share/zsh/5.4.1/functions/_prompt /usr/share/zsh/5.4.1/functions/_prove /usr/share/zsh/5.4.1/functions/_prstat /usr/share/zsh/5.4.1/functions/_ps /usr/share/zsh/5.4.1/functions/_ps1234 /usr/share/zsh/5.4.1/functions/_pscp /usr/share/zsh/5.4.1/functions/_pspdf /usr/share/zsh/5.4.1/functions/_psutils /usr/share/zsh/5.4.1/functions/_ptree /usr/share/zsh/5.4.1/functions/_pump /usr/share/zsh/5.4.1/functions/_putclip /usr/share/zsh/5.4.1/functions/_pydoc /usr/share/zsh/5.4.1/functions/_python /usr/share/zsh/5.4.1/functions/_python_modules /usr/share/zsh/5.4.1/functions/_qdbus /usr/share/zsh/5.4.1/functions/_qemu /usr/share/zsh/5.4.1/functions/_qiv /usr/share/zsh/5.4.1/functions/_qtplay /usr/share/zsh/5.4.1/functions/_quilt /usr/share/zsh/5.4.1/functions/_raggle /usr/share/zsh/5.4.1/functions/_rake /usr/share/zsh/5.4.1/functions/_ranlib /usr/share/zsh/5.4.1/functions/_rar /usr/share/zsh/5.4.1/functions/_rcctl /usr/share/zsh/5.4.1/functions/_rcs /usr/share/zsh/5.4.1/functions/_rdesktop /usr/share/zsh/5.4.1/functions/_read /usr/share/zsh/5.4.1/functions/_read_comp /usr/share/zsh/5.4.1/functions/_readelf /usr/share/zsh/5.4.1/functions/_readshortcut /usr/share/zsh/5.4.1/functions/_rebootin /usr/share/zsh/5.4.1/functions/_redirect /usr/share/zsh/5.4.1/functions/_regex_arguments /usr/share/zsh/5.4.1/functions/_regex_words /usr/share/zsh/5.4.1/functions/_remote_files /usr/share/zsh/5.4.1/functions/_renice /usr/share/zsh/5.4.1/functions/_reprepro /usr/share/zsh/5.4.1/functions/_requested /usr/share/zsh/5.4.1/functions/_retrieve_cache /usr/share/zsh/5.4.1/functions/_retrieve_mac_apps /usr/share/zsh/5.4.1/functions/_ri /usr/share/zsh/5.4.1/functions/_rlogin /usr/share/zsh/5.4.1/functions/_rm /usr/share/zsh/5.4.1/functions/_rpm /usr/share/zsh/5.4.1/functions/_rpmbuild /usr/share/zsh/5.4.1/functions/_rrdtool /usr/share/zsh/5.4.1/functions/_rsync /usr/share/zsh/5.4.1/functions/_rubber /usr/share/zsh/5.4.1/functions/_ruby /usr/share/zsh/5.4.1/functions/_run-help /usr/share/zsh/5.4.1/functions/_runit /usr/share/zsh/5.4.1/functions/_sablotron /usr/share/zsh/5.4.1/functions/_samba /usr/share/zsh/5.4.1/functions/_savecore /usr/share/zsh/5.4.1/functions/_sccs /usr/share/zsh/5.4.1/functions/_sched /usr/share/zsh/5.4.1/functions/_schedtool /usr/share/zsh/5.4.1/functions/_schroot /usr/share/zsh/5.4.1/functions/_scl /usr/share/zsh/5.4.1/functions/_screen /usr/share/zsh/5.4.1/functions/_script /usr/share/zsh/5.4.1/functions/_sed /usr/share/zsh/5.4.1/functions/_sep_parts /usr/share/zsh/5.4.1/functions/_sequence /usr/share/zsh/5.4.1/functions/_service /usr/share/zsh/5.4.1/functions/_services /usr/share/zsh/5.4.1/functions/_set /usr/share/zsh/5.4.1/functions/_set_command /usr/share/zsh/5.4.1/functions/_setfacl /usr/share/zsh/5.4.1/functions/_setopt /usr/share/zsh/5.4.1/functions/_setup /usr/share/zsh/5.4.1/functions/_setxkbmap /usr/share/zsh/5.4.1/functions/_sh /usr/share/zsh/5.4.1/functions/_showmount /usr/share/zsh/5.4.1/functions/_signals /usr/share/zsh/5.4.1/functions/_sisu /usr/share/zsh/5.4.1/functions/_slrn /usr/share/zsh/5.4.1/functions/_smit /usr/share/zsh/5.4.1/functions/_snoop /usr/share/zsh/5.4.1/functions/_socket /usr/share/zsh/5.4.1/functions/_sockstat /usr/share/zsh/5.4.1/functions/_softwareupdate /usr/share/zsh/5.4.1/functions/_sort /usr/share/zsh/5.4.1/functions/_source /usr/share/zsh/5.4.1/functions/_spamassassin /usr/share/zsh/5.4.1/functions/_sqlite /usr/share/zsh/5.4.1/functions/_sqsh /usr/share/zsh/5.4.1/functions/_ss /usr/share/zsh/5.4.1/functions/_ssh /usr/share/zsh/5.4.1/functions/_sshfs /usr/share/zsh/5.4.1/functions/_stat /usr/share/zsh/5.4.1/functions/_stgit /usr/share/zsh/5.4.1/functions/_store_cache /usr/share/zsh/5.4.1/functions/_strace /usr/share/zsh/5.4.1/functions/_strftime /usr/share/zsh/5.4.1/functions/_strip /usr/share/zsh/5.4.1/functions/_stty /usr/share/zsh/5.4.1/functions/_su /usr/share/zsh/5.4.1/functions/_sub_commands /usr/share/zsh/5.4.1/functions/_subscript /usr/share/zsh/5.4.1/functions/_subversion /usr/share/zsh/5.4.1/functions/_sudo /usr/share/zsh/5.4.1/functions/_suffix_alias_files /usr/share/zsh/5.4.1/functions/_surfraw /usr/share/zsh/5.4.1/functions/_SUSEconfig /usr/share/zsh/5.4.1/functions/_svcadm /usr/share/zsh/5.4.1/functions/_svccfg /usr/share/zsh/5.4.1/functions/_svcprop /usr/share/zsh/5.4.1/functions/_svcs /usr/share/zsh/5.4.1/functions/_svcs_fmri /usr/share/zsh/5.4.1/functions/_svn-buildpackage /usr/share/zsh/5.4.1/functions/_swaks /usr/share/zsh/5.4.1/functions/_swift /usr/share/zsh/5.4.1/functions/_sys_calls /usr/share/zsh/5.4.1/functions/_sysctl /usr/share/zsh/5.4.1/functions/_sysrc /usr/share/zsh/5.4.1/functions/_sysstat /usr/share/zsh/5.4.1/functions/_systat /usr/share/zsh/5.4.1/functions/_system_profiler /usr/share/zsh/5.4.1/functions/_tags /usr/share/zsh/5.4.1/functions/_tail /usr/share/zsh/5.4.1/functions/_tar /usr/share/zsh/5.4.1/functions/_tar_archive /usr/share/zsh/5.4.1/functions/_tardy /usr/share/zsh/5.4.1/functions/_tcpdump /usr/share/zsh/5.4.1/functions/_tcpsys /usr/share/zsh/5.4.1/functions/_tcptraceroute /usr/share/zsh/5.4.1/functions/_telnet /usr/share/zsh/5.4.1/functions/_terminals /usr/share/zsh/5.4.1/functions/_tex /usr/share/zsh/5.4.1/functions/_texi /usr/share/zsh/5.4.1/functions/_texinfo /usr/share/zsh/5.4.1/functions/_tidy /usr/share/zsh/5.4.1/functions/_tiff /usr/share/zsh/5.4.1/functions/_tilde /usr/share/zsh/5.4.1/functions/_tilde_files /usr/share/zsh/5.4.1/functions/_time_zone /usr/share/zsh/5.4.1/functions/_tin /usr/share/zsh/5.4.1/functions/_tla /usr/share/zsh/5.4.1/functions/_tmux /usr/share/zsh/5.4.1/functions/_todo.sh /usr/share/zsh/5.4.1/functions/_toilet /usr/share/zsh/5.4.1/functions/_toolchain-source /usr/share/zsh/5.4.1/functions/_top /usr/share/zsh/5.4.1/functions/_topgit /usr/share/zsh/5.4.1/functions/_totd /usr/share/zsh/5.4.1/functions/_touch /usr/share/zsh/5.4.1/functions/_tpb /usr/share/zsh/5.4.1/functions/_tpconfig /usr/share/zsh/5.4.1/functions/_tput /usr/share/zsh/5.4.1/functions/_tr /usr/share/zsh/5.4.1/functions/_tracepath /usr/share/zsh/5.4.1/functions/_trap /usr/share/zsh/5.4.1/functions/_tree /usr/share/zsh/5.4.1/functions/_truss /usr/share/zsh/5.4.1/functions/_ttyctl /usr/share/zsh/5.4.1/functions/_ttys /usr/share/zsh/5.4.1/functions/_tune2fs /usr/share/zsh/5.4.1/functions/_twidge /usr/share/zsh/5.4.1/functions/_twisted /usr/share/zsh/5.4.1/functions/_typeset /usr/share/zsh/5.4.1/functions/_ulimit /usr/share/zsh/5.4.1/functions/_uml /usr/share/zsh/5.4.1/functions/_umountable /usr/share/zsh/5.4.1/functions/_unace /usr/share/zsh/5.4.1/functions/_uname /usr/share/zsh/5.4.1/functions/_unexpand /usr/share/zsh/5.4.1/functions/_unhash /usr/share/zsh/5.4.1/functions/_uniq /usr/share/zsh/5.4.1/functions/_unison /usr/share/zsh/5.4.1/functions/_units /usr/share/zsh/5.4.1/functions/_update-alternatives /usr/share/zsh/5.4.1/functions/_update-rc.d /usr/share/zsh/5.4.1/functions/_urls /usr/share/zsh/5.4.1/functions/_urpmi /usr/share/zsh/5.4.1/functions/_urxvt /usr/share/zsh/5.4.1/functions/_uscan /usr/share/zsh/5.4.1/functions/_user_admin /usr/share/zsh/5.4.1/functions/_user_at_host /usr/share/zsh/5.4.1/functions/_user_expand /usr/share/zsh/5.4.1/functions/_user_math_func /usr/share/zsh/5.4.1/functions/_users /usr/share/zsh/5.4.1/functions/_users_on /usr/share/zsh/5.4.1/functions/_uzbl /usr/share/zsh/5.4.1/functions/_valgrind /usr/share/zsh/5.4.1/functions/_value /usr/share/zsh/5.4.1/functions/_values /usr/share/zsh/5.4.1/functions/_vared /usr/share/zsh/5.4.1/functions/_vars /usr/share/zsh/5.4.1/functions/_vcsh /usr/share/zsh/5.4.1/functions/_vim /usr/share/zsh/5.4.1/functions/_vim-addons /usr/share/zsh/5.4.1/functions/_vmstat /usr/share/zsh/5.4.1/functions/_vnc /usr/share/zsh/5.4.1/functions/_volume_groups /usr/share/zsh/5.4.1/functions/_vorbis /usr/share/zsh/5.4.1/functions/_vorbiscomment /usr/share/zsh/5.4.1/functions/_vserver /usr/share/zsh/5.4.1/functions/_vux /usr/share/zsh/5.4.1/functions/_w3m /usr/share/zsh/5.4.1/functions/_wait /usr/share/zsh/5.4.1/functions/_wajig /usr/share/zsh/5.4.1/functions/_wakeup_capable_devices /usr/share/zsh/5.4.1/functions/_wanna-build /usr/share/zsh/5.4.1/functions/_wanted /usr/share/zsh/5.4.1/functions/_watch /usr/share/zsh/5.4.1/functions/_watch-snoop /usr/share/zsh/5.4.1/functions/_wc /usr/share/zsh/5.4.1/functions/_webbrowser /usr/share/zsh/5.4.1/functions/_wget /usr/share/zsh/5.4.1/functions/_whereis /usr/share/zsh/5.4.1/functions/_which /usr/share/zsh/5.4.1/functions/_whois /usr/share/zsh/5.4.1/functions/_widgets /usr/share/zsh/5.4.1/functions/_wiggle /usr/share/zsh/5.4.1/functions/_wpa_cli /usr/share/zsh/5.4.1/functions/_xargs /usr/share/zsh/5.4.1/functions/_x_arguments /usr/share/zsh/5.4.1/functions/_xauth /usr/share/zsh/5.4.1/functions/_xautolock /usr/share/zsh/5.4.1/functions/_x_borderwidth /usr/share/zsh/5.4.1/functions/_xclip /usr/share/zsh/5.4.1/functions/_x_color /usr/share/zsh/5.4.1/functions/_x_colormapid /usr/share/zsh/5.4.1/functions/_x_cursor /usr/share/zsh/5.4.1/functions/_x_display /usr/share/zsh/5.4.1/functions/_xdvi /usr/share/zsh/5.4.1/functions/_x_extension /usr/share/zsh/5.4.1/functions/_xfig /usr/share/zsh/5.4.1/functions/_x_font /usr/share/zsh/5.4.1/functions/_xft_fonts /usr/share/zsh/5.4.1/functions/_x_geometry /usr/share/zsh/5.4.1/functions/_x_keysym /usr/share/zsh/5.4.1/functions/_xloadimage /usr/share/zsh/5.4.1/functions/_x_locale /usr/share/zsh/5.4.1/functions/_xmlsoft /usr/share/zsh/5.4.1/functions/_xmms2 /usr/share/zsh/5.4.1/functions/_x_modifier /usr/share/zsh/5.4.1/functions/_xmodmap /usr/share/zsh/5.4.1/functions/_x_name /usr/share/zsh/5.4.1/functions/_xournal /usr/share/zsh/5.4.1/functions/_xpdf /usr/share/zsh/5.4.1/functions/_xrandr /usr/share/zsh/5.4.1/functions/_x_resource /usr/share/zsh/5.4.1/functions/_xscreensaver /usr/share/zsh/5.4.1/functions/_x_selection_timeout /usr/share/zsh/5.4.1/functions/_xset /usr/share/zsh/5.4.1/functions/_xt_arguments /usr/share/zsh/5.4.1/functions/_xterm /usr/share/zsh/5.4.1/functions/_x_title /usr/share/zsh/5.4.1/functions/_xt_session_id /usr/share/zsh/5.4.1/functions/_x_utils /usr/share/zsh/5.4.1/functions/_xv /usr/share/zsh/5.4.1/functions/_x_visual /usr/share/zsh/5.4.1/functions/_x_window /usr/share/zsh/5.4.1/functions/_xwit /usr/share/zsh/5.4.1/functions/_xxd /usr/share/zsh/5.4.1/functions/_xz /usr/share/zsh/5.4.1/functions/_yafc /usr/share/zsh/5.4.1/functions/_yast /usr/share/zsh/5.4.1/functions/_yodl /usr/share/zsh/5.4.1/functions/_yp /usr/share/zsh/5.4.1/functions/_yum /usr/share/zsh/5.4.1/functions/_zargs /usr/share/zsh/5.4.1/functions/_zattr /usr/share/zsh/5.4.1/functions/_zcalc /usr/share/zsh/5.4.1/functions/_zcalc_line /usr/share/zsh/5.4.1/functions/_zcat /usr/share/zsh/5.4.1/functions/_zcompile /usr/share/zsh/5.4.1/functions/_zdump /usr/share/zsh/5.4.1/functions/_zed /usr/share/zsh/5.4.1/functions/_zfs /usr/share/zsh/5.4.1/functions/_zfs_dataset /usr/share/zsh/5.4.1/functions/_zfs_keysource_props /usr/share/zsh/5.4.1/functions/_zfs_pool /usr/share/zsh/5.4.1/functions/_zftp /usr/share/zsh/5.4.1/functions/_zip /usr/share/zsh/5.4.1/functions/_zle /usr/share/zsh/5.4.1/functions/_zlogin /usr/share/zsh/5.4.1/functions/_zmodload /usr/share/zsh/5.4.1/functions/_zmv /usr/share/zsh/5.4.1/functions/_zoneadm /usr/share/zsh/5.4.1/functions/_zones /usr/share/zsh/5.4.1/functions/_zpool /usr/share/zsh/5.4.1/functions/_zpty /usr/share/zsh/5.4.1/functions/_zsh /usr/share/zsh/5.4.1/functions/_zsh-mime-handler /usr/share/zsh/5.4.1/functions/_zsocket /usr/share/zsh/5.4.1/functions/_zstyle /usr/share/zsh/5.4.1/functions/_ztodo /usr/share/zsh/5.4.1/functions/_zypper ) 
+compdump:28> [[ -n '' ]]
+compdump:36> print '#files: 832\tversion: 5.4.1'
+compdump:42> print '\n_comps=('
+compdump:43> _d_f=-
+compdump:44> print -r - \''-'\' \''_precommand'\'
+compdump:43> _d_f=.
+compdump:44> print -r - \''.'\' \''_source'\'
+compdump:43> _d_f=5g
+compdump:44> print -r - \''5g'\' \''_go'\'
+compdump:43> _d_f=5l
+compdump:44> print -r - \''5l'\' \''_go'\'
+compdump:43> _d_f=6g
+compdump:44> print -r - \''6g'\' \''_go'\'
+compdump:43> _d_f=6l
+compdump:44> print -r - \''6l'\' \''_go'\'
+compdump:43> _d_f=8g
+compdump:44> print -r - \''8g'\' \''_go'\'
+compdump:43> _d_f=8l
+compdump:44> print -r - \''8l'\' \''_go'\'
+compdump:43> _d_f=a2dismod
+compdump:44> print -r - \''a2dismod'\' \''_a2utils'\'
+compdump:43> _d_f=a2dissite
+compdump:44> print -r - \''a2dissite'\' \''_a2utils'\'
+compdump:43> _d_f=a2enmod
+compdump:44> print -r - \''a2enmod'\' \''_a2utils'\'
+compdump:43> _d_f=a2ensite
+compdump:44> print -r - \''a2ensite'\' \''_a2utils'\'
+compdump:43> _d_f=a2ps
+compdump:44> print -r - \''a2ps'\' \''_a2ps'\'
+compdump:43> _d_f=aaaa
+compdump:44> print -r - \''aaaa'\' \''_hosts'\'
+compdump:43> _d_f=aap
+compdump:44> print -r - \''aap'\' \''_aap'\'
+compdump:43> _d_f=acpi
+compdump:44> print -r - \''acpi'\' \''_acpi'\'
+compdump:43> _d_f=acpitool
+compdump:44> print -r - \''acpitool'\' \''_acpitool'\'
+compdump:43> _d_f=acroread
+compdump:44> print -r - \''acroread'\' \''_acroread'\'
+compdump:43> _d_f=adb
+compdump:44> print -r - \''adb'\' \''_adb'\'
+compdump:43> _d_f=add-zle-hook-widget
+compdump:44> print -r - \''add-zle-hook-widget'\' \''_add-zle-hook-widget'\'
+compdump:43> _d_f=add-zsh-hook
+compdump:44> print -r - \''add-zsh-hook'\' \''_add-zsh-hook'\'
+compdump:43> _d_f=admin
+compdump:44> print -r - \''admin'\' \''_sccs'\'
+compdump:43> _d_f=ag
+compdump:44> print -r - \''ag'\' \''_the_silver_searcher'\'
+compdump:43> _d_f=ali
+compdump:44> print -r - \''ali'\' \''_mh'\'
+compdump:43> _d_f=alias
+compdump:44> print -r - \''alias'\' \''_alias'\'
+compdump:43> _d_f=amaya
+compdump:44> print -r - \''amaya'\' \''_webbrowser'\'
+compdump:43> _d_f=analyseplugin
+compdump:44> print -r - \''analyseplugin'\' \''_analyseplugin'\'
+compdump:43> _d_f=animate
+compdump:44> print -r - \''animate'\' \''_imagemagick'\'
+compdump:43> _d_f=anno
+compdump:44> print -r - \''anno'\' \''_mh'\'
+compdump:43> _d_f=ant
+compdump:44> print -r - \''ant'\' \''_ant'\'
+compdump:43> _d_f=antiword
+compdump:44> print -r - \''antiword'\' \''_antiword'\'
+compdump:43> _d_f=aodh
+compdump:44> print -r - \''aodh'\' \''_openstack'\'
+compdump:43> _d_f=aoss
+compdump:44> print -r - \''aoss'\' \''_precommand'\'
+compdump:43> _d_f=apache2ctl
+compdump:44> print -r - \''apache2ctl'\' \''_apachectl'\'
+compdump:43> _d_f=apachectl
+compdump:44> print -r - \''apachectl'\' \''_apachectl'\'
+compdump:43> _d_f=apm
+compdump:44> print -r - \''apm'\' \''_apm'\'
+compdump:43> _d_f=appletviewer
+compdump:44> print -r - \''appletviewer'\' \''_java'\'
+compdump:43> _d_f=apropos
+compdump:44> print -r - \''apropos'\' \''_man'\'
+compdump:43> _d_f=apt
+compdump:44> print -r - \''apt'\' \''_apt'\'
+compdump:43> _d_f=apt-cache
+compdump:44> print -r - \''apt-cache'\' \''_apt'\'
+compdump:43> _d_f=apt-cdrom
+compdump:44> print -r - \''apt-cdrom'\' \''_apt'\'
+compdump:43> _d_f=apt-config
+compdump:44> print -r - \''apt-config'\' \''_apt'\'
+compdump:43> _d_f=apt-file
+compdump:44> print -r - \''apt-file'\' \''_apt-file'\'
+compdump:43> _d_f=apt-get
+compdump:44> print -r - \''apt-get'\' \''_apt'\'
+compdump:43> _d_f=aptitude
+compdump:44> print -r - \''aptitude'\' \''_aptitude'\'
+compdump:43> _d_f=apt-mark
+compdump:44> print -r - \''apt-mark'\' \''_apt'\'
+compdump:43> _d_f=apt-move
+compdump:44> print -r - \''apt-move'\' \''_apt-move'\'
+compdump:43> _d_f=apt-show-versions
+compdump:44> print -r - \''apt-show-versions'\' \''_apt-show-versions'\'
+compdump:43> _d_f=apvlv
+compdump:44> print -r - \''apvlv'\' \''_pdf'\'
+compdump:43> _d_f=arena
+compdump:44> print -r - \''arena'\' \''_webbrowser'\'
+compdump:43> _d_f=arp
+compdump:44> print -r - \''arp'\' \''_arp'\'
+compdump:43> _d_f=arping
+compdump:44> print -r - \''arping'\' \''_arping'\'
+compdump:43> _d_f=-array-value-
+compdump:44> print -r - \''-array-value-'\' \''_value'\'
+compdump:43> _d_f=-assign-parameter-
+compdump:44> print -r - \''-assign-parameter-'\' \''_assign'\'
+compdump:43> _d_f=at
+compdump:44> print -r - \''at'\' \''_at'\'
+compdump:43> _d_f=atq
+compdump:44> print -r - \''atq'\' \''_at'\'
+compdump:43> _d_f=atrm
+compdump:44> print -r - \''atrm'\' \''_at'\'
+compdump:43> _d_f=attr
+compdump:44> print -r - \''attr'\' \''_attr'\'
+compdump:43> _d_f=augtool
+compdump:44> print -r - \''augtool'\' \''_augeas'\'
+compdump:43> _d_f=auto-apt
+compdump:44> print -r - \''auto-apt'\' \''_auto-apt'\'
+compdump:43> _d_f=autoload
+compdump:44> print -r - \''autoload'\' \''_typeset'\'
+compdump:43> _d_f=awk
+compdump:44> print -r - \''awk'\' \''_awk'\'
+compdump:43> _d_f=axi-cache
+compdump:44> print -r - \''axi-cache'\' \''_axi-cache'\'
+compdump:43> _d_f=barbican
+compdump:44> print -r - \''barbican'\' \''_openstack'\'
+compdump:43> _d_f=basename
+compdump:44> print -r - \''basename'\' \''_basename'\'
+compdump:43> _d_f=bash
+compdump:44> print -r - \''bash'\' \''_sh'\'
+compdump:43> _d_f=batch
+compdump:44> print -r - \''batch'\' \''_at'\'
+compdump:43> _d_f=baz
+compdump:44> print -r - \''baz'\' \''_baz'\'
+compdump:43> _d_f=beadm
+compdump:44> print -r - \''beadm'\' \''_beadm'\'
+compdump:43> _d_f=beep
+compdump:44> print -r - \''beep'\' \''_beep'\'
+compdump:43> _d_f=bg
+compdump:44> print -r - \''bg'\' \''_jobs_bg'\'
+compdump:43> _d_f=bibtex
+compdump:44> print -r - \''bibtex'\' \''_bibtex'\'
+compdump:43> _d_f=bindkey
+compdump:44> print -r - \''bindkey'\' \''_bindkey'\'
+compdump:43> _d_f=bison
+compdump:44> print -r - \''bison'\' \''_bison'\'
+compdump:43> _d_f=bmake
+compdump:44> print -r - \''bmake'\' \''_make'\'
+compdump:43> _d_f=bogofilter
+compdump:44> print -r - \''bogofilter'\' \''_bogofilter'\'
+compdump:43> _d_f=bogotune
+compdump:44> print -r - \''bogotune'\' \''_bogofilter'\'
+compdump:43> _d_f=bogoutil
+compdump:44> print -r - \''bogoutil'\' \''_bogofilter'\'
+compdump:43> _d_f=bootctl
+compdump:44> print -r - \''bootctl'\' \''_bootctl'\'
+compdump:43> _d_f=bpython
+compdump:44> print -r - \''bpython'\' \''_bpython'\'
+compdump:43> _d_f=bpython2
+compdump:44> print -r - \''bpython2'\' \''_bpython'\'
+compdump:43> _d_f=bpython2-gtk
+compdump:44> print -r - \''bpython2-gtk'\' \''_bpython'\'
+compdump:43> _d_f=bpython2-urwid
+compdump:44> print -r - \''bpython2-urwid'\' \''_bpython'\'
+compdump:43> _d_f=bpython3
+compdump:44> print -r - \''bpython3'\' \''_bpython'\'
+compdump:43> _d_f=bpython3-gtk
+compdump:44> print -r - \''bpython3-gtk'\' \''_bpython'\'
+compdump:43> _d_f=bpython3-urwid
+compdump:44> print -r - \''bpython3-urwid'\' \''_bpython'\'
+compdump:43> _d_f=bpython-gtk
+compdump:44> print -r - \''bpython-gtk'\' \''_bpython'\'
+compdump:43> _d_f=bpython-urwid
+compdump:44> print -r - \''bpython-urwid'\' \''_bpython'\'
+compdump:43> _d_f=-brace-parameter-
+compdump:44> print -r - \''-brace-parameter-'\' \''_brace_parameter'\'
+compdump:43> _d_f=brctl
+compdump:44> print -r - \''brctl'\' \''_brctl'\'
+compdump:43> _d_f=bsdconfig
+compdump:44> print -r - \''bsdconfig'\' \''_bsdconfig'\'
+compdump:43> _d_f=bsdgrep
+compdump:44> print -r - \''bsdgrep'\' \''_grep'\'
+compdump:43> _d_f=bsdinstall
+compdump:44> print -r - \''bsdinstall'\' \''_bsdinstall'\'
+compdump:43> _d_f=btdownloadcurses
+compdump:44> print -r - \''btdownloadcurses'\' \''_bittorrent'\'
+compdump:43> _d_f=btdownloadgui
+compdump:44> print -r - \''btdownloadgui'\' \''_bittorrent'\'
+compdump:43> _d_f=btdownloadheadless
+compdump:44> print -r - \''btdownloadheadless'\' \''_bittorrent'\'
+compdump:43> _d_f=btlaunchmany
+compdump:44> print -r - \''btlaunchmany'\' \''_bittorrent'\'
+compdump:43> _d_f=btlaunchmanycurses
+compdump:44> print -r - \''btlaunchmanycurses'\' \''_bittorrent'\'
+compdump:43> _d_f=btmakemetafile
+compdump:44> print -r - \''btmakemetafile'\' \''_bittorrent'\'
+compdump:43> _d_f=btreannounce
+compdump:44> print -r - \''btreannounce'\' \''_bittorrent'\'
+compdump:43> _d_f=btrename
+compdump:44> print -r - \''btrename'\' \''_bittorrent'\'
+compdump:43> _d_f=btrfs
+compdump:44> print -r - \''btrfs'\' \''_btrfs'\'
+compdump:43> _d_f=bts
+compdump:44> print -r - \''bts'\' \''_bts'\'
+compdump:43> _d_f=btshowmetainfo
+compdump:44> print -r - \''btshowmetainfo'\' \''_bittorrent'\'
+compdump:43> _d_f=bttrack
+compdump:44> print -r - \''bttrack'\' \''_bittorrent'\'
+compdump:43> _d_f=bug
+compdump:44> print -r - \''bug'\' \''_bug'\'
+compdump:43> _d_f=buildhash
+compdump:44> print -r - \''buildhash'\' \''_ispell'\'
+compdump:43> _d_f=builtin
+compdump:44> print -r - \''builtin'\' \''_builtin'\'
+compdump:43> _d_f=bunzip2
+compdump:44> print -r - \''bunzip2'\' \''_bzip2'\'
+compdump:43> _d_f=burst
+compdump:44> print -r - \''burst'\' \''_mh'\'
+compdump:43> _d_f=busctl
+compdump:44> print -r - \''busctl'\' \''_busctl'\'
+compdump:43> _d_f=bzcat
+compdump:44> print -r - \''bzcat'\' \''_bzip2'\'
+compdump:43> _d_f=bzip2
+compdump:44> print -r - \''bzip2'\' \''_bzip2'\'
+compdump:43> _d_f=bzip2recover
+compdump:44> print -r - \''bzip2recover'\' \''_bzip2'\'
+compdump:43> _d_f=bzr
+compdump:44> print -r - \''bzr'\' \''_bzr'\'
+compdump:43> _d_f=c++
+compdump:44> print -r - \''c++'\' \''_gcc'\'
+compdump:43> _d_f=cabal
+compdump:44> print -r - \''cabal'\' \''_cabal'\'
+compdump:43> _d_f=cal
+compdump:44> print -r - \''cal'\' \''_cal'\'
+compdump:43> _d_f=calendar
+compdump:44> print -r - \''calendar'\' \''_calendar'\'
+compdump:43> _d_f=cat
+compdump:44> print -r - \''cat'\' \''_cat'\'
+compdump:43> _d_f=catchsegv
+compdump:44> print -r - \''catchsegv'\' \''_precommand'\'
+compdump:43> _d_f=cc
+compdump:44> print -r - \''cc'\' \''_gcc'\'
+compdump:43> _d_f=ccal
+compdump:44> print -r - \''ccal'\' \''_ccal'\'
+compdump:43> _d_f=cd
+compdump:44> print -r - \''cd'\' \''_cd'\'
+compdump:43> _d_f=cdbs-edit-patch
+compdump:44> print -r - \''cdbs-edit-patch'\' \''_cdbs-edit-patch'\'
+compdump:43> _d_f=cdc
+compdump:44> print -r - \''cdc'\' \''_sccs'\'
+compdump:43> _d_f=cdcd
+compdump:44> print -r - \''cdcd'\' \''_cdcd'\'
+compdump:43> _d_f=cdr
+compdump:44> print -r - \''cdr'\' \''_cdr'\'
+compdump:43> _d_f=cdrdao
+compdump:44> print -r - \''cdrdao'\' \''_cdrdao'\'
+compdump:43> _d_f=cdrecord
+compdump:44> print -r - \''cdrecord'\' \''_cdrecord'\'
+compdump:43> _d_f=ceilometer
+compdump:44> print -r - \''ceilometer'\' \''_openstack'\'
+compdump:43> _d_f=certtool
+compdump:44> print -r - \''certtool'\' \''_gnutls'\'
+compdump:43> _d_f=cftp
+compdump:44> print -r - \''cftp'\' \''_twisted'\'
+compdump:43> _d_f=chage
+compdump:44> print -r - \''chage'\' \''_users'\'
+compdump:43> _d_f=chdir
+compdump:44> print -r - \''chdir'\' \''_cd'\'
+compdump:43> _d_f=chflags
+compdump:44> print -r - \''chflags'\' \''_chflags'\'
+compdump:43> _d_f=chfn
+compdump:44> print -r - \''chfn'\' \''_users'\'
+compdump:43> _d_f=chgrp
+compdump:44> print -r - \''chgrp'\' \''_chown'\'
+compdump:43> _d_f=chimera
+compdump:44> print -r - \''chimera'\' \''_webbrowser'\'
+compdump:43> _d_f=chkconfig
+compdump:44> print -r - \''chkconfig'\' \''_chkconfig'\'
+compdump:43> _d_f=chmod
+compdump:44> print -r - \''chmod'\' \''_chmod'\'
+compdump:43> _d_f=chown
+compdump:44> print -r - \''chown'\' \''_chown'\'
+compdump:43> _d_f=chpass
+compdump:44> print -r - \''chpass'\' \''_chsh'\'
+compdump:43> _d_f=chrt
+compdump:44> print -r - \''chrt'\' \''_chrt'\'
+compdump:43> _d_f=chsh
+compdump:44> print -r - \''chsh'\' \''_chsh'\'
+compdump:43> _d_f=ci
+compdump:44> print -r - \''ci'\' \''_rcs'\'
+compdump:43> _d_f=cifsiostat
+compdump:44> print -r - \''cifsiostat'\' \''_sysstat'\'
+compdump:43> _d_f=cinder
+compdump:44> print -r - \''cinder'\' \''_openstack'\'
+compdump:43> _d_f=ckeygen
+compdump:44> print -r - \''ckeygen'\' \''_twisted'\'
+compdump:43> _d_f=clang
+compdump:44> print -r - \''clang'\' \''_gcc'\'
+compdump:43> _d_f=clang++
+compdump:44> print -r - \''clang++'\' \''_gcc'\'
+compdump:43> _d_f=clay
+compdump:44> print -r - \''clay'\' \''_clay'\'
+compdump:43> _d_f=clear
+compdump:44> print -r - \''clear'\' \''_nothing'\'
+compdump:43> _d_f=cloudkitty
+compdump:44> print -r - \''cloudkitty'\' \''_openstack'\'
+compdump:43> _d_f=cmp
+compdump:44> print -r - \''cmp'\' \''_cmp'\'
+compdump:43> _d_f=co
+compdump:44> print -r - \''co'\' \''_rcs'\'
+compdump:43> _d_f=comb
+compdump:44> print -r - \''comb'\' \''_sccs'\'
+compdump:43> _d_f=combine
+compdump:44> print -r - \''combine'\' \''_imagemagick'\'
+compdump:43> _d_f=combinediff
+compdump:44> print -r - \''combinediff'\' \''_patchutils'\'
+compdump:43> _d_f=comm
+compdump:44> print -r - \''comm'\' \''_comm'\'
+compdump:43> _d_f=command
+compdump:44> print -r - \''command'\' \''_command'\'
+compdump:43> _d_f=-command-
+compdump:44> print -r - \''-command-'\' \''_autocd'\'
+compdump:43> _d_f=-command-line-
+compdump:44> print -r - \''-command-line-'\' \''_normal'\'
+compdump:43> _d_f=comp
+compdump:44> print -r - \''comp'\' \''_mh'\'
+compdump:43> _d_f=compadd
+compdump:44> print -r - \''compadd'\' \''_compadd'\'
+compdump:43> _d_f=compdef
+compdump:44> print -r - \''compdef'\' \''_compdef'\'
+compdump:43> _d_f=composite
+compdump:44> print -r - \''composite'\' \''_imagemagick'\'
+compdump:43> _d_f=compress
+compdump:44> print -r - \''compress'\' \''_compress'\'
+compdump:43> _d_f=conch
+compdump:44> print -r - \''conch'\' \''_twisted'\'
+compdump:43> _d_f=-condition-
+compdump:44> print -r - \''-condition-'\' \''_condition'\'
+compdump:43> _d_f=config.status
+compdump:44> print -r - \''config.status'\' \''_configure'\'
+compdump:43> _d_f=configure
+compdump:44> print -r - \''configure'\' \''_configure'\'
+compdump:43> _d_f=convert
+compdump:44> print -r - \''convert'\' \''_imagemagick'\'
+compdump:43> _d_f=coreadm
+compdump:44> print -r - \''coreadm'\' \''_coreadm'\'
+compdump:43> _d_f=coredumpctl
+compdump:44> print -r - \''coredumpctl'\' \''_coredumpctl'\'
+compdump:43> _d_f=cowsay
+compdump:44> print -r - \''cowsay'\' \''_cowsay'\'
+compdump:43> _d_f=cowthink
+compdump:44> print -r - \''cowthink'\' \''_cowsay'\'
+compdump:43> _d_f=cp
+compdump:44> print -r - \''cp'\' \''_cp'\'
+compdump:43> _d_f=cpio
+compdump:44> print -r - \''cpio'\' \''_cpio'\'
+compdump:43> _d_f=cplay
+compdump:44> print -r - \''cplay'\' \''_cplay'\'
+compdump:43> _d_f=cpupower
+compdump:44> print -r - \''cpupower'\' \''_cpupower'\'
+compdump:43> _d_f=crsh
+compdump:44> print -r - \''crsh'\' \''_cssh'\'
+compdump:43> _d_f=cryptsetup
+compdump:44> print -r - \''cryptsetup'\' \''_cryptsetup'\'
+compdump:43> _d_f=cscope
+compdump:44> print -r - \''cscope'\' \''_cscope'\'
+compdump:43> _d_f=csh
+compdump:44> print -r - \''csh'\' \''_sh'\'
+compdump:43> _d_f=cssh
+compdump:44> print -r - \''cssh'\' \''_cssh'\'
+compdump:43> _d_f=csup
+compdump:44> print -r - \''csup'\' \''_csup'\'
+compdump:43> _d_f=cu
+compdump:44> print -r - \''cu'\' \''_cu'\'
+compdump:43> _d_f=curl
+compdump:44> print -r - \''curl'\' \''_curl'\'
+compdump:43> _d_f=cut
+compdump:44> print -r - \''cut'\' \''_cut'\'
+compdump:43> _d_f=cvs
+compdump:44> print -r - \''cvs'\' \''_cvs'\'
+compdump:43> _d_f=cvsup
+compdump:44> print -r - \''cvsup'\' \''_cvsup'\'
+compdump:43> _d_f=cygcheck
+compdump:44> print -r - \''cygcheck'\' \''_cygcheck'\'
+compdump:43> _d_f=cygcheck.exe
+compdump:44> print -r - \''cygcheck.exe'\' \''_cygcheck'\'
+compdump:43> _d_f=cygpath
+compdump:44> print -r - \''cygpath'\' \''_cygpath'\'
+compdump:43> _d_f=cygpath.exe
+compdump:44> print -r - \''cygpath.exe'\' \''_cygpath'\'
+compdump:43> _d_f=cygrunsrv
+compdump:44> print -r - \''cygrunsrv'\' \''_cygrunsrv'\'
+compdump:43> _d_f=cygrunsrv.exe
+compdump:44> print -r - \''cygrunsrv.exe'\' \''_cygrunsrv'\'
+compdump:43> _d_f=cygserver
+compdump:44> print -r - \''cygserver'\' \''_cygserver'\'
+compdump:43> _d_f=cygserver.exe
+compdump:44> print -r - \''cygserver.exe'\' \''_cygserver'\'
+compdump:43> _d_f=cygstart
+compdump:44> print -r - \''cygstart'\' \''_cygstart'\'
+compdump:43> _d_f=cygstart.exe
+compdump:44> print -r - \''cygstart.exe'\' \''_cygstart'\'
+compdump:43> _d_f=dak
+compdump:44> print -r - \''dak'\' \''_dak'\'
+compdump:43> _d_f=darcs
+compdump:44> print -r - \''darcs'\' \''_darcs'\'
+compdump:43> _d_f=date
+compdump:44> print -r - \''date'\' \''_date'\'
+compdump:43> _d_f=dbus-monitor
+compdump:44> print -r - \''dbus-monitor'\' \''_dbus'\'
+compdump:43> _d_f=dbus-send
+compdump:44> print -r - \''dbus-send'\' \''_dbus'\'
+compdump:43> _d_f=dch
+compdump:44> print -r - \''dch'\' \''_debchange'\'
+compdump:43> _d_f=dchroot
+compdump:44> print -r - \''dchroot'\' \''_dchroot'\'
+compdump:43> _d_f=dchroot-dsa
+compdump:44> print -r - \''dchroot-dsa'\' \''_dchroot-dsa'\'
+compdump:43> _d_f=dcop
+compdump:44> print -r - \''dcop'\' \''_dcop'\'
+compdump:43> _d_f=dcopclient
+compdump:44> print -r - \''dcopclient'\' \''_dcop'\'
+compdump:43> _d_f=dcopfind
+compdump:44> print -r - \''dcopfind'\' \''_dcop'\'
+compdump:43> _d_f=dcopobject
+compdump:44> print -r - \''dcopobject'\' \''_dcop'\'
+compdump:43> _d_f=dcopref
+compdump:44> print -r - \''dcopref'\' \''_dcop'\'
+compdump:43> _d_f=dcopstart
+compdump:44> print -r - \''dcopstart'\' \''_dcop'\'
+compdump:43> _d_f=dcut
+compdump:44> print -r - \''dcut'\' \''_dcut'\'
+compdump:43> _d_f=dd
+compdump:44> print -r - \''dd'\' \''_dd'\'
+compdump:43> _d_f=debchange
+compdump:44> print -r - \''debchange'\' \''_debchange'\'
+compdump:43> _d_f=debcheckout
+compdump:44> print -r - \''debcheckout'\' \''_debcheckout'\'
+compdump:43> _d_f=debdiff
+compdump:44> print -r - \''debdiff'\' \''_debdiff'\'
+compdump:43> _d_f=debfoster
+compdump:44> print -r - \''debfoster'\' \''_debfoster'\'
+compdump:43> _d_f=debsign
+compdump:44> print -r - \''debsign'\' \''_debsign'\'
+compdump:43> _d_f=declare
+compdump:44> print -r - \''declare'\' \''_typeset'\'
+compdump:43> _d_f=-default-
+compdump:44> print -r - \''-default-'\' \''_default'\'
+compdump:43> _d_f=defaults
+compdump:44> print -r - \''defaults'\' \''_defaults'\'
+compdump:43> _d_f=delta
+compdump:44> print -r - \''delta'\' \''_sccs'\'
+compdump:43> _d_f=designate
+compdump:44> print -r - \''designate'\' \''_openstack'\'
+compdump:43> _d_f=devtodo
+compdump:44> print -r - \''devtodo'\' \''_devtodo'\'
+compdump:43> _d_f=df
+compdump:44> print -r - \''df'\' \''_df'\'
+compdump:43> _d_f=dhclient
+compdump:44> print -r - \''dhclient'\' \''_dhclient'\'
+compdump:43> _d_f=dhclient3
+compdump:44> print -r - \''dhclient3'\' \''_dhclient'\'
+compdump:43> _d_f=dhcpinfo
+compdump:44> print -r - \''dhcpinfo'\' \''_dhcpinfo'\'
+compdump:43> _d_f=dict
+compdump:44> print -r - \''dict'\' \''_dict'\'
+compdump:43> _d_f=diff
+compdump:44> print -r - \''diff'\' \''_diff'\'
+compdump:43> _d_f=diffstat
+compdump:44> print -r - \''diffstat'\' \''_diffstat'\'
+compdump:43> _d_f=dig
+compdump:44> print -r - \''dig'\' \''_dig'\'
+compdump:43> _d_f=dillo
+compdump:44> print -r - \''dillo'\' \''_webbrowser'\'
+compdump:43> _d_f=dircmp
+compdump:44> print -r - \''dircmp'\' \''_directories'\'
+compdump:43> _d_f=dirs
+compdump:44> print -r - \''dirs'\' \''_dirs'\'
+compdump:43> _d_f=disable
+compdump:44> print -r - \''disable'\' \''_disable'\'
+compdump:43> _d_f=disown
+compdump:44> print -r - \''disown'\' \''_jobs_fg'\'
+compdump:43> _d_f=display
+compdump:44> print -r - \''display'\' \''_imagemagick'\'
+compdump:43> _d_f=dist
+compdump:44> print -r - \''dist'\' \''_mh'\'
+compdump:43> _d_f=django-admin
+compdump:44> print -r - \''django-admin'\' \''_django'\'
+compdump:43> _d_f=django-admin.py
+compdump:44> print -r - \''django-admin.py'\' \''_django'\'
+compdump:43> _d_f=dladm
+compdump:44> print -r - \''dladm'\' \''_dladm'\'
+compdump:43> _d_f=dlocate
+compdump:44> print -r - \''dlocate'\' \''_dlocate'\'
+compdump:43> _d_f=dmake
+compdump:44> print -r - \''dmake'\' \''_make'\'
+compdump:43> _d_f=dmesg
+compdump:44> print -r - \''dmesg'\' \''_dmesg'\'
+compdump:43> _d_f=dmidecode
+compdump:44> print -r - \''dmidecode'\' \''_dmidecode'\'
+compdump:43> _d_f=dnf
+compdump:44> print -r - \''dnf'\' \''_dnf'\'
+compdump:43> _d_f=dnf-2
+compdump:44> print -r - \''dnf-2'\' \''_dnf'\'
+compdump:43> _d_f=dnf-3
+compdump:44> print -r - \''dnf-3'\' \''_dnf'\'
+compdump:43> _d_f=doas
+compdump:44> print -r - \''doas'\' \''_doas'\'
+compdump:43> _d_f=domainname
+compdump:44> print -r - \''domainname'\' \''_yp'\'
+compdump:43> _d_f=dosdel
+compdump:44> print -r - \''dosdel'\' \''_floppy'\'
+compdump:43> _d_f=dosread
+compdump:44> print -r - \''dosread'\' \''_floppy'\'
+compdump:43> _d_f=dpatch-edit-patch
+compdump:44> print -r - \''dpatch-edit-patch'\' \''_dpatch-edit-patch'\'
+compdump:43> _d_f=dpkg
+compdump:44> print -r - \''dpkg'\' \''_dpkg'\'
+compdump:43> _d_f=dpkg-buildpackage
+compdump:44> print -r - \''dpkg-buildpackage'\' \''_dpkg-buildpackage'\'
+compdump:43> _d_f=dpkg-cross
+compdump:44> print -r - \''dpkg-cross'\' \''_dpkg-cross'\'
+compdump:43> _d_f=dpkg-deb
+compdump:44> print -r - \''dpkg-deb'\' \''_dpkg'\'
+compdump:43> _d_f=dpkg-query
+compdump:44> print -r - \''dpkg-query'\' \''_dpkg'\'
+compdump:43> _d_f=dpkg-reconfigure
+compdump:44> print -r - \''dpkg-reconfigure'\' \''_dpkg'\'
+compdump:43> _d_f=dpkg-repack
+compdump:44> print -r - \''dpkg-repack'\' \''_dpkg-repack'\'
+compdump:43> _d_f=dpkg-source
+compdump:44> print -r - \''dpkg-source'\' \''_dpkg_source'\'
+compdump:43> _d_f=dput
+compdump:44> print -r - \''dput'\' \''_dput'\'
+compdump:43> _d_f=dsh
+compdump:44> print -r - \''dsh'\' \''_dsh'\'
+compdump:43> _d_f=dtrace
+compdump:44> print -r - \''dtrace'\' \''_dtrace'\'
+compdump:43> _d_f=du
+compdump:44> print -r - \''du'\' \''_du'\'
+compdump:43> _d_f=dumpadm
+compdump:44> print -r - \''dumpadm'\' \''_dumpadm'\'
+compdump:43> _d_f=dumper
+compdump:44> print -r - \''dumper'\' \''_dumper'\'
+compdump:43> _d_f=dumper.exe
+compdump:44> print -r - \''dumper.exe'\' \''_dumper'\'
+compdump:43> _d_f=dupload
+compdump:44> print -r - \''dupload'\' \''_dupload'\'
+compdump:43> _d_f=dvibook
+compdump:44> print -r - \''dvibook'\' \''_dvi'\'
+compdump:43> _d_f=dviconcat
+compdump:44> print -r - \''dviconcat'\' \''_dvi'\'
+compdump:43> _d_f=dvicopy
+compdump:44> print -r - \''dvicopy'\' \''_dvi'\'
+compdump:43> _d_f=dvidvi
+compdump:44> print -r - \''dvidvi'\' \''_dvi'\'
+compdump:43> _d_f=dvipdf
+compdump:44> print -r - \''dvipdf'\' \''_dvi'\'
+compdump:43> _d_f=dvips
+compdump:44> print -r - \''dvips'\' \''_dvi'\'
+compdump:43> _d_f=dviselect
+compdump:44> print -r - \''dviselect'\' \''_dvi'\'
+compdump:43> _d_f=dvitodvi
+compdump:44> print -r - \''dvitodvi'\' \''_dvi'\'
+compdump:43> _d_f=dvitype
+compdump:44> print -r - \''dvitype'\' \''_dvi'\'
+compdump:43> _d_f=dwb
+compdump:44> print -r - \''dwb'\' \''_webbrowser'\'
+compdump:43> _d_f=eatmydata
+compdump:44> print -r - \''eatmydata'\' \''_precommand'\'
+compdump:43> _d_f=ecasound
+compdump:44> print -r - \''ecasound'\' \''_ecasound'\'
+compdump:43> _d_f=echotc
+compdump:44> print -r - \''echotc'\' \''_echotc'\'
+compdump:43> _d_f=echoti
+compdump:44> print -r - \''echoti'\' \''_echoti'\'
+compdump:43> _d_f=egrep
+compdump:44> print -r - \''egrep'\' \''_grep'\'
+compdump:43> _d_f=elfdump
+compdump:44> print -r - \''elfdump'\' \''_elfdump'\'
+compdump:43> _d_f=elinks
+compdump:44> print -r - \''elinks'\' \''_elinks'\'
+compdump:43> _d_f=elm
+compdump:44> print -r - \''elm'\' \''_elm'\'
+compdump:43> _d_f=emulate
+compdump:44> print -r - \''emulate'\' \''_emulate'\'
+compdump:43> _d_f=enable
+compdump:44> print -r - \''enable'\' \''_enable'\'
+compdump:43> _d_f=enscript
+compdump:44> print -r - \''enscript'\' \''_enscript'\'
+compdump:43> _d_f=entr
+compdump:44> print -r - \''entr'\' \''_entr'\'
+compdump:43> _d_f=env
+compdump:44> print -r - \''env'\' \''_env'\'
+compdump:43> _d_f=epdfview
+compdump:44> print -r - \''epdfview'\' \''_pdf'\'
+compdump:43> _d_f=epsffit
+compdump:44> print -r - \''epsffit'\' \''_psutils'\'
+compdump:43> _d_f=-equal-
+compdump:44> print -r - \''-equal-'\' \''_equal'\'
+compdump:43> _d_f=erb
+compdump:44> print -r - \''erb'\' \''_ruby'\'
+compdump:43> _d_f=espeak
+compdump:44> print -r - \''espeak'\' \''_espeak'\'
+compdump:43> _d_f=etags
+compdump:44> print -r - \''etags'\' \''_etags'\'
+compdump:43> _d_f=ethtool
+compdump:44> print -r - \''ethtool'\' \''_ethtool'\'
+compdump:43> _d_f=eu-nm
+compdump:44> print -r - \''eu-nm'\' \''_nm'\'
+compdump:43> _d_f=eu-readelf
+compdump:44> print -r - \''eu-readelf'\' \''_readelf'\'
+compdump:43> _d_f=eval
+compdump:44> print -r - \''eval'\' \''_precommand'\'
+compdump:43> _d_f=eview
+compdump:44> print -r - \''eview'\' \''_vim'\'
+compdump:43> _d_f=evim
+compdump:44> print -r - \''evim'\' \''_vim'\'
+compdump:43> _d_f=evince
+compdump:44> print -r - \''evince'\' \''_evince'\'
+compdump:43> _d_f=exec
+compdump:44> print -r - \''exec'\' \''_precommand'\'
+compdump:43> _d_f=explodepkg
+compdump:44> print -r - \''explodepkg'\' \''_pkgtool'\'
+compdump:43> _d_f=export
+compdump:44> print -r - \''export'\' \''_typeset'\'
+compdump:43> _d_f=express
+compdump:44> print -r - \''express'\' \''_webbrowser'\'
+compdump:43> _d_f=extcheck
+compdump:44> print -r - \''extcheck'\' \''_java'\'
+compdump:43> _d_f=extractres
+compdump:44> print -r - \''extractres'\' \''_psutils'\'
+compdump:43> _d_f=fakeroot
+compdump:44> print -r - \''fakeroot'\' \''_fakeroot'\'
+compdump:43> _d_f=false
+compdump:44> print -r - \''false'\' \''_nothing'\'
+compdump:43> _d_f=fc
+compdump:44> print -r - \''fc'\' \''_fc'\'
+compdump:43> _d_f=fc-list
+compdump:44> print -r - \''fc-list'\' \''_xft_fonts'\'
+compdump:43> _d_f=fc-match
+compdump:44> print -r - \''fc-match'\' \''_xft_fonts'\'
+compdump:43> _d_f=feh
+compdump:44> print -r - \''feh'\' \''_feh'\'
+compdump:43> _d_f=fetch
+compdump:44> print -r - \''fetch'\' \''_fetch'\'
+compdump:43> _d_f=fetchmail
+compdump:44> print -r - \''fetchmail'\' \''_fetchmail'\'
+compdump:43> _d_f=ffmpeg
+compdump:44> print -r - \''ffmpeg'\' \''_ffmpeg'\'
+compdump:43> _d_f=fg
+compdump:44> print -r - \''fg'\' \''_jobs_fg'\'
+compdump:43> _d_f=fgrep
+compdump:44> print -r - \''fgrep'\' \''_grep'\'
+compdump:43> _d_f=figlet
+compdump:44> print -r - \''figlet'\' \''_figlet'\'
+compdump:43> _d_f=filterdiff
+compdump:44> print -r - \''filterdiff'\' \''_patchutils'\'
+compdump:43> _d_f=find
+compdump:44> print -r - \''find'\' \''_find'\'
+compdump:43> _d_f=findaffix
+compdump:44> print -r - \''findaffix'\' \''_ispell'\'
+compdump:43> _d_f=finger
+compdump:44> print -r - \''finger'\' \''_finger'\'
+compdump:43> _d_f=fink
+compdump:44> print -r - \''fink'\' \''_fink'\'
+compdump:43> _d_f=firefox
+compdump:44> print -r - \''firefox'\' \''_mozilla'\'
+compdump:43> _d_f=-first-
+compdump:44> print -r - \''-first-'\' \''_first'\'
+compdump:43> _d_f=fixdlsrps
+compdump:44> print -r - \''fixdlsrps'\' \''_psutils'\'
+compdump:43> _d_f=fixfmps
+compdump:44> print -r - \''fixfmps'\' \''_psutils'\'
+compdump:43> _d_f=fixmacps
+compdump:44> print -r - \''fixmacps'\' \''_psutils'\'
+compdump:43> _d_f=fixpsditps
+compdump:44> print -r - \''fixpsditps'\' \''_psutils'\'
+compdump:43> _d_f=fixpspps
+compdump:44> print -r - \''fixpspps'\' \''_psutils'\'
+compdump:43> _d_f=fixscribeps
+compdump:44> print -r - \''fixscribeps'\' \''_psutils'\'
+compdump:43> _d_f=fixtpps
+compdump:44> print -r - \''fixtpps'\' \''_psutils'\'
+compdump:43> _d_f=fixwfwps
+compdump:44> print -r - \''fixwfwps'\' \''_psutils'\'
+compdump:43> _d_f=fixwpps
+compdump:44> print -r - \''fixwpps'\' \''_psutils'\'
+compdump:43> _d_f=fixwwps
+compdump:44> print -r - \''fixwwps'\' \''_psutils'\'
+compdump:43> _d_f=flasher
+compdump:44> print -r - \''flasher'\' \''_flasher'\'
+compdump:43> _d_f=flex
+compdump:44> print -r - \''flex'\' \''_flex'\'
+compdump:43> _d_f=flex++
+compdump:44> print -r - \''flex++'\' \''_flex'\'
+compdump:43> _d_f=flipdiff
+compdump:44> print -r - \''flipdiff'\' \''_patchutils'\'
+compdump:43> _d_f=flist
+compdump:44> print -r - \''flist'\' \''_mh'\'
+compdump:43> _d_f=flists
+compdump:44> print -r - \''flists'\' \''_mh'\'
+compdump:43> _d_f=float
+compdump:44> print -r - \''float'\' \''_typeset'\'
+compdump:43> _d_f=flowadm
+compdump:44> print -r - \''flowadm'\' \''_flowadm'\'
+compdump:43> _d_f=fmadm
+compdump:44> print -r - \''fmadm'\' \''_fmadm'\'
+compdump:43> _d_f=fmt
+compdump:44> print -r - \''fmt'\' \''_fmt'\'
+compdump:43> _d_f=fmttest
+compdump:44> print -r - \''fmttest'\' \''_mh'\'
+compdump:43> _d_f=fned
+compdump:44> print -r - \''fned'\' \''_zed'\'
+compdump:43> _d_f=fnext
+compdump:44> print -r - \''fnext'\' \''_mh'\'
+compdump:43> _d_f=folder
+compdump:44> print -r - \''folder'\' \''_mh'\'
+compdump:43> _d_f=folders
+compdump:44> print -r - \''folders'\' \''_mh'\'
+compdump:43> _d_f=fortune
+compdump:44> print -r - \''fortune'\' \''_fortune'\'
+compdump:43> _d_f=forw
+compdump:44> print -r - \''forw'\' \''_mh'\'
+compdump:43> _d_f=fprev
+compdump:44> print -r - \''fprev'\' \''_mh'\'
+compdump:43> _d_f=freebsd-make
+compdump:44> print -r - \''freebsd-make'\' \''_make'\'
+compdump:43> _d_f=freebsd-update
+compdump:44> print -r - \''freebsd-update'\' \''_freebsd-update'\'
+compdump:43> _d_f=freezer
+compdump:44> print -r - \''freezer'\' \''_openstack'\'
+compdump:43> _d_f=fsh
+compdump:44> print -r - \''fsh'\' \''_fsh'\'
+compdump:43> _d_f=fstat
+compdump:44> print -r - \''fstat'\' \''_fstat'\'
+compdump:43> _d_f=ftp
+compdump:44> print -r - \''ftp'\' \''_hosts'\'
+compdump:43> _d_f=functions
+compdump:44> print -r - \''functions'\' \''_typeset'\'
+compdump:43> _d_f=fuser
+compdump:44> print -r - \''fuser'\' \''_fuser'\'
+compdump:43> _d_f=fusermount
+compdump:44> print -r - \''fusermount'\' \''_fusermount'\'
+compdump:43> _d_f=fwhois
+compdump:44> print -r - \''fwhois'\' \''_whois'\'
+compdump:43> _d_f=fw_update
+compdump:44> print -r - \''fw_update'\' \''_fw_update'\'
+compdump:43> _d_f=g++
+compdump:44> print -r - \''g++'\' \''_gcc'\'
+compdump:43> _d_f=galeon
+compdump:44> print -r - \''galeon'\' \''_webbrowser'\'
+compdump:43> _d_f=gawk
+compdump:44> print -r - \''gawk'\' \''_awk'\'
+compdump:43> _d_f=gbasename
+compdump:44> print -r - \''gbasename'\' \''_basename'\'
+compdump:43> _d_f=gcc
+compdump:44> print -r - \''gcc'\' \''_gcc'\'
+compdump:43> _d_f=gccgo
+compdump:44> print -r - \''gccgo'\' \''_go'\'
+compdump:43> _d_f=gchmod
+compdump:44> print -r - \''gchmod'\' \''_chmod'\'
+compdump:43> _d_f=gcmp
+compdump:44> print -r - \''gcmp'\' \''_cmp'\'
+compdump:43> _d_f=gcomm
+compdump:44> print -r - \''gcomm'\' \''_comm'\'
+compdump:43> _d_f=gcore
+compdump:44> print -r - \''gcore'\' \''_gcore'\'
+compdump:43> _d_f=gcp
+compdump:44> print -r - \''gcp'\' \''_cp'\'
+compdump:43> _d_f=gdate
+compdump:44> print -r - \''gdate'\' \''_date'\'
+compdump:43> _d_f=gdb
+compdump:44> print -r - \''gdb'\' \''_gdb'\'
+compdump:43> _d_f=gdiff
+compdump:44> print -r - \''gdiff'\' \''_diff'\'
+compdump:43> _d_f=gdu
+compdump:44> print -r - \''gdu'\' \''_du'\'
+compdump:43> _d_f=gegrep
+compdump:44> print -r - \''gegrep'\' \''_grep'\'
+compdump:43> _d_f=genisoimage
+compdump:44> print -r - \''genisoimage'\' \''_genisoimage'\'
+compdump:43> _d_f=get
+compdump:44> print -r - \''get'\' \''_sccs'\'
+compdump:43> _d_f=getafm
+compdump:44> print -r - \''getafm'\' \''_psutils'\'
+compdump:43> _d_f=getclip
+compdump:44> print -r - \''getclip'\' \''_getclip'\'
+compdump:43> _d_f=getclip.exe
+compdump:44> print -r - \''getclip.exe'\' \''_getclip'\'
+compdump:43> _d_f=getconf
+compdump:44> print -r - \''getconf'\' \''_getconf'\'
+compdump:43> _d_f=getent
+compdump:44> print -r - \''getent'\' \''_getent'\'
+compdump:43> _d_f=getfacl
+compdump:44> print -r - \''getfacl'\' \''_getfacl'\'
+compdump:43> _d_f=getfacl.exe
+compdump:44> print -r - \''getfacl.exe'\' \''_getfacl'\'
+compdump:43> _d_f=getfattr
+compdump:44> print -r - \''getfattr'\' \''_attr'\'
+compdump:43> _d_f=getmail
+compdump:44> print -r - \''getmail'\' \''_getmail'\'
+compdump:43> _d_f=getopts
+compdump:44> print -r - \''getopts'\' \''_vars'\'
+compdump:43> _d_f=gex
+compdump:44> print -r - \''gex'\' \''_vim'\'
+compdump:43> _d_f=gfgrep
+compdump:44> print -r - \''gfgrep'\' \''_grep'\'
+compdump:43> _d_f=gfind
+compdump:44> print -r - \''gfind'\' \''_find'\'
+compdump:43> _d_f=ggrep
+compdump:44> print -r - \''ggrep'\' \''_grep'\'
+compdump:43> _d_f=ggv
+compdump:44> print -r - \''ggv'\' \''_gnome-gv'\'
+compdump:43> _d_f=ghostscript
+compdump:44> print -r - \''ghostscript'\' \''_gs'\'
+compdump:43> _d_f=ghostview
+compdump:44> print -r - \''ghostview'\' \''_pspdf'\'
+compdump:43> _d_f=gid
+compdump:44> print -r - \''gid'\' \''_id'\'
+compdump:43> _d_f=git
+compdump:44> print -r - \''git'\' \''_git'\'
+compdump:43> _d_f=git-buildpackage
+compdump:44> print -r - \''git-buildpackage'\' \''_git-buildpackage'\'
+compdump:43> _d_f=git-cvsserver
+compdump:44> print -r - \''git-cvsserver'\' \''_git'\'
+compdump:43> _d_f=gitk
+compdump:44> print -r - \''gitk'\' \''_git'\'
+compdump:43> _d_f=git-receive-pack
+compdump:44> print -r - \''git-receive-pack'\' \''_git'\'
+compdump:43> _d_f=git-shell
+compdump:44> print -r - \''git-shell'\' \''_git'\'
+compdump:43> _d_f=git-upload-archive
+compdump:44> print -r - \''git-upload-archive'\' \''_git'\'
+compdump:43> _d_f=git-upload-pack
+compdump:44> print -r - \''git-upload-pack'\' \''_git'\'
+compdump:43> _d_f=gjoin
+compdump:44> print -r - \''gjoin'\' \''_join'\'
+compdump:43> _d_f=glance
+compdump:44> print -r - \''glance'\' \''_openstack'\'
+compdump:43> _d_f=gln
+compdump:44> print -r - \''gln'\' \''_ln'\'
+compdump:43> _d_f=global
+compdump:44> print -r - \''global'\' \''_global'\'
+compdump:43> _d_f=glocate
+compdump:44> print -r - \''glocate'\' \''_locate'\'
+compdump:43> _d_f=gls
+compdump:44> print -r - \''gls'\' \''_ls'\'
+compdump:43> _d_f=gm
+compdump:44> print -r - \''gm'\' \''_graphicsmagick'\'
+compdump:43> _d_f=gmake
+compdump:44> print -r - \''gmake'\' \''_make'\'
+compdump:43> _d_f=gmd5sum
+compdump:44> print -r - \''gmd5sum'\' \''_md5sum'\'
+compdump:43> _d_f=gmkdir
+compdump:44> print -r - \''gmkdir'\' \''_mkdir'\'
+compdump:43> _d_f=gmplayer
+compdump:44> print -r - \''gmplayer'\' \''_mplayer'\'
+compdump:43> _d_f=gnl
+compdump:44> print -r - \''gnl'\' \''_nl'\'
+compdump:43> _d_f=gnocchi
+compdump:44> print -r - \''gnocchi'\' \''_openstack'\'
+compdump:43> _d_f=gnome-gv
+compdump:44> print -r - \''gnome-gv'\' \''_gnome-gv'\'
+compdump:43> _d_f=gnupod_addsong
+compdump:44> print -r - \''gnupod_addsong'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_addsong.pl
+compdump:44> print -r - \''gnupod_addsong.pl'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_check
+compdump:44> print -r - \''gnupod_check'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_check.pl
+compdump:44> print -r - \''gnupod_check.pl'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_INIT
+compdump:44> print -r - \''gnupod_INIT'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_INIT.pl
+compdump:44> print -r - \''gnupod_INIT.pl'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_search
+compdump:44> print -r - \''gnupod_search'\' \''_gnupod'\'
+compdump:43> _d_f=gnupod_search.pl
+compdump:44> print -r - \''gnupod_search.pl'\' \''_gnupod'\'
+compdump:43> _d_f=gnutls-cli
+compdump:44> print -r - \''gnutls-cli'\' \''_gnutls'\'
+compdump:43> _d_f=gnutls-cli-debug
+compdump:44> print -r - \''gnutls-cli-debug'\' \''_gnutls'\'
+compdump:43> _d_f=god
+compdump:44> print -r - \''god'\' \''_od'\'
+compdump:43> _d_f=gofmt
+compdump:44> print -r - \''gofmt'\' \''_go'\'
+compdump:43> _d_f=gpasswd
+compdump:44> print -r - \''gpasswd'\' \''_gpasswd'\'
+compdump:43> _d_f=gpatch
+compdump:44> print -r - \''gpatch'\' \''_patch'\'
+compdump:43> _d_f=gpg
+compdump:44> print -r - \''gpg'\' \''_gpg'\'
+compdump:43> _d_f=gpg2
+compdump:44> print -r - \''gpg2'\' \''_gpg'\'
+compdump:43> _d_f=gpgv
+compdump:44> print -r - \''gpgv'\' \''_gpg'\'
+compdump:43> _d_f=gpg-zip
+compdump:44> print -r - \''gpg-zip'\' \''_gpg'\'
+compdump:43> _d_f=gphoto2
+compdump:44> print -r - \''gphoto2'\' \''_gphoto2'\'
+compdump:43> _d_f=gprof
+compdump:44> print -r - \''gprof'\' \''_gprof'\'
+compdump:43> _d_f=gqview
+compdump:44> print -r - \''gqview'\' \''_gqview'\'
+compdump:43> _d_f=gradle
+compdump:44> print -r - \''gradle'\' \''_gradle'\'
+compdump:43> _d_f=gradlew
+compdump:44> print -r - \''gradlew'\' \''_gradle'\'
+compdump:43> _d_f=grail
+compdump:44> print -r - \''grail'\' \''_webbrowser'\'
+compdump:43> _d_f=grep
+compdump:44> print -r - \''grep'\' \''_grep'\'
+compdump:43> _d_f=grepdiff
+compdump:44> print -r - \''grepdiff'\' \''_patchutils'\'
+compdump:43> _d_f=grep-excuses
+compdump:44> print -r - \''grep-excuses'\' \''_grep-excuses'\'
+compdump:43> _d_f=grm
+compdump:44> print -r - \''grm'\' \''_rm'\'
+compdump:43> _d_f=groff
+compdump:44> print -r - \''groff'\' \''_groff'\'
+compdump:43> _d_f=groupadd
+compdump:44> print -r - \''groupadd'\' \''_user_admin'\'
+compdump:43> _d_f=groupdel
+compdump:44> print -r - \''groupdel'\' \''_groups'\'
+compdump:43> _d_f=groupmod
+compdump:44> print -r - \''groupmod'\' \''_user_admin'\'
+compdump:43> _d_f=groups
+compdump:44> print -r - \''groups'\' \''_users'\'
+compdump:43> _d_f=growisofs
+compdump:44> print -r - \''growisofs'\' \''_growisofs'\'
+compdump:43> _d_f=gs
+compdump:44> print -r - \''gs'\' \''_gs'\'
+compdump:43> _d_f=gsbj
+compdump:44> print -r - \''gsbj'\' \''_pspdf'\'
+compdump:43> _d_f=gsdj
+compdump:44> print -r - \''gsdj'\' \''_pspdf'\'
+compdump:43> _d_f=gsdj500
+compdump:44> print -r - \''gsdj500'\' \''_pspdf'\'
+compdump:43> _d_f=gsed
+compdump:44> print -r - \''gsed'\' \''_sed'\'
+compdump:43> _d_f=gsettings
+compdump:44> print -r - \''gsettings'\' \''_gsettings'\'
+compdump:43> _d_f=gslj
+compdump:44> print -r - \''gslj'\' \''_pspdf'\'
+compdump:43> _d_f=gslp
+compdump:44> print -r - \''gslp'\' \''_pspdf'\'
+compdump:43> _d_f=gsnd
+compdump:44> print -r - \''gsnd'\' \''_pspdf'\'
+compdump:43> _d_f=gsort
+compdump:44> print -r - \''gsort'\' \''_sort'\'
+compdump:43> _d_f=gstat
+compdump:44> print -r - \''gstat'\' \''_gstat'\'
+compdump:43> _d_f=gtar
+compdump:44> print -r - \''gtar'\' \''_tar'\'
+compdump:43> _d_f=gtouch
+compdump:44> print -r - \''gtouch'\' \''_touch'\'
+compdump:43> _d_f=guilt
+compdump:44> print -r - \''guilt'\' \''_guilt'\'
+compdump:43> _d_f=guilt-add
+compdump:44> print -r - \''guilt-add'\' \''_guilt'\'
+compdump:43> _d_f=guilt-applied
+compdump:44> print -r - \''guilt-applied'\' \''_guilt'\'
+compdump:43> _d_f=guilt-delete
+compdump:44> print -r - \''guilt-delete'\' \''_guilt'\'
+compdump:43> _d_f=guilt-files
+compdump:44> print -r - \''guilt-files'\' \''_guilt'\'
+compdump:43> _d_f=guilt-fold
+compdump:44> print -r - \''guilt-fold'\' \''_guilt'\'
+compdump:43> _d_f=guilt-fork
+compdump:44> print -r - \''guilt-fork'\' \''_guilt'\'
+compdump:43> _d_f=guilt-header
+compdump:44> print -r - \''guilt-header'\' \''_guilt'\'
+compdump:43> _d_f=guilt-help
+compdump:44> print -r - \''guilt-help'\' \''_guilt'\'
+compdump:43> _d_f=guilt-import
+compdump:44> print -r - \''guilt-import'\' \''_guilt'\'
+compdump:43> _d_f=guilt-import-commit
+compdump:44> print -r - \''guilt-import-commit'\' \''_guilt'\'
+compdump:43> _d_f=guilt-init
+compdump:44> print -r - \''guilt-init'\' \''_guilt'\'
+compdump:43> _d_f=guilt-new
+compdump:44> print -r - \''guilt-new'\' \''_guilt'\'
+compdump:43> _d_f=guilt-next
+compdump:44> print -r - \''guilt-next'\' \''_guilt'\'
+compdump:43> _d_f=guilt-patchbomb
+compdump:44> print -r - \''guilt-patchbomb'\' \''_guilt'\'
+compdump:43> _d_f=guilt-pop
+compdump:44> print -r - \''guilt-pop'\' \''_guilt'\'
+compdump:43> _d_f=guilt-prev
+compdump:44> print -r - \''guilt-prev'\' \''_guilt'\'
+compdump:43> _d_f=guilt-push
+compdump:44> print -r - \''guilt-push'\' \''_guilt'\'
+compdump:43> _d_f=guilt-rebase
+compdump:44> print -r - \''guilt-rebase'\' \''_guilt'\'
+compdump:43> _d_f=guilt-refresh
+compdump:44> print -r - \''guilt-refresh'\' \''_guilt'\'
+compdump:43> _d_f=guilt-rm
+compdump:44> print -r - \''guilt-rm'\' \''_guilt'\'
+compdump:43> _d_f=guilt-series
+compdump:44> print -r - \''guilt-series'\' \''_guilt'\'
+compdump:43> _d_f=guilt-status
+compdump:44> print -r - \''guilt-status'\' \''_guilt'\'
+compdump:43> _d_f=guilt-top
+compdump:44> print -r - \''guilt-top'\' \''_guilt'\'
+compdump:43> _d_f=guilt-unapplied
+compdump:44> print -r - \''guilt-unapplied'\' \''_guilt'\'
+compdump:43> _d_f=guniq
+compdump:44> print -r - \''guniq'\' \''_uniq'\'
+compdump:43> _d_f=gunzip
+compdump:44> print -r - \''gunzip'\' \''_gzip'\'
+compdump:43> _d_f=gv
+compdump:44> print -r - \''gv'\' \''_gv'\'
+compdump:43> _d_f=gview
+compdump:44> print -r - \''gview'\' \''_vim'\'
+compdump:43> _d_f=gvim
+compdump:44> print -r - \''gvim'\' \''_vim'\'
+compdump:43> _d_f=gvimdiff
+compdump:44> print -r - \''gvimdiff'\' \''_vim'\'
+compdump:43> _d_f=gwc
+compdump:44> print -r - \''gwc'\' \''_wc'\'
+compdump:43> _d_f=gxargs
+compdump:44> print -r - \''gxargs'\' \''_xargs'\'
+compdump:43> _d_f=gzcat
+compdump:44> print -r - \''gzcat'\' \''_gzip'\'
+compdump:43> _d_f=gzegrep
+compdump:44> print -r - \''gzegrep'\' \''_grep'\'
+compdump:43> _d_f=gzfgrep
+compdump:44> print -r - \''gzfgrep'\' \''_grep'\'
+compdump:43> _d_f=gzgrep
+compdump:44> print -r - \''gzgrep'\' \''_grep'\'
+compdump:43> _d_f=gzilla
+compdump:44> print -r - \''gzilla'\' \''_webbrowser'\'
+compdump:43> _d_f=gzip
+compdump:44> print -r - \''gzip'\' \''_gzip'\'
+compdump:43> _d_f=hash
+compdump:44> print -r - \''hash'\' \''_hash'\'
+compdump:43> _d_f=hdiutil
+compdump:44> print -r - \''hdiutil'\' \''_hdiutil'\'
+compdump:43> _d_f=head
+compdump:44> print -r - \''head'\' \''_head'\'
+compdump:43> _d_f=heat
+compdump:44> print -r - \''heat'\' \''_openstack'\'
+compdump:43> _d_f=help
+compdump:44> print -r - \''help'\' \''_sccs'\'
+compdump:43> _d_f=hg
+compdump:44> print -r - \''hg'\' \''_hg'\'
+compdump:43> _d_f=hilite
+compdump:44> print -r - \''hilite'\' \''_precommand'\'
+compdump:43> _d_f=history
+compdump:44> print -r - \''history'\' \''_fc'\'
+compdump:43> _d_f=host
+compdump:44> print -r - \''host'\' \''_hosts'\'
+compdump:43> _d_f=hostnamectl
+compdump:44> print -r - \''hostnamectl'\' \''_hostnamectl'\'
+compdump:43> _d_f=hotjava
+compdump:44> print -r - \''hotjava'\' \''_webbrowser'\'
+compdump:43> _d_f=htop
+compdump:44> print -r - \''htop'\' \''_htop'\'
+compdump:43> _d_f=hwinfo
+compdump:44> print -r - \''hwinfo'\' \''_hwinfo'\'
+compdump:43> _d_f=iceweasel
+compdump:44> print -r - \''iceweasel'\' \''_mozilla'\'
+compdump:43> _d_f=icombine
+compdump:44> print -r - \''icombine'\' \''_ispell'\'
+compdump:43> _d_f=iconv
+compdump:44> print -r - \''iconv'\' \''_iconv'\'
+compdump:43> _d_f=iconvconfig
+compdump:44> print -r - \''iconvconfig'\' \''_iconvconfig'\'
+compdump:43> _d_f=id
+compdump:44> print -r - \''id'\' \''_id'\'
+compdump:43> _d_f=identify
+compdump:44> print -r - \''identify'\' \''_imagemagick'\'
+compdump:43> _d_f=ifconfig
+compdump:44> print -r - \''ifconfig'\' \''_ifconfig'\'
+compdump:43> _d_f=ifdown
+compdump:44> print -r - \''ifdown'\' \''_net_interfaces'\'
+compdump:43> _d_f=iftop
+compdump:44> print -r - \''iftop'\' \''_iftop'\'
+compdump:43> _d_f=ifup
+compdump:44> print -r - \''ifup'\' \''_net_interfaces'\'
+compdump:43> _d_f=ijoin
+compdump:44> print -r - \''ijoin'\' \''_ispell'\'
+compdump:43> _d_f=import
+compdump:44> print -r - \''import'\' \''_imagemagick'\'
+compdump:43> _d_f=inc
+compdump:44> print -r - \''inc'\' \''_mh'\'
+compdump:43> _d_f=includeres
+compdump:44> print -r - \''includeres'\' \''_psutils'\'
+compdump:43> _d_f=inetadm
+compdump:44> print -r - \''inetadm'\' \''_inetadm'\'
+compdump:43> _d_f=info
+compdump:44> print -r - \''info'\' \''_texinfo'\'
+compdump:43> _d_f=infocmp
+compdump:44> print -r - \''infocmp'\' \''_terminals'\'
+compdump:43> _d_f=initctl
+compdump:44> print -r - \''initctl'\' \''_initctl'\'
+compdump:43> _d_f=insmod
+compdump:44> print -r - \''insmod'\' \''_modutils'\'
+compdump:43> _d_f=install-info
+compdump:44> print -r - \''install-info'\' \''_texinfo'\'
+compdump:43> _d_f=installpkg
+compdump:44> print -r - \''installpkg'\' \''_pkgtool'\'
+compdump:43> _d_f=integer
+compdump:44> print -r - \''integer'\' \''_typeset'\'
+compdump:43> _d_f=interdiff
+compdump:44> print -r - \''interdiff'\' \''_patchutils'\'
+compdump:43> _d_f=invoke-rc.d
+compdump:44> print -r - \''invoke-rc.d'\' \''_invoke-rc.d'\'
+compdump:43> _d_f=ionice
+compdump:44> print -r - \''ionice'\' \''_ionice'\'
+compdump:43> _d_f=iostat
+compdump:44> print -r - \''iostat'\' \''_iostat'\'
+compdump:43> _d_f=ip
+compdump:44> print -r - \''ip'\' \''_ip'\'
+compdump:43> _d_f=ipadm
+compdump:44> print -r - \''ipadm'\' \''_ipadm'\'
+compdump:43> _d_f=ipset
+compdump:44> print -r - \''ipset'\' \''_ipset'\'
+compdump:43> _d_f=iptables
+compdump:44> print -r - \''iptables'\' \''_iptables'\'
+compdump:43> _d_f=iptables-restore
+compdump:44> print -r - \''iptables-restore'\' \''_iptables'\'
+compdump:43> _d_f=iptables-save
+compdump:44> print -r - \''iptables-save'\' \''_iptables'\'
+compdump:43> _d_f=irb
+compdump:44> print -r - \''irb'\' \''_ruby'\'
+compdump:43> _d_f=ironic
+compdump:44> print -r - \''ironic'\' \''_openstack'\'
+compdump:43> _d_f=irssi
+compdump:44> print -r - \''irssi'\' \''_irssi'\'
+compdump:43> _d_f=isag
+compdump:44> print -r - \''isag'\' \''_sysstat'\'
+compdump:43> _d_f=ispell
+compdump:44> print -r - \''ispell'\' \''_ispell'\'
+compdump:43> _d_f=iwconfig
+compdump:44> print -r - \''iwconfig'\' \''_iwconfig'\'
+compdump:43> _d_f=jadetex
+compdump:44> print -r - \''jadetex'\' \''_tex'\'
+compdump:43> _d_f=jar
+compdump:44> print -r - \''jar'\' \''_java'\'
+compdump:43> _d_f=jarsigner
+compdump:44> print -r - \''jarsigner'\' \''_java'\'
+compdump:43> _d_f=java
+compdump:44> print -r - \''java'\' \''_java'\'
+compdump:43> _d_f=javac
+compdump:44> print -r - \''javac'\' \''_java'\'
+compdump:43> _d_f=javadoc
+compdump:44> print -r - \''javadoc'\' \''_java'\'
+compdump:43> _d_f=javah
+compdump:44> print -r - \''javah'\' \''_java'\'
+compdump:43> _d_f=javap
+compdump:44> print -r - \''javap'\' \''_java'\'
+compdump:43> _d_f=jdb
+compdump:44> print -r - \''jdb'\' \''_java'\'
+compdump:43> _d_f=jexec
+compdump:44> print -r - \''jexec'\' \''_jexec'\'
+compdump:43> _d_f=jls
+compdump:44> print -r - \''jls'\' \''_jls'\'
+compdump:43> _d_f=jobs
+compdump:44> print -r - \''jobs'\' \''_jobs_builtin'\'
+compdump:43> _d_f=joe
+compdump:44> print -r - \''joe'\' \''_joe'\'
+compdump:43> _d_f=join
+compdump:44> print -r - \''join'\' \''_join'\'
+compdump:43> _d_f=jot
+compdump:44> print -r - \''jot'\' \''_jot'\'
+compdump:43> _d_f=journalctl
+compdump:44> print -r - \''journalctl'\' \''_journalctl'\'
+compdump:43> _d_f=kernel-install
+compdump:44> print -r - \''kernel-install'\' \''_kernel-install'\'
+compdump:43> _d_f=keystone
+compdump:44> print -r - \''keystone'\' \''_openstack'\'
+compdump:43> _d_f=keytool
+compdump:44> print -r - \''keytool'\' \''_java'\'
+compdump:43> _d_f=kfmclient
+compdump:44> print -r - \''kfmclient'\' \''_kfmclient'\'
+compdump:43> _d_f=kill
+compdump:44> print -r - \''kill'\' \''_kill'\'
+compdump:43> _d_f=killall
+compdump:44> print -r - \''killall'\' \''_killall'\'
+compdump:43> _d_f=killall5
+compdump:44> print -r - \''killall5'\' \''_killall'\'
+compdump:43> _d_f=kioclient
+compdump:44> print -r - \''kioclient'\' \''_kfmclient'\'
+compdump:43> _d_f=kldload
+compdump:44> print -r - \''kldload'\' \''_kld'\'
+compdump:43> _d_f=kldunload
+compdump:44> print -r - \''kldunload'\' \''_kld'\'
+compdump:43> _d_f=knock
+compdump:44> print -r - \''knock'\' \''_knock'\'
+compdump:43> _d_f=konqueror
+compdump:44> print -r - \''konqueror'\' \''_webbrowser'\'
+compdump:43> _d_f=kpartx
+compdump:44> print -r - \''kpartx'\' \''_kpartx'\'
+compdump:43> _d_f=kpdf
+compdump:44> print -r - \''kpdf'\' \''_pdf'\'
+compdump:43> _d_f=ksh
+compdump:44> print -r - \''ksh'\' \''_sh'\'
+compdump:43> _d_f=kvno
+compdump:44> print -r - \''kvno'\' \''_kvno'\'
+compdump:43> _d_f=last
+compdump:44> print -r - \''last'\' \''_last'\'
+compdump:43> _d_f=lastb
+compdump:44> print -r - \''lastb'\' \''_last'\'
+compdump:43> _d_f=latex
+compdump:44> print -r - \''latex'\' \''_tex'\'
+compdump:43> _d_f=latexmk
+compdump:44> print -r - \''latexmk'\' \''_tex'\'
+compdump:43> _d_f=ldd
+compdump:44> print -r - \''ldd'\' \''_ldd'\'
+compdump:43> _d_f=less
+compdump:44> print -r - \''less'\' \''_less'\'
+compdump:43> _d_f=let
+compdump:44> print -r - \''let'\' \''_math'\'
+compdump:43> _d_f=lftp
+compdump:44> print -r - \''lftp'\' \''_ncftp'\'
+compdump:43> _d_f=lha
+compdump:44> print -r - \''lha'\' \''_lha'\'
+compdump:43> _d_f=light
+compdump:44> print -r - \''light'\' \''_webbrowser'\'
+compdump:43> _d_f=lighty-disable-mod
+compdump:44> print -r - \''lighty-disable-mod'\' \''_lighttpd'\'
+compdump:43> _d_f=lighty-enable-mod
+compdump:44> print -r - \''lighty-enable-mod'\' \''_lighttpd'\'
+compdump:43> _d_f=limit
+compdump:44> print -r - \''limit'\' \''_limit'\'
+compdump:43> _d_f=links
+compdump:44> print -r - \''links'\' \''_links'\'
+compdump:43> _d_f=lintian
+compdump:44> print -r - \''lintian'\' \''_lintian'\'
+compdump:43> _d_f=lintian-info
+compdump:44> print -r - \''lintian-info'\' \''_lintian'\'
+compdump:43> _d_f=linux
+compdump:44> print -r - \''linux'\' \''_uml'\'
+compdump:43> _d_f=lldb
+compdump:44> print -r - \''lldb'\' \''_lldb'\'
+compdump:43> _d_f=llvm-g++
+compdump:44> print -r - \''llvm-g++'\' \''_gcc'\'
+compdump:43> _d_f=llvm-gcc
+compdump:44> print -r - \''llvm-gcc'\' \''_gcc'\'
+compdump:43> _d_f=ln
+compdump:44> print -r - \''ln'\' \''_ln'\'
+compdump:43> _d_f=loadkeys
+compdump:44> print -r - \''loadkeys'\' \''_loadkeys'\'
+compdump:43> _d_f=local
+compdump:44> print -r - \''local'\' \''_typeset'\'
+compdump:43> _d_f=locale
+compdump:44> print -r - \''locale'\' \''_locale'\'
+compdump:43> _d_f=localectl
+compdump:44> print -r - \''localectl'\' \''_localectl'\'
+compdump:43> _d_f=localedef
+compdump:44> print -r - \''localedef'\' \''_localedef'\'
+compdump:43> _d_f=locate
+compdump:44> print -r - \''locate'\' \''_locate'\'
+compdump:43> _d_f=log
+compdump:44> print -r - \''log'\' \''_nothing'\'
+compdump:43> _d_f=loginctl
+compdump:44> print -r - \''loginctl'\' \''_loginctl'\'
+compdump:43> _d_f=logname
+compdump:44> print -r - \''logname'\' \''_nothing'\'
+compdump:43> _d_f=look
+compdump:44> print -r - \''look'\' \''_look'\'
+compdump:43> _d_f=lore
+compdump:44> print -r - \''lore'\' \''_twisted'\'
+compdump:43> _d_f=losetup
+compdump:44> print -r - \''losetup'\' \''_losetup'\'
+compdump:43> _d_f=lp
+compdump:44> print -r - \''lp'\' \''_lp'\'
+compdump:43> _d_f=lpadmin
+compdump:44> print -r - \''lpadmin'\' \''_lp'\'
+compdump:43> _d_f=lpinfo
+compdump:44> print -r - \''lpinfo'\' \''_lp'\'
+compdump:43> _d_f=lpoptions
+compdump:44> print -r - \''lpoptions'\' \''_lp'\'
+compdump:43> _d_f=lpq
+compdump:44> print -r - \''lpq'\' \''_lp'\'
+compdump:43> _d_f=lpr
+compdump:44> print -r - \''lpr'\' \''_lp'\'
+compdump:43> _d_f=lprm
+compdump:44> print -r - \''lprm'\' \''_lp'\'
+compdump:43> _d_f=lpstat
+compdump:44> print -r - \''lpstat'\' \''_lp'\'
+compdump:43> _d_f=ls
+compdump:44> print -r - \''ls'\' \''_ls'\'
+compdump:43> _d_f=lsblk
+compdump:44> print -r - \''lsblk'\' \''_lsblk'\'
+compdump:43> _d_f=lscfg
+compdump:44> print -r - \''lscfg'\' \''_lscfg'\'
+compdump:43> _d_f=lsdev
+compdump:44> print -r - \''lsdev'\' \''_lsdev'\'
+compdump:43> _d_f=lsdiff
+compdump:44> print -r - \''lsdiff'\' \''_patchutils'\'
+compdump:43> _d_f=lslv
+compdump:44> print -r - \''lslv'\' \''_lslv'\'
+compdump:43> _d_f=lsmod
+compdump:44> print -r - \''lsmod'\' \''_modutils'\'
+compdump:43> _d_f=lsof
+compdump:44> print -r - \''lsof'\' \''_lsof'\'
+compdump:43> _d_f=lspv
+compdump:44> print -r - \''lspv'\' \''_lspv'\'
+compdump:43> _d_f=lsusb
+compdump:44> print -r - \''lsusb'\' \''_lsusb'\'
+compdump:43> _d_f=lsvg
+compdump:44> print -r - \''lsvg'\' \''_lsvg'\'
+compdump:43> _d_f=ltrace
+compdump:44> print -r - \''ltrace'\' \''_ltrace'\'
+compdump:43> _d_f=lynx
+compdump:44> print -r - \''lynx'\' \''_lynx'\'
+compdump:43> _d_f=lzcat
+compdump:44> print -r - \''lzcat'\' \''_xz'\'
+compdump:43> _d_f=lzma
+compdump:44> print -r - \''lzma'\' \''_xz'\'
+compdump:43> _d_f=lzop
+compdump:44> print -r - \''lzop'\' \''_lzop'\'
+compdump:43> _d_f=m-a
+compdump:44> print -r - \''m-a'\' \''_module-assistant'\'
+compdump:43> _d_f=machinectl
+compdump:44> print -r - \''machinectl'\' \''_machinectl'\'
+compdump:43> _d_f=madison
+compdump:44> print -r - \''madison'\' \''_madison'\'
+compdump:43> _d_f=magnum
+compdump:44> print -r - \''magnum'\' \''_openstack'\'
+compdump:43> _d_f=mail
+compdump:44> print -r - \''mail'\' \''_mail'\'
+compdump:43> _d_f=Mail
+compdump:44> print -r - \''Mail'\' \''_mail'\'
+compdump:43> _d_f=mailx
+compdump:44> print -r - \''mailx'\' \''_mail'\'
+compdump:43> _d_f=make
+compdump:44> print -r - \''make'\' \''_make'\'
+compdump:43> _d_f=makeinfo
+compdump:44> print -r - \''makeinfo'\' \''_texinfo'\'
+compdump:43> _d_f=make-kpkg
+compdump:44> print -r - \''make-kpkg'\' \''_make-kpkg'\'
+compdump:43> _d_f=makepkg
+compdump:44> print -r - \''makepkg'\' \''_pkgtool'\'
+compdump:43> _d_f=man
+compdump:44> print -r - \''man'\' \''_man'\'
+compdump:43> _d_f=manage.py
+compdump:44> print -r - \''manage.py'\' \''_django'\'
+compdump:43> _d_f=manhole
+compdump:44> print -r - \''manhole'\' \''_twisted'\'
+compdump:43> _d_f=manila
+compdump:44> print -r - \''manila'\' \''_openstack'\'
+compdump:43> _d_f=mark
+compdump:44> print -r - \''mark'\' \''_mh'\'
+compdump:43> _d_f=-math-
+compdump:44> print -r - \''-math-'\' \''_math'\'
+compdump:43> _d_f=matlab
+compdump:44> print -r - \''matlab'\' \''_matlab'\'
+compdump:43> _d_f=mattrib
+compdump:44> print -r - \''mattrib'\' \''_mtools'\'
+compdump:43> _d_f=mcd
+compdump:44> print -r - \''mcd'\' \''_mtools'\'
+compdump:43> _d_f=mcopy
+compdump:44> print -r - \''mcopy'\' \''_mtools'\'
+compdump:43> _d_f=md5sum
+compdump:44> print -r - \''md5sum'\' \''_md5sum'\'
+compdump:43> _d_f=mdadm
+compdump:44> print -r - \''mdadm'\' \''_mdadm'\'
+compdump:43> _d_f=mdel
+compdump:44> print -r - \''mdel'\' \''_mtools'\'
+compdump:43> _d_f=mdeltree
+compdump:44> print -r - \''mdeltree'\' \''_mtools'\'
+compdump:43> _d_f=mdir
+compdump:44> print -r - \''mdir'\' \''_mtools'\'
+compdump:43> _d_f=mdu
+compdump:44> print -r - \''mdu'\' \''_mtools'\'
+compdump:43> _d_f=members
+compdump:44> print -r - \''members'\' \''_members'\'
+compdump:43> _d_f=mencal
+compdump:44> print -r - \''mencal'\' \''_mencal'\'
+compdump:43> _d_f=mere
+compdump:44> print -r - \''mere'\' \''_mere'\'
+compdump:43> _d_f=merge
+compdump:44> print -r - \''merge'\' \''_rcs'\'
+compdump:43> _d_f=mergechanges
+compdump:44> print -r - \''mergechanges'\' \''_mergechanges'\'
+compdump:43> _d_f=metaflac
+compdump:44> print -r - \''metaflac'\' \''_metaflac'\'
+compdump:43> _d_f=mformat
+compdump:44> print -r - \''mformat'\' \''_mtools'\'
+compdump:43> _d_f=mgv
+compdump:44> print -r - \''mgv'\' \''_pspdf'\'
+compdump:43> _d_f=mhfixmsg
+compdump:44> print -r - \''mhfixmsg'\' \''_mh'\'
+compdump:43> _d_f=mhlist
+compdump:44> print -r - \''mhlist'\' \''_mh'\'
+compdump:43> _d_f=mhmail
+compdump:44> print -r - \''mhmail'\' \''_mh'\'
+compdump:43> _d_f=mhn
+compdump:44> print -r - \''mhn'\' \''_mh'\'
+compdump:43> _d_f=mhparam
+compdump:44> print -r - \''mhparam'\' \''_mh'\'
+compdump:43> _d_f=mhpath
+compdump:44> print -r - \''mhpath'\' \''_mh'\'
+compdump:43> _d_f=mhshow
+compdump:44> print -r - \''mhshow'\' \''_mh'\'
+compdump:43> _d_f=mhstore
+compdump:44> print -r - \''mhstore'\' \''_mh'\'
+compdump:43> _d_f=mii-tool
+compdump:44> print -r - \''mii-tool'\' \''_mii-tool'\'
+compdump:43> _d_f=mistral
+compdump:44> print -r - \''mistral'\' \''_openstack'\'
+compdump:43> _d_f=mixerctl
+compdump:44> print -r - \''mixerctl'\' \''_mixerctl'\'
+compdump:43> _d_f=mkdir
+compdump:44> print -r - \''mkdir'\' \''_mkdir'\'
+compdump:43> _d_f=mkisofs
+compdump:44> print -r - \''mkisofs'\' \''_growisofs'\'
+compdump:43> _d_f=mkshortcut
+compdump:44> print -r - \''mkshortcut'\' \''_mkshortcut'\'
+compdump:43> _d_f=mkshortcut.exe
+compdump:44> print -r - \''mkshortcut.exe'\' \''_mkshortcut'\'
+compdump:43> _d_f=mktunes
+compdump:44> print -r - \''mktunes'\' \''_gnupod'\'
+compdump:43> _d_f=mktunes.pl
+compdump:44> print -r - \''mktunes.pl'\' \''_gnupod'\'
+compdump:43> _d_f=mkzsh
+compdump:44> print -r - \''mkzsh'\' \''_mkzsh'\'
+compdump:43> _d_f=mkzsh.exe
+compdump:44> print -r - \''mkzsh.exe'\' \''_mkzsh'\'
+compdump:43> _d_f=mlabel
+compdump:44> print -r - \''mlabel'\' \''_mtools'\'
+compdump:43> _d_f=mlocate
+compdump:44> print -r - \''mlocate'\' \''_locate'\'
+compdump:43> _d_f=mmd
+compdump:44> print -r - \''mmd'\' \''_mtools'\'
+compdump:43> _d_f=mmm
+compdump:44> print -r - \''mmm'\' \''_webbrowser'\'
+compdump:43> _d_f=mmount
+compdump:44> print -r - \''mmount'\' \''_mtools'\'
+compdump:43> _d_f=mmove
+compdump:44> print -r - \''mmove'\' \''_mtools'\'
+compdump:43> _d_f=modinfo
+compdump:44> print -r - \''modinfo'\' \''_modutils'\'
+compdump:43> _d_f=modprobe
+compdump:44> print -r - \''modprobe'\' \''_modutils'\'
+compdump:43> _d_f=module
+compdump:44> print -r - \''module'\' \''_module'\'
+compdump:43> _d_f=module-assistant
+compdump:44> print -r - \''module-assistant'\' \''_module-assistant'\'
+compdump:43> _d_f=mogrify
+compdump:44> print -r - \''mogrify'\' \''_imagemagick'\'
+compdump:43> _d_f=monasca
+compdump:44> print -r - \''monasca'\' \''_openstack'\'
+compdump:43> _d_f=mondoarchive
+compdump:44> print -r - \''mondoarchive'\' \''_mondo'\'
+compdump:43> _d_f=montage
+compdump:44> print -r - \''montage'\' \''_imagemagick'\'
+compdump:43> _d_f=moosic
+compdump:44> print -r - \''moosic'\' \''_moosic'\'
+compdump:43> _d_f=Mosaic
+compdump:44> print -r - \''Mosaic'\' \''_webbrowser'\'
+compdump:43> _d_f=mosh
+compdump:44> print -r - \''mosh'\' \''_mosh'\'
+compdump:43> _d_f=mount
+compdump:44> print -r - \''mount'\' \''_mount'\'
+compdump:43> _d_f=mozilla
+compdump:44> print -r - \''mozilla'\' \''_mozilla'\'
+compdump:43> _d_f=mozilla-firefox
+compdump:44> print -r - \''mozilla-firefox'\' \''_mozilla'\'
+compdump:43> _d_f=mozilla-xremote-client
+compdump:44> print -r - \''mozilla-xremote-client'\' \''_mozilla'\'
+compdump:43> _d_f=mpc
+compdump:44> print -r - \''mpc'\' \''_mpc'\'
+compdump:43> _d_f=mplayer
+compdump:44> print -r - \''mplayer'\' \''_mplayer'\'
+compdump:43> _d_f=mpstat
+compdump:44> print -r - \''mpstat'\' \''_sysstat'\'
+compdump:43> _d_f=mrd
+compdump:44> print -r - \''mrd'\' \''_mtools'\'
+compdump:43> _d_f=mread
+compdump:44> print -r - \''mread'\' \''_mtools'\'
+compdump:43> _d_f=mren
+compdump:44> print -r - \''mren'\' \''_mtools'\'
+compdump:43> _d_f=msgchk
+compdump:44> print -r - \''msgchk'\' \''_mh'\'
+compdump:43> _d_f=mt
+compdump:44> print -r - \''mt'\' \''_mt'\'
+compdump:43> _d_f=mtn
+compdump:44> print -r - \''mtn'\' \''_monotone'\'
+compdump:43> _d_f=mtoolstest
+compdump:44> print -r - \''mtoolstest'\' \''_mtools'\'
+compdump:43> _d_f=mtr
+compdump:44> print -r - \''mtr'\' \''_mtr'\'
+compdump:43> _d_f=mtype
+compdump:44> print -r - \''mtype'\' \''_mtools'\'
+compdump:43> _d_f=munchlist
+compdump:44> print -r - \''munchlist'\' \''_ispell'\'
+compdump:43> _d_f=mupdf
+compdump:44> print -r - \''mupdf'\' \''_pdf'\'
+compdump:43> _d_f=murano
+compdump:44> print -r - \''murano'\' \''_openstack'\'
+compdump:43> _d_f=mush
+compdump:44> print -r - \''mush'\' \''_mail'\'
+compdump:43> _d_f=mutt
+compdump:44> print -r - \''mutt'\' \''_mutt'\'
+compdump:43> _d_f=mx
+compdump:44> print -r - \''mx'\' \''_hosts'\'
+compdump:43> _d_f=mysql
+compdump:44> print -r - \''mysql'\' \''_mysql_utils'\'
+compdump:43> _d_f=mysqladmin
+compdump:44> print -r - \''mysqladmin'\' \''_mysql_utils'\'
+compdump:43> _d_f=mysqldiff
+compdump:44> print -r - \''mysqldiff'\' \''_mysqldiff'\'
+compdump:43> _d_f=mysqldump
+compdump:44> print -r - \''mysqldump'\' \''_mysql_utils'\'
+compdump:43> _d_f=mysqlimport
+compdump:44> print -r - \''mysqlimport'\' \''_mysql_utils'\'
+compdump:43> _d_f=mysqlshow
+compdump:44> print -r - \''mysqlshow'\' \''_mysql_utils'\'
+compdump:43> _d_f=nail
+compdump:44> print -r - \''nail'\' \''_mail'\'
+compdump:43> _d_f=native2ascii
+compdump:44> print -r - \''native2ascii'\' \''_java'\'
+compdump:43> _d_f=nautilus
+compdump:44> print -r - \''nautilus'\' \''_nautilus'\'
+compdump:43> _d_f=nawk
+compdump:44> print -r - \''nawk'\' \''_awk'\'
+compdump:43> _d_f=nc
+compdump:44> print -r - \''nc'\' \''_netcat'\'
+compdump:43> _d_f=ncal
+compdump:44> print -r - \''ncal'\' \''_cal'\'
+compdump:43> _d_f=ncftp
+compdump:44> print -r - \''ncftp'\' \''_ncftp'\'
+compdump:43> _d_f=ncl
+compdump:44> print -r - \''ncl'\' \''_nedit'\'
+compdump:43> _d_f=nedit
+compdump:44> print -r - \''nedit'\' \''_nedit'\'
+compdump:43> _d_f=nedit-nc
+compdump:44> print -r - \''nedit-nc'\' \''_nedit'\'
+compdump:43> _d_f=netcat
+compdump:44> print -r - \''netcat'\' \''_netcat'\'
+compdump:43> _d_f=netrik
+compdump:44> print -r - \''netrik'\' \''_webbrowser'\'
+compdump:43> _d_f=netscape
+compdump:44> print -r - \''netscape'\' \''_netscape'\'
+compdump:43> _d_f=netstat
+compdump:44> print -r - \''netstat'\' \''_netstat'\'
+compdump:43> _d_f=networkctl
+compdump:44> print -r - \''networkctl'\' \''_networkctl'\'
+compdump:43> _d_f=neutron
+compdump:44> print -r - \''neutron'\' \''_openstack'\'
+compdump:43> _d_f=new
+compdump:44> print -r - \''new'\' \''_mh'\'
+compdump:43> _d_f=newgrp
+compdump:44> print -r - \''newgrp'\' \''_groups'\'
+compdump:43> _d_f=next
+compdump:44> print -r - \''next'\' \''_mh'\'
+compdump:43> _d_f=nice
+compdump:44> print -r - \''nice'\' \''_nice'\'
+compdump:43> _d_f=nkf
+compdump:44> print -r - \''nkf'\' \''_nkf'\'
+compdump:43> _d_f=nl
+compdump:44> print -r - \''nl'\' \''_nl'\'
+compdump:43> _d_f=nm
+compdump:44> print -r - \''nm'\' \''_nm'\'
+compdump:43> _d_f=nmap
+compdump:44> print -r - \''nmap'\' \''_nmap'\'
+compdump:43> _d_f=nmblookup
+compdump:44> print -r - \''nmblookup'\' \''_samba'\'
+compdump:43> _d_f=nmcli
+compdump:44> print -r - \''nmcli'\' \''_nmcli'\'
+compdump:43> _d_f=nocorrect
+compdump:44> print -r - \''nocorrect'\' \''_precommand'\'
+compdump:43> _d_f=noglob
+compdump:44> print -r - \''noglob'\' \''_precommand'\'
+compdump:43> _d_f=nohup
+compdump:44> print -r - \''nohup'\' \''_precommand'\'
+compdump:43> _d_f=notmuch
+compdump:44> print -r - \''notmuch'\' \''_notmuch'\'
+compdump:43> _d_f=nova
+compdump:44> print -r - \''nova'\' \''_openstack'\'
+compdump:43> _d_f=npm
+compdump:44> print -r - \''npm'\' \''_npm'\'
+compdump:43> _d_f=ns
+compdump:44> print -r - \''ns'\' \''_hosts'\'
+compdump:43> _d_f=nslookup
+compdump:44> print -r - \''nslookup'\' \''_nslookup'\'
+compdump:43> _d_f=ntalk
+compdump:44> print -r - \''ntalk'\' \''_other_accounts'\'
+compdump:43> _d_f=nvim
+compdump:44> print -r - \''nvim'\' \''_vim'\'
+compdump:43> _d_f=objdump
+compdump:44> print -r - \''objdump'\' \''_objdump'\'
+compdump:43> _d_f=od
+compdump:44> print -r - \''od'\' \''_od'\'
+compdump:43> _d_f=odme
+compdump:44> print -r - \''odme'\' \''_object_classes'\'
+compdump:43> _d_f=odmget
+compdump:44> print -r - \''odmget'\' \''_object_classes'\'
+compdump:43> _d_f=odmshow
+compdump:44> print -r - \''odmshow'\' \''_object_classes'\'
+compdump:43> _d_f=ogg123
+compdump:44> print -r - \''ogg123'\' \''_vorbis'\'
+compdump:43> _d_f=oggdec
+compdump:44> print -r - \''oggdec'\' \''_vorbis'\'
+compdump:43> _d_f=oggenc
+compdump:44> print -r - \''oggenc'\' \''_vorbis'\'
+compdump:43> _d_f=ogginfo
+compdump:44> print -r - \''ogginfo'\' \''_vorbis'\'
+compdump:43> _d_f=okular
+compdump:44> print -r - \''okular'\' \''_okular'\'
+compdump:43> _d_f=open
+compdump:44> print -r - \''open'\' \''_open'\'
+compdump:43> _d_f=openstack
+compdump:44> print -r - \''openstack'\' \''_openstack'\'
+compdump:43> _d_f=opera
+compdump:44> print -r - \''opera'\' \''_webbrowser'\'
+compdump:43> _d_f=opera-next
+compdump:44> print -r - \''opera-next'\' \''_webbrowser'\'
+compdump:43> _d_f=osc
+compdump:44> print -r - \''osc'\' \''_osc'\'
+compdump:43> _d_f=p4
+compdump:44> print -r - \''p4'\' \''_perforce'\'
+compdump:43> _d_f=p4d
+compdump:44> print -r - \''p4d'\' \''_perforce'\'
+compdump:43> _d_f=pacat
+compdump:44> print -r - \''pacat'\' \''_pulseaudio'\'
+compdump:43> _d_f=pack
+compdump:44> print -r - \''pack'\' \''_pack'\'
+compdump:43> _d_f=packf
+compdump:44> print -r - \''packf'\' \''_mh'\'
+compdump:43> _d_f=pacmd
+compdump:44> print -r - \''pacmd'\' \''_pulseaudio'\'
+compdump:43> _d_f=pactl
+compdump:44> print -r - \''pactl'\' \''_pulseaudio'\'
+compdump:43> _d_f=padsp
+compdump:44> print -r - \''padsp'\' \''_pulseaudio'\'
+compdump:43> _d_f=paplay
+compdump:44> print -r - \''paplay'\' \''_pulseaudio'\'
+compdump:43> _d_f=-parameter-
+compdump:44> print -r - \''-parameter-'\' \''_parameter'\'
+compdump:43> _d_f=parec
+compdump:44> print -r - \''parec'\' \''_pulseaudio'\'
+compdump:43> _d_f=parecord
+compdump:44> print -r - \''parecord'\' \''_pulseaudio'\'
+compdump:43> _d_f=parsehdlist
+compdump:44> print -r - \''parsehdlist'\' \''_urpmi'\'
+compdump:43> _d_f=passwd
+compdump:44> print -r - \''passwd'\' \''_users'\'
+compdump:43> _d_f=paste
+compdump:44> print -r - \''paste'\' \''_paste'\'
+compdump:43> _d_f=pasuspender
+compdump:44> print -r - \''pasuspender'\' \''_pulseaudio'\'
+compdump:43> _d_f=patch
+compdump:44> print -r - \''patch'\' \''_patch'\'
+compdump:43> _d_f=pax
+compdump:44> print -r - \''pax'\' \''_pax'\'
+compdump:43> _d_f=pbuilder
+compdump:44> print -r - \''pbuilder'\' \''_pbuilder'\'
+compdump:43> _d_f=pcat
+compdump:44> print -r - \''pcat'\' \''_pack'\'
+compdump:43> _d_f=pcred
+compdump:44> print -r - \''pcred'\' \''_pids'\'
+compdump:43> _d_f=pdf2dsc
+compdump:44> print -r - \''pdf2dsc'\' \''_pdf'\'
+compdump:43> _d_f=pdf2ps
+compdump:44> print -r - \''pdf2ps'\' \''_pdf'\'
+compdump:43> _d_f=pdffonts
+compdump:44> print -r - \''pdffonts'\' \''_pdf'\'
+compdump:43> _d_f=pdfimages
+compdump:44> print -r - \''pdfimages'\' \''_pdf'\'
+compdump:43> _d_f=pdfinfo
+compdump:44> print -r - \''pdfinfo'\' \''_pdf'\'
+compdump:43> _d_f=pdfjadetex
+compdump:44> print -r - \''pdfjadetex'\' \''_tex'\'
+compdump:43> _d_f=pdflatex
+compdump:44> print -r - \''pdflatex'\' \''_tex'\'
+compdump:43> _d_f=pdfopt
+compdump:44> print -r - \''pdfopt'\' \''_pdf'\'
+compdump:43> _d_f=pdftex
+compdump:44> print -r - \''pdftex'\' \''_tex'\'
+compdump:43> _d_f=pdftexi2dvi
+compdump:44> print -r - \''pdftexi2dvi'\' \''_texinfo'\'
+compdump:43> _d_f=pdftk
+compdump:44> print -r - \''pdftk'\' \''_pdftk'\'
+compdump:43> _d_f=pdftopbm
+compdump:44> print -r - \''pdftopbm'\' \''_pdf'\'
+compdump:43> _d_f=pdftops
+compdump:44> print -r - \''pdftops'\' \''_pdf'\'
+compdump:43> _d_f=pdftotext
+compdump:44> print -r - \''pdftotext'\' \''_pdf'\'
+compdump:43> _d_f=perl
+compdump:44> print -r - \''perl'\' \''_perl'\'
+compdump:43> _d_f=perldoc
+compdump:44> print -r - \''perldoc'\' \''_perldoc'\'
+compdump:43> _d_f=pfctl
+compdump:44> print -r - \''pfctl'\' \''_pfctl'\'
+compdump:43> _d_f=pfexec
+compdump:44> print -r - \''pfexec'\' \''_pfexec'\'
+compdump:43> _d_f=pfiles
+compdump:44> print -r - \''pfiles'\' \''_pids'\'
+compdump:43> _d_f=pflags
+compdump:44> print -r - \''pflags'\' \''_pids'\'
+compdump:43> _d_f=pgrep
+compdump:44> print -r - \''pgrep'\' \''_pgrep'\'
+compdump:43> _d_f=php
+compdump:44> print -r - \''php'\' \''_php'\'
+compdump:43> _d_f=pick
+compdump:44> print -r - \''pick'\' \''_mh'\'
+compdump:43> _d_f=picocom
+compdump:44> print -r - \''picocom'\' \''_picocom'\'
+compdump:43> _d_f=pidof
+compdump:44> print -r - \''pidof'\' \''_pidof'\'
+compdump:43> _d_f=pidstat
+compdump:44> print -r - \''pidstat'\' \''_sysstat'\'
+compdump:43> _d_f=pigz
+compdump:44> print -r - \''pigz'\' \''_gzip'\'
+compdump:43> _d_f=pine
+compdump:44> print -r - \''pine'\' \''_pine'\'
+compdump:43> _d_f=pinef
+compdump:44> print -r - \''pinef'\' \''_pine'\'
+compdump:43> _d_f=ping
+compdump:44> print -r - \''ping'\' \''_ping'\'
+compdump:43> _d_f=piuparts
+compdump:44> print -r - \''piuparts'\' \''_piuparts'\'
+compdump:43> _d_f=pkg
+compdump:44> print -r - \''pkg'\' \''_pkg5'\'
+compdump:43> _d_f=pkgadd
+compdump:44> print -r - \''pkgadd'\' \''_pkgadd'\'
+compdump:43> _d_f=pkg_add
+compdump:44> print -r - \''pkg_add'\' \''_bsd_pkg'\'
+compdump:43> _d_f=pkg-config
+compdump:44> print -r - \''pkg-config'\' \''_pkg-config'\'
+compdump:43> _d_f=pkg_create
+compdump:44> print -r - \''pkg_create'\' \''_bsd_pkg'\'
+compdump:43> _d_f=pkg_delete
+compdump:44> print -r - \''pkg_delete'\' \''_bsd_pkg'\'
+compdump:43> _d_f=pkginfo
+compdump:44> print -r - \''pkginfo'\' \''_pkginfo'\'
+compdump:43> _d_f=pkg_info
+compdump:44> print -r - \''pkg_info'\' \''_bsd_pkg'\'
+compdump:43> _d_f=pkgrm
+compdump:44> print -r - \''pkgrm'\' \''_pkgrm'\'
+compdump:43> _d_f=pkgtool
+compdump:44> print -r - \''pkgtool'\' \''_pkgtool'\'
+compdump:43> _d_f=pkill
+compdump:44> print -r - \''pkill'\' \''_pgrep'\'
+compdump:43> _d_f=pldd
+compdump:44> print -r - \''pldd'\' \''_pids'\'
+compdump:43> _d_f=pmake
+compdump:44> print -r - \''pmake'\' \''_make'\'
+compdump:43> _d_f=pman
+compdump:44> print -r - \''pman'\' \''_perl_modules'\'
+compdump:43> _d_f=pmap
+compdump:44> print -r - \''pmap'\' \''_pids'\'
+compdump:43> _d_f=pmcat
+compdump:44> print -r - \''pmcat'\' \''_perl_modules'\'
+compdump:43> _d_f=pmdesc
+compdump:44> print -r - \''pmdesc'\' \''_perl_modules'\'
+compdump:43> _d_f=pmeth
+compdump:44> print -r - \''pmeth'\' \''_perl_modules'\'
+compdump:43> _d_f=pmexp
+compdump:44> print -r - \''pmexp'\' \''_perl_modules'\'
+compdump:43> _d_f=pmfunc
+compdump:44> print -r - \''pmfunc'\' \''_perl_modules'\'
+compdump:43> _d_f=pmload
+compdump:44> print -r - \''pmload'\' \''_perl_modules'\'
+compdump:43> _d_f=pmls
+compdump:44> print -r - \''pmls'\' \''_perl_modules'\'
+compdump:43> _d_f=pmpath
+compdump:44> print -r - \''pmpath'\' \''_perl_modules'\'
+compdump:43> _d_f=pmvers
+compdump:44> print -r - \''pmvers'\' \''_perl_modules'\'
+compdump:43> _d_f=podgrep
+compdump:44> print -r - \''podgrep'\' \''_perl_modules'\'
+compdump:43> _d_f=podpath
+compdump:44> print -r - \''podpath'\' \''_perl_modules'\'
+compdump:43> _d_f=podtoc
+compdump:44> print -r - \''podtoc'\' \''_perl_modules'\'
+compdump:43> _d_f=poff
+compdump:44> print -r - \''poff'\' \''_pon'\'
+compdump:43> _d_f=policytool
+compdump:44> print -r - \''policytool'\' \''_java'\'
+compdump:43> _d_f=pon
+compdump:44> print -r - \''pon'\' \''_pon'\'
+compdump:43> _d_f=popd
+compdump:44> print -r - \''popd'\' \''_directory_stack'\'
+compdump:43> _d_f=portaudit
+compdump:44> print -r - \''portaudit'\' \''_portaudit'\'
+compdump:43> _d_f=portlint
+compdump:44> print -r - \''portlint'\' \''_portlint'\'
+compdump:43> _d_f=portmaster
+compdump:44> print -r - \''portmaster'\' \''_portmaster'\'
+compdump:43> _d_f=portsnap
+compdump:44> print -r - \''portsnap'\' \''_portsnap'\'
+compdump:43> _d_f=postconf
+compdump:44> print -r - \''postconf'\' \''_postfix'\'
+compdump:43> _d_f=postqueue
+compdump:44> print -r - \''postqueue'\' \''_postfix'\'
+compdump:43> _d_f=postsuper
+compdump:44> print -r - \''postsuper'\' \''_postfix'\'
+compdump:43> _d_f=powerd
+compdump:44> print -r - \''powerd'\' \''_powerd'\'
+compdump:43> _d_f=prcs
+compdump:44> print -r - \''prcs'\' \''_prcs'\'
+compdump:43> _d_f=prev
+compdump:44> print -r - \''prev'\' \''_mh'\'
+compdump:43> _d_f=print
+compdump:44> print -r - \''print'\' \''_print'\'
+compdump:43> _d_f=printenv
+compdump:44> print -r - \''printenv'\' \''_printenv'\'
+compdump:43> _d_f=printf
+compdump:44> print -r - \''printf'\' \''_print'\'
+compdump:43> _d_f=procstat
+compdump:44> print -r - \''procstat'\' \''_procstat'\'
+compdump:43> _d_f=prompt
+compdump:44> print -r - \''prompt'\' \''_prompt'\'
+compdump:43> _d_f=prove
+compdump:44> print -r - \''prove'\' \''_prove'\'
+compdump:43> _d_f=prs
+compdump:44> print -r - \''prs'\' \''_sccs'\'
+compdump:43> _d_f=prstat
+compdump:44> print -r - \''prstat'\' \''_prstat'\'
+compdump:43> _d_f=prt
+compdump:44> print -r - \''prt'\' \''_sccs'\'
+compdump:43> _d_f=prun
+compdump:44> print -r - \''prun'\' \''_pids'\'
+compdump:43> _d_f=ps
+compdump:44> print -r - \''ps'\' \''_ps'\'
+compdump:43> _d_f=ps2ascii
+compdump:44> print -r - \''ps2ascii'\' \''_pspdf'\'
+compdump:43> _d_f=ps2epsi
+compdump:44> print -r - \''ps2epsi'\' \''_postscript'\'
+compdump:43> _d_f=ps2pdf
+compdump:44> print -r - \''ps2pdf'\' \''_postscript'\'
+compdump:43> _d_f=ps2pdf12
+compdump:44> print -r - \''ps2pdf12'\' \''_postscript'\'
+compdump:43> _d_f=ps2pdf13
+compdump:44> print -r - \''ps2pdf13'\' \''_postscript'\'
+compdump:43> _d_f=ps2pdf14
+compdump:44> print -r - \''ps2pdf14'\' \''_postscript'\'
+compdump:43> _d_f=ps2pdfwr
+compdump:44> print -r - \''ps2pdfwr'\' \''_postscript'\'
+compdump:43> _d_f=ps2ps
+compdump:44> print -r - \''ps2ps'\' \''_postscript'\'
+compdump:43> _d_f=psbook
+compdump:44> print -r - \''psbook'\' \''_psutils'\'
+compdump:43> _d_f=pscp
+compdump:44> print -r - \''pscp'\' \''_pscp'\'
+compdump:43> _d_f=pscp.exe
+compdump:44> print -r - \''pscp.exe'\' \''_pscp'\'
+compdump:43> _d_f=psed
+compdump:44> print -r - \''psed'\' \''_sed'\'
+compdump:43> _d_f=psig
+compdump:44> print -r - \''psig'\' \''_pids'\'
+compdump:43> _d_f=psmerge
+compdump:44> print -r - \''psmerge'\' \''_psutils'\'
+compdump:43> _d_f=psmulti
+compdump:44> print -r - \''psmulti'\' \''_postscript'\'
+compdump:43> _d_f=psnup
+compdump:44> print -r - \''psnup'\' \''_psutils'\'
+compdump:43> _d_f=psresize
+compdump:44> print -r - \''psresize'\' \''_psutils'\'
+compdump:43> _d_f=psselect
+compdump:44> print -r - \''psselect'\' \''_psutils'\'
+compdump:43> _d_f=pstack
+compdump:44> print -r - \''pstack'\' \''_pids'\'
+compdump:43> _d_f=pstoedit
+compdump:44> print -r - \''pstoedit'\' \''_pspdf'\'
+compdump:43> _d_f=pstop
+compdump:44> print -r - \''pstop'\' \''_pids'\'
+compdump:43> _d_f=pstops
+compdump:44> print -r - \''pstops'\' \''_psutils'\'
+compdump:43> _d_f=pstotgif
+compdump:44> print -r - \''pstotgif'\' \''_pspdf'\'
+compdump:43> _d_f=pswrap
+compdump:44> print -r - \''pswrap'\' \''_postscript'\'
+compdump:43> _d_f=ptree
+compdump:44> print -r - \''ptree'\' \''_ptree'\'
+compdump:43> _d_f=pulseaudio
+compdump:44> print -r - \''pulseaudio'\' \''_pulseaudio'\'
+compdump:43> _d_f=pump
+compdump:44> print -r - \''pump'\' \''_pump'\'
+compdump:43> _d_f=pushd
+compdump:44> print -r - \''pushd'\' \''_cd'\'
+compdump:43> _d_f=putclip
+compdump:44> print -r - \''putclip'\' \''_putclip'\'
+compdump:43> _d_f=putclip.exe
+compdump:44> print -r - \''putclip.exe'\' \''_putclip'\'
+compdump:43> _d_f=pwait
+compdump:44> print -r - \''pwait'\' \''_pids'\'
+compdump:43> _d_f=pwdx
+compdump:44> print -r - \''pwdx'\' \''_pids'\'
+compdump:43> _d_f=pyhtmlizer
+compdump:44> print -r - \''pyhtmlizer'\' \''_twisted'\'
+compdump:43> _d_f=qdbus
+compdump:44> print -r - \''qdbus'\' \''_qdbus'\'
+compdump:43> _d_f=qiv
+compdump:44> print -r - \''qiv'\' \''_qiv'\'
+compdump:43> _d_f=qtplay
+compdump:44> print -r - \''qtplay'\' \''_qtplay'\'
+compdump:43> _d_f=querybts
+compdump:44> print -r - \''querybts'\' \''_bug'\'
+compdump:43> _d_f=quilt
+compdump:44> print -r - \''quilt'\' \''_quilt'\'
+compdump:43> _d_f=r
+compdump:44> print -r - \''r'\' \''_fc'\'
+compdump:43> _d_f=raggle
+compdump:44> print -r - \''raggle'\' \''_raggle'\'
+compdump:43> _d_f=rake
+compdump:44> print -r - \''rake'\' \''_rake'\'
+compdump:43> _d_f=ranlib
+compdump:44> print -r - \''ranlib'\' \''_ranlib'\'
+compdump:43> _d_f=rar
+compdump:44> print -r - \''rar'\' \''_rar'\'
+compdump:43> _d_f=rc
+compdump:44> print -r - \''rc'\' \''_sh'\'
+compdump:43> _d_f=rcctl
+compdump:44> print -r - \''rcctl'\' \''_rcctl'\'
+compdump:43> _d_f=rcp
+compdump:44> print -r - \''rcp'\' \''_rlogin'\'
+compdump:43> _d_f=rcs
+compdump:44> print -r - \''rcs'\' \''_rcs'\'
+compdump:43> _d_f=rcsdiff
+compdump:44> print -r - \''rcsdiff'\' \''_rcs'\'
+compdump:43> _d_f=rdesktop
+compdump:44> print -r - \''rdesktop'\' \''_rdesktop'\'
+compdump:43> _d_f=read
+compdump:44> print -r - \''read'\' \''_read'\'
+compdump:43> _d_f=readelf
+compdump:44> print -r - \''readelf'\' \''_readelf'\'
+compdump:43> _d_f=readonly
+compdump:44> print -r - \''readonly'\' \''_typeset'\'
+compdump:43> _d_f=readshortcut
+compdump:44> print -r - \''readshortcut'\' \''_readshortcut'\'
+compdump:43> _d_f=readshortcut.exe
+compdump:44> print -r - \''readshortcut.exe'\' \''_readshortcut'\'
+compdump:43> _d_f=rebootin
+compdump:44> print -r - \''rebootin'\' \''_rebootin'\'
+compdump:43> _d_f=-redirect-
+compdump:44> print -r - \''-redirect-'\' \''_redirect'\'
+compdump:43> _d_f=-redirect-,<,bunzip2
+compdump:44> print -r - \''-redirect-,<,bunzip2'\' \''_bzip2'\'
+compdump:43> _d_f=-redirect-,<,bzip2
+compdump:44> print -r - \''-redirect-,<,bzip2'\' \''_bzip2'\'
+compdump:43> _d_f=-redirect-,>,bzip2
+compdump:44> print -r - \''-redirect-,>,bzip2'\' \''_bzip2'\'
+compdump:43> _d_f=-redirect-,<,compress
+compdump:44> print -r - \''-redirect-,<,compress'\' \''_compress'\'
+compdump:43> _d_f=-redirect-,>,compress
+compdump:44> print -r - \''-redirect-,>,compress'\' \''_compress'\'
+compdump:43> _d_f=-redirect-,-default-,-default-
+compdump:44> print -r - \''-redirect-,-default-,-default-'\' \''_files'\'
+compdump:43> _d_f=-redirect-,<,gunzip
+compdump:44> print -r - \''-redirect-,<,gunzip'\' \''_gzip'\'
+compdump:43> _d_f=-redirect-,<,gzip
+compdump:44> print -r - \''-redirect-,<,gzip'\' \''_gzip'\'
+compdump:43> _d_f=-redirect-,>,gzip
+compdump:44> print -r - \''-redirect-,>,gzip'\' \''_gzip'\'
+compdump:43> _d_f=-redirect-,<,uncompress
+compdump:44> print -r - \''-redirect-,<,uncompress'\' \''_compress'\'
+compdump:43> _d_f=-redirect-,<,unxz
+compdump:44> print -r - \''-redirect-,<,unxz'\' \''_xz'\'
+compdump:43> _d_f=-redirect-,<,xz
+compdump:44> print -r - \''-redirect-,<,xz'\' \''_xz'\'
+compdump:43> _d_f=-redirect-,>,xz
+compdump:44> print -r - \''-redirect-,>,xz'\' \''_xz'\'
+compdump:43> _d_f=refile
+compdump:44> print -r - \''refile'\' \''_mh'\'
+compdump:43> _d_f=rehash
+compdump:44> print -r - \''rehash'\' \''_hash'\'
+compdump:43> _d_f=reload
+compdump:44> print -r - \''reload'\' \''_initctl'\'
+compdump:43> _d_f=removepkg
+compdump:44> print -r - \''removepkg'\' \''_pkgtool'\'
+compdump:43> _d_f=remsh
+compdump:44> print -r - \''remsh'\' \''_rlogin'\'
+compdump:43> _d_f=renice
+compdump:44> print -r - \''renice'\' \''_renice'\'
+compdump:43> _d_f=repl
+compdump:44> print -r - \''repl'\' \''_mh'\'
+compdump:43> _d_f=reportbug
+compdump:44> print -r - \''reportbug'\' \''_bug'\'
+compdump:43> _d_f=reprepro
+compdump:44> print -r - \''reprepro'\' \''_reprepro'\'
+compdump:43> _d_f=restart
+compdump:44> print -r - \''restart'\' \''_initctl'\'
+compdump:43> _d_f=retawq
+compdump:44> print -r - \''retawq'\' \''_webbrowser'\'
+compdump:43> _d_f=rgview
+compdump:44> print -r - \''rgview'\' \''_vim'\'
+compdump:43> _d_f=rgvim
+compdump:44> print -r - \''rgvim'\' \''_vim'\'
+compdump:43> _d_f=ri
+compdump:44> print -r - \''ri'\' \''_ri'\'
+compdump:43> _d_f=rlogin
+compdump:44> print -r - \''rlogin'\' \''_rlogin'\'
+compdump:43> _d_f=rm
+compdump:44> print -r - \''rm'\' \''_rm'\'
+compdump:43> _d_f=rmadison
+compdump:44> print -r - \''rmadison'\' \''_madison'\'
+compdump:43> _d_f=rmdel
+compdump:44> print -r - \''rmdel'\' \''_sccs'\'
+compdump:43> _d_f=rmdir
+compdump:44> print -r - \''rmdir'\' \''_directories'\'
+compdump:43> _d_f=rmf
+compdump:44> print -r - \''rmf'\' \''_mh'\'
+compdump:43> _d_f=rmic
+compdump:44> print -r - \''rmic'\' \''_java'\'
+compdump:43> _d_f=rmid
+compdump:44> print -r - \''rmid'\' \''_java'\'
+compdump:43> _d_f=rmiregistry
+compdump:44> print -r - \''rmiregistry'\' \''_java'\'
+compdump:43> _d_f=rmm
+compdump:44> print -r - \''rmm'\' \''_mh'\'
+compdump:43> _d_f=rmmod
+compdump:44> print -r - \''rmmod'\' \''_modutils'\'
+compdump:43> _d_f=rpm
+compdump:44> print -r - \''rpm'\' \''_rpm'\'
+compdump:43> _d_f=rpmbuild
+compdump:44> print -r - \''rpmbuild'\' \''_rpmbuild'\'
+compdump:43> _d_f=rrdtool
+compdump:44> print -r - \''rrdtool'\' \''_rrdtool'\'
+compdump:43> _d_f=rsh
+compdump:44> print -r - \''rsh'\' \''_rlogin'\'
+compdump:43> _d_f=rsync
+compdump:44> print -r - \''rsync'\' \''_rsync'\'
+compdump:43> _d_f=rtin
+compdump:44> print -r - \''rtin'\' \''_tin'\'
+compdump:43> _d_f=rubber
+compdump:44> print -r - \''rubber'\' \''_rubber'\'
+compdump:43> _d_f=rubber-info
+compdump:44> print -r - \''rubber-info'\' \''_rubber'\'
+compdump:43> _d_f=rubber-pipe
+compdump:44> print -r - \''rubber-pipe'\' \''_rubber'\'
+compdump:43> _d_f=ruby
+compdump:44> print -r - \''ruby'\' \''_ruby'\'
+compdump:43> _d_f=run-help
+compdump:44> print -r - \''run-help'\' \''_run-help'\'
+compdump:43> _d_f=rup
+compdump:44> print -r - \''rup'\' \''_hosts'\'
+compdump:43> _d_f=rusage
+compdump:44> print -r - \''rusage'\' \''_precommand'\'
+compdump:43> _d_f=rview
+compdump:44> print -r - \''rview'\' \''_vim'\'
+compdump:43> _d_f=rvim
+compdump:44> print -r - \''rvim'\' \''_vim'\'
+compdump:43> _d_f=rwho
+compdump:44> print -r - \''rwho'\' \''_hosts'\'
+compdump:43> _d_f=rxvt
+compdump:44> print -r - \''rxvt'\' \''_urxvt'\'
+compdump:43> _d_f=s2p
+compdump:44> print -r - \''s2p'\' \''_sed'\'
+compdump:43> _d_f=sabcmd
+compdump:44> print -r - \''sabcmd'\' \''_sablotron'\'
+compdump:43> _d_f=sact
+compdump:44> print -r - \''sact'\' \''_sccs'\'
+compdump:43> _d_f=sadf
+compdump:44> print -r - \''sadf'\' \''_sysstat'\'
+compdump:43> _d_f=sahara
+compdump:44> print -r - \''sahara'\' \''_openstack'\'
+compdump:43> _d_f=sar
+compdump:44> print -r - \''sar'\' \''_sysstat'\'
+compdump:43> _d_f=savecore
+compdump:44> print -r - \''savecore'\' \''_savecore'\'
+compdump:43> _d_f=scan
+compdump:44> print -r - \''scan'\' \''_mh'\'
+compdump:43> _d_f=sccs
+compdump:44> print -r - \''sccs'\' \''_sccs'\'
+compdump:43> _d_f=sccsdiff
+compdump:44> print -r - \''sccsdiff'\' \''_sccs'\'
+compdump:43> _d_f=sched
+compdump:44> print -r - \''sched'\' \''_sched'\'
+compdump:43> _d_f=schedtool
+compdump:44> print -r - \''schedtool'\' \''_schedtool'\'
+compdump:43> _d_f=schroot
+compdump:44> print -r - \''schroot'\' \''_schroot'\'
+compdump:43> _d_f=scl
+compdump:44> print -r - \''scl'\' \''_scl'\'
+compdump:43> _d_f=scp
+compdump:44> print -r - \''scp'\' \''_ssh'\'
+compdump:43> _d_f=screen
+compdump:44> print -r - \''screen'\' \''_screen'\'
+compdump:43> _d_f=script
+compdump:44> print -r - \''script'\' \''_script'\'
+compdump:43> _d_f=scriptreplay
+compdump:44> print -r - \''scriptreplay'\' \''_script'\'
+compdump:43> _d_f=sed
+compdump:44> print -r - \''sed'\' \''_sed'\'
+compdump:43> _d_f=senlin
+compdump:44> print -r - \''senlin'\' \''_openstack'\'
+compdump:43> _d_f=serialver
+compdump:44> print -r - \''serialver'\' \''_java'\'
+compdump:43> _d_f=service
+compdump:44> print -r - \''service'\' \''_service'\'
+compdump:43> _d_f=set
+compdump:44> print -r - \''set'\' \''_set'\'
+compdump:43> _d_f=setfacl
+compdump:44> print -r - \''setfacl'\' \''_setfacl'\'
+compdump:43> _d_f=setfacl.exe
+compdump:44> print -r - \''setfacl.exe'\' \''_setfacl'\'
+compdump:43> _d_f=setfattr
+compdump:44> print -r - \''setfattr'\' \''_attr'\'
+compdump:43> _d_f=setopt
+compdump:44> print -r - \''setopt'\' \''_setopt'\'
+compdump:43> _d_f=setsid
+compdump:44> print -r - \''setsid'\' \''_precommand'\'
+compdump:43> _d_f=setxkbmap
+compdump:44> print -r - \''setxkbmap'\' \''_setxkbmap'\'
+compdump:43> _d_f=sftp
+compdump:44> print -r - \''sftp'\' \''_ssh'\'
+compdump:43> _d_f=sh
+compdump:44> print -r - \''sh'\' \''_sh'\'
+compdump:43> _d_f=shift
+compdump:44> print -r - \''shift'\' \''_arrays'\'
+compdump:43> _d_f=show
+compdump:44> print -r - \''show'\' \''_mh'\'
+compdump:43> _d_f=showchar
+compdump:44> print -r - \''showchar'\' \''_psutils'\'
+compdump:43> _d_f=showmount
+compdump:44> print -r - \''showmount'\' \''_showmount'\'
+compdump:43> _d_f=sisu
+compdump:44> print -r - \''sisu'\' \''_sisu'\'
+compdump:43> _d_f=skipstone
+compdump:44> print -r - \''skipstone'\' \''_webbrowser'\'
+compdump:43> _d_f=slitex
+compdump:44> print -r - \''slitex'\' \''_tex'\'
+compdump:43> _d_f=slocate
+compdump:44> print -r - \''slocate'\' \''_locate'\'
+compdump:43> _d_f=slogin
+compdump:44> print -r - \''slogin'\' \''_ssh'\'
+compdump:43> _d_f=slrn
+compdump:44> print -r - \''slrn'\' \''_slrn'\'
+compdump:43> _d_f=smbclient
+compdump:44> print -r - \''smbclient'\' \''_samba'\'
+compdump:43> _d_f=smbcontrol
+compdump:44> print -r - \''smbcontrol'\' \''_samba'\'
+compdump:43> _d_f=smbstatus
+compdump:44> print -r - \''smbstatus'\' \''_samba'\'
+compdump:43> _d_f=smit
+compdump:44> print -r - \''smit'\' \''_smit'\'
+compdump:43> _d_f=smitty
+compdump:44> print -r - \''smitty'\' \''_smit'\'
+compdump:43> _d_f=snoop
+compdump:44> print -r - \''snoop'\' \''_snoop'\'
+compdump:43> _d_f=soa
+compdump:44> print -r - \''soa'\' \''_hosts'\'
+compdump:43> _d_f=socket
+compdump:44> print -r - \''socket'\' \''_socket'\'
+compdump:43> _d_f=sockstat
+compdump:44> print -r - \''sockstat'\' \''_sockstat'\'
+compdump:43> _d_f=softwareupdate
+compdump:44> print -r - \''softwareupdate'\' \''_softwareupdate'\'
+compdump:43> _d_f=sort
+compdump:44> print -r - \''sort'\' \''_sort'\'
+compdump:43> _d_f=sortm
+compdump:44> print -r - \''sortm'\' \''_mh'\'
+compdump:43> _d_f=source
+compdump:44> print -r - \''source'\' \''_source'\'
+compdump:43> _d_f=spamassassin
+compdump:44> print -r - \''spamassassin'\' \''_spamassassin'\'
+compdump:43> _d_f=splitdiff
+compdump:44> print -r - \''splitdiff'\' \''_patchutils'\'
+compdump:43> _d_f=sqlite
+compdump:44> print -r - \''sqlite'\' \''_sqlite'\'
+compdump:43> _d_f=sqlite3
+compdump:44> print -r - \''sqlite3'\' \''_sqlite'\'
+compdump:43> _d_f=sqsh
+compdump:44> print -r - \''sqsh'\' \''_sqsh'\'
+compdump:43> _d_f=sr
+compdump:44> print -r - \''sr'\' \''_surfraw'\'
+compdump:43> _d_f=srptool
+compdump:44> print -r - \''srptool'\' \''_gnutls'\'
+compdump:43> _d_f=ss
+compdump:44> print -r - \''ss'\' \''_ss'\'
+compdump:43> _d_f=ssh
+compdump:44> print -r - \''ssh'\' \''_ssh'\'
+compdump:43> _d_f=ssh-add
+compdump:44> print -r - \''ssh-add'\' \''_ssh'\'
+compdump:43> _d_f=ssh-agent
+compdump:44> print -r - \''ssh-agent'\' \''_ssh'\'
+compdump:43> _d_f=ssh-copy-id
+compdump:44> print -r - \''ssh-copy-id'\' \''_ssh'\'
+compdump:43> _d_f=sshfs
+compdump:44> print -r - \''sshfs'\' \''_sshfs'\'
+compdump:43> _d_f=ssh-keygen
+compdump:44> print -r - \''ssh-keygen'\' \''_ssh'\'
+compdump:43> _d_f=star
+compdump:44> print -r - \''star'\' \''_tar'\'
+compdump:43> _d_f=start
+compdump:44> print -r - \''start'\' \''_initctl'\'
+compdump:43> _d_f=stat
+compdump:44> print -r - \''stat'\' \''_stat'\'
+compdump:43> _d_f=status
+compdump:44> print -r - \''status'\' \''_initctl'\'
+compdump:43> _d_f=stg
+compdump:44> print -r - \''stg'\' \''_stgit'\'
+compdump:43> _d_f=stop
+compdump:44> print -r - \''stop'\' \''_initctl'\'
+compdump:43> _d_f=strace
+compdump:44> print -r - \''strace'\' \''_strace'\'
+compdump:43> _d_f=strace64
+compdump:44> print -r - \''strace64'\' \''_strace'\'
+compdump:43> _d_f=strftime
+compdump:44> print -r - \''strftime'\' \''_strftime'\'
+compdump:43> _d_f=strip
+compdump:44> print -r - \''strip'\' \''_strip'\'
+compdump:43> _d_f=stty
+compdump:44> print -r - \''stty'\' \''_stty'\'
+compdump:43> _d_f=su
+compdump:44> print -r - \''su'\' \''_su'\'
+compdump:43> _d_f=-subscript-
+compdump:44> print -r - \''-subscript-'\' \''_subscript'\'
+compdump:43> _d_f=sudo
+compdump:44> print -r - \''sudo'\' \''_sudo'\'
+compdump:43> _d_f=sudoedit
+compdump:44> print -r - \''sudoedit'\' \''_sudo'\'
+compdump:43> _d_f=surfraw
+compdump:44> print -r - \''surfraw'\' \''_surfraw'\'
+compdump:43> _d_f=SuSEconfig
+compdump:44> print -r - \''SuSEconfig'\' \''_SUSEconfig'\'
+compdump:43> _d_f=sv
+compdump:44> print -r - \''sv'\' \''_runit'\'
+compdump:43> _d_f=svcadm
+compdump:44> print -r - \''svcadm'\' \''_svcadm'\'
+compdump:43> _d_f=svccfg
+compdump:44> print -r - \''svccfg'\' \''_svccfg'\'
+compdump:43> _d_f=svcprop
+compdump:44> print -r - \''svcprop'\' \''_svcprop'\'
+compdump:43> _d_f=svcs
+compdump:44> print -r - \''svcs'\' \''_svcs'\'
+compdump:43> _d_f=svn
+compdump:44> print -r - \''svn'\' \''_subversion'\'
+compdump:43> _d_f=svnadmin
+compdump:44> print -r - \''svnadmin'\' \''_subversion'\'
+compdump:43> _d_f=svnadmin-static
+compdump:44> print -r - \''svnadmin-static'\' \''_subversion'\'
+compdump:43> _d_f=svn-buildpackage
+compdump:44> print -r - \''svn-buildpackage'\' \''_svn-buildpackage'\'
+compdump:43> _d_f=swaks
+compdump:44> print -r - \''swaks'\' \''_swaks'\'
+compdump:43> _d_f=swift
+compdump:44> print -r - \''swift'\' \''_swift'\'
+compdump:43> _d_f=swiftc
+compdump:44> print -r - \''swiftc'\' \''_swift'\'
+compdump:43> _d_f=sync
+compdump:44> print -r - \''sync'\' \''_nothing'\'
+compdump:43> _d_f=sysctl
+compdump:44> print -r - \''sysctl'\' \''_sysctl'\'
+compdump:43> _d_f=sysrc
+compdump:44> print -r - \''sysrc'\' \''_sysrc'\'
+compdump:43> _d_f=systat
+compdump:44> print -r - \''systat'\' \''_systat'\'
+compdump:43> _d_f=systemctl
+compdump:44> print -r - \''systemctl'\' \''_systemctl'\'
+compdump:43> _d_f=systemd-analyze
+compdump:44> print -r - \''systemd-analyze'\' \''_systemd-analyze'\'
+compdump:43> _d_f=systemd-ask-password
+compdump:44> print -r - \''systemd-ask-password'\' \''_systemd'\'
+compdump:43> _d_f=systemd-cat
+compdump:44> print -r - \''systemd-cat'\' \''_systemd'\'
+compdump:43> _d_f=systemd-cgls
+compdump:44> print -r - \''systemd-cgls'\' \''_systemd'\'
+compdump:43> _d_f=systemd-cgtop
+compdump:44> print -r - \''systemd-cgtop'\' \''_systemd'\'
+compdump:43> _d_f=systemd-delta
+compdump:44> print -r - \''systemd-delta'\' \''_systemd-delta'\'
+compdump:43> _d_f=systemd-detect-virt
+compdump:44> print -r - \''systemd-detect-virt'\' \''_systemd'\'
+compdump:43> _d_f=systemd-inhibit
+compdump:44> print -r - \''systemd-inhibit'\' \''_systemd-inhibit'\'
+compdump:43> _d_f=systemd-machine-id-setup
+compdump:44> print -r - \''systemd-machine-id-setup'\' \''_systemd'\'
+compdump:43> _d_f=systemd-notify
+compdump:44> print -r - \''systemd-notify'\' \''_systemd'\'
+compdump:43> _d_f=systemd-nspawn
+compdump:44> print -r - \''systemd-nspawn'\' \''_systemd-nspawn'\'
+compdump:43> _d_f=systemd-resolve
+compdump:44> print -r - \''systemd-resolve'\' \''_systemd-resolve'\'
+compdump:43> _d_f=systemd-run
+compdump:44> print -r - \''systemd-run'\' \''_systemd-run'\'
+compdump:43> _d_f=systemd-tmpfiles
+compdump:44> print -r - \''systemd-tmpfiles'\' \''_systemd-tmpfiles'\'
+compdump:43> _d_f=systemd-tty-ask-password-agent
+compdump:44> print -r - \''systemd-tty-ask-password-agent'\' \''_systemd'\'
+compdump:43> _d_f=system_profiler
+compdump:44> print -r - \''system_profiler'\' \''_system_profiler'\'
+compdump:43> _d_f=tacker
+compdump:44> print -r - \''tacker'\' \''_openstack'\'
+compdump:43> _d_f=tail
+compdump:44> print -r - \''tail'\' \''_tail'\'
+compdump:43> _d_f=talk
+compdump:44> print -r - \''talk'\' \''_other_accounts'\'
+compdump:43> _d_f=tap2deb
+compdump:44> print -r - \''tap2deb'\' \''_twisted'\'
+compdump:43> _d_f=tap2rpm
+compdump:44> print -r - \''tap2rpm'\' \''_twisted'\'
+compdump:43> _d_f=tapconvert
+compdump:44> print -r - \''tapconvert'\' \''_twisted'\'
+compdump:43> _d_f=tar
+compdump:44> print -r - \''tar'\' \''_tar'\'
+compdump:43> _d_f=tardy
+compdump:44> print -r - \''tardy'\' \''_tardy'\'
+compdump:43> _d_f=tcpdump
+compdump:44> print -r - \''tcpdump'\' \''_tcpdump'\'
+compdump:43> _d_f=tcp_open
+compdump:44> print -r - \''tcp_open'\' \''_tcpsys'\'
+compdump:43> _d_f=tcptraceroute
+compdump:44> print -r - \''tcptraceroute'\' \''_tcptraceroute'\'
+compdump:43> _d_f=tcsh
+compdump:44> print -r - \''tcsh'\' \''_sh'\'
+compdump:43> _d_f=tda
+compdump:44> print -r - \''tda'\' \''_devtodo'\'
+compdump:43> _d_f=tdd
+compdump:44> print -r - \''tdd'\' \''_devtodo'\'
+compdump:43> _d_f=tde
+compdump:44> print -r - \''tde'\' \''_devtodo'\'
+compdump:43> _d_f=tdr
+compdump:44> print -r - \''tdr'\' \''_devtodo'\'
+compdump:43> _d_f=telnet
+compdump:44> print -r - \''telnet'\' \''_telnet'\'
+compdump:43> _d_f=tex
+compdump:44> print -r - \''tex'\' \''_tex'\'
+compdump:43> _d_f=texi2any
+compdump:44> print -r - \''texi2any'\' \''_texinfo'\'
+compdump:43> _d_f=texi2dvi
+compdump:44> print -r - \''texi2dvi'\' \''_texinfo'\'
+compdump:43> _d_f=texi2pdf
+compdump:44> print -r - \''texi2pdf'\' \''_texinfo'\'
+compdump:43> _d_f=texindex
+compdump:44> print -r - \''texindex'\' \''_texinfo'\'
+compdump:43> _d_f=tg
+compdump:44> print -r - \''tg'\' \''_topgit'\'
+compdump:43> _d_f=tidy
+compdump:44> print -r - \''tidy'\' \''_tidy'\'
+compdump:43> _d_f=tig
+compdump:44> print -r - \''tig'\' \''_git'\'
+compdump:43> _d_f=-tilde-
+compdump:44> print -r - \''-tilde-'\' \''_tilde'\'
+compdump:43> _d_f=time
+compdump:44> print -r - \''time'\' \''_precommand'\'
+compdump:43> _d_f=timedatectl
+compdump:44> print -r - \''timedatectl'\' \''_timedatectl'\'
+compdump:43> _d_f=times
+compdump:44> print -r - \''times'\' \''_nothing'\'
+compdump:43> _d_f=tin
+compdump:44> print -r - \''tin'\' \''_tin'\'
+compdump:43> _d_f=tkconch
+compdump:44> print -r - \''tkconch'\' \''_twisted'\'
+compdump:43> _d_f=tkinfo
+compdump:44> print -r - \''tkinfo'\' \''_texinfo'\'
+compdump:43> _d_f=tla
+compdump:44> print -r - \''tla'\' \''_tla'\'
+compdump:43> _d_f=tmux
+compdump:44> print -r - \''tmux'\' \''_tmux'\'
+compdump:43> _d_f=todo
+compdump:44> print -r - \''todo'\' \''_devtodo'\'
+compdump:43> _d_f=todo.sh
+compdump:44> print -r - \''todo.sh'\' \''_todo.sh'\'
+compdump:43> _d_f=toilet
+compdump:44> print -r - \''toilet'\' \''_toilet'\'
+compdump:43> _d_f=top
+compdump:44> print -r - \''top'\' \''_top'\'
+compdump:43> _d_f=totdconfig
+compdump:44> print -r - \''totdconfig'\' \''_totd'\'
+compdump:43> _d_f=touch
+compdump:44> print -r - \''touch'\' \''_touch'\'
+compdump:43> _d_f=tpb
+compdump:44> print -r - \''tpb'\' \''_tpb'\'
+compdump:43> _d_f=tpconfig
+compdump:44> print -r - \''tpconfig'\' \''_tpconfig'\'
+compdump:43> _d_f=tpkg-debarch
+compdump:44> print -r - \''tpkg-debarch'\' \''_toolchain-source'\'
+compdump:43> _d_f=tpkg-install
+compdump:44> print -r - \''tpkg-install'\' \''_toolchain-source'\'
+compdump:43> _d_f=tpkg-install-libc
+compdump:44> print -r - \''tpkg-install-libc'\' \''_toolchain-source'\'
+compdump:43> _d_f=tpkg-make
+compdump:44> print -r - \''tpkg-make'\' \''_toolchain-source'\'
+compdump:43> _d_f=tpkg-update
+compdump:44> print -r - \''tpkg-update'\' \''_toolchain-source'\'
+compdump:43> _d_f=tput
+compdump:44> print -r - \''tput'\' \''_tput'\'
+compdump:43> _d_f=tr
+compdump:44> print -r - \''tr'\' \''_tr'\'
+compdump:43> _d_f=tracepath
+compdump:44> print -r - \''tracepath'\' \''_tracepath'\'
+compdump:43> _d_f=tracepath6
+compdump:44> print -r - \''tracepath6'\' \''_tracepath'\'
+compdump:43> _d_f=traceroute
+compdump:44> print -r - \''traceroute'\' \''_hosts'\'
+compdump:43> _d_f=trap
+compdump:44> print -r - \''trap'\' \''_trap'\'
+compdump:43> _d_f=tree
+compdump:44> print -r - \''tree'\' \''_tree'\'
+compdump:43> _d_f=trial
+compdump:44> print -r - \''trial'\' \''_twisted'\'
+compdump:43> _d_f=trove
+compdump:44> print -r - \''trove'\' \''_openstack'\'
+compdump:43> _d_f=true
+compdump:44> print -r - \''true'\' \''_nothing'\'
+compdump:43> _d_f=truss
+compdump:44> print -r - \''truss'\' \''_truss'\'
+compdump:43> _d_f=tryaffix
+compdump:44> print -r - \''tryaffix'\' \''_ispell'\'
+compdump:43> _d_f=ttyctl
+compdump:44> print -r - \''ttyctl'\' \''_ttyctl'\'
+compdump:43> _d_f=tunctl
+compdump:44> print -r - \''tunctl'\' \''_uml'\'
+compdump:43> _d_f=tune2fs
+compdump:44> print -r - \''tune2fs'\' \''_tune2fs'\'
+compdump:43> _d_f=tunes2pod
+compdump:44> print -r - \''tunes2pod'\' \''_gnupod'\'
+compdump:43> _d_f=tunes2pod.pl
+compdump:44> print -r - \''tunes2pod.pl'\' \''_gnupod'\'
+compdump:43> _d_f=twidge
+compdump:44> print -r - \''twidge'\' \''_twidge'\'
+compdump:43> _d_f=twistd
+compdump:44> print -r - \''twistd'\' \''_twisted'\'
+compdump:43> _d_f=txt
+compdump:44> print -r - \''txt'\' \''_hosts'\'
+compdump:43> _d_f=type
+compdump:44> print -r - \''type'\' \''_which'\'
+compdump:43> _d_f=typeset
+compdump:44> print -r - \''typeset'\' \''_typeset'\'
+compdump:43> _d_f=udevadm
+compdump:44> print -r - \''udevadm'\' \''_udevadm'\'
+compdump:43> _d_f=ulimit
+compdump:44> print -r - \''ulimit'\' \''_ulimit'\'
+compdump:43> _d_f=uml_mconsole
+compdump:44> print -r - \''uml_mconsole'\' \''_uml'\'
+compdump:43> _d_f=uml_moo
+compdump:44> print -r - \''uml_moo'\' \''_uml'\'
+compdump:43> _d_f=uml_switch
+compdump:44> print -r - \''uml_switch'\' \''_uml'\'
+compdump:43> _d_f=umount
+compdump:44> print -r - \''umount'\' \''_mount'\'
+compdump:43> _d_f=unace
+compdump:44> print -r - \''unace'\' \''_unace'\'
+compdump:43> _d_f=unalias
+compdump:44> print -r - \''unalias'\' \''_aliases'\'
+compdump:43> _d_f=uname
+compdump:44> print -r - \''uname'\' \''_uname'\'
+compdump:43> _d_f=uncompress
+compdump:44> print -r - \''uncompress'\' \''_compress'\'
+compdump:43> _d_f=unexpand
+compdump:44> print -r - \''unexpand'\' \''_unexpand'\'
+compdump:43> _d_f=unfunction
+compdump:44> print -r - \''unfunction'\' \''_functions'\'
+compdump:43> _d_f=unget
+compdump:44> print -r - \''unget'\' \''_sccs'\'
+compdump:43> _d_f=unhash
+compdump:44> print -r - \''unhash'\' \''_unhash'\'
+compdump:43> _d_f=uniq
+compdump:44> print -r - \''uniq'\' \''_uniq'\'
+compdump:43> _d_f=unison
+compdump:44> print -r - \''unison'\' \''_unison'\'
+compdump:43> _d_f=units
+compdump:44> print -r - \''units'\' \''_units'\'
+compdump:43> _d_f=unlimit
+compdump:44> print -r - \''unlimit'\' \''_limits'\'
+compdump:43> _d_f=unlzma
+compdump:44> print -r - \''unlzma'\' \''_xz'\'
+compdump:43> _d_f=unpack
+compdump:44> print -r - \''unpack'\' \''_pack'\'
+compdump:43> _d_f=unpigz
+compdump:44> print -r - \''unpigz'\' \''_gzip'\'
+compdump:43> _d_f=unrar
+compdump:44> print -r - \''unrar'\' \''_rar'\'
+compdump:43> _d_f=unset
+compdump:44> print -r - \''unset'\' \''_vars'\'
+compdump:43> _d_f=unsetopt
+compdump:44> print -r - \''unsetopt'\' \''_setopt'\'
+compdump:43> _d_f=unwrapdiff
+compdump:44> print -r - \''unwrapdiff'\' \''_patchutils'\'
+compdump:43> _d_f=unxz
+compdump:44> print -r - \''unxz'\' \''_xz'\'
+compdump:43> _d_f=unzip
+compdump:44> print -r - \''unzip'\' \''_zip'\'
+compdump:43> _d_f=update-alternatives
+compdump:44> print -r - \''update-alternatives'\' \''_update-alternatives'\'
+compdump:43> _d_f=update-rc.d
+compdump:44> print -r - \''update-rc.d'\' \''_update-rc.d'\'
+compdump:43> _d_f=upgradepkg
+compdump:44> print -r - \''upgradepkg'\' \''_pkgtool'\'
+compdump:43> _d_f=urpme
+compdump:44> print -r - \''urpme'\' \''_urpmi'\'
+compdump:43> _d_f=urpmf
+compdump:44> print -r - \''urpmf'\' \''_urpmi'\'
+compdump:43> _d_f=urpmi
+compdump:44> print -r - \''urpmi'\' \''_urpmi'\'
+compdump:43> _d_f=urpmi.addmedia
+compdump:44> print -r - \''urpmi.addmedia'\' \''_urpmi'\'
+compdump:43> _d_f=urpmi.removemedia
+compdump:44> print -r - \''urpmi.removemedia'\' \''_urpmi'\'
+compdump:43> _d_f=urpmi.update
+compdump:44> print -r - \''urpmi.update'\' \''_urpmi'\'
+compdump:43> _d_f=urpmq
+compdump:44> print -r - \''urpmq'\' \''_urpmi'\'
+compdump:43> _d_f=urxvt
+compdump:44> print -r - \''urxvt'\' \''_urxvt'\'
+compdump:43> _d_f=urxvt256c
+compdump:44> print -r - \''urxvt256c'\' \''_urxvt'\'
+compdump:43> _d_f=urxvt256cc
+compdump:44> print -r - \''urxvt256cc'\' \''_urxvt'\'
+compdump:43> _d_f=urxvt256c-ml
+compdump:44> print -r - \''urxvt256c-ml'\' \''_urxvt'\'
+compdump:43> _d_f=urxvt256c-mlc
+compdump:44> print -r - \''urxvt256c-mlc'\' \''_urxvt'\'
+compdump:43> _d_f=urxvtc
+compdump:44> print -r - \''urxvtc'\' \''_urxvt'\'
+compdump:43> _d_f=uscan
+compdump:44> print -r - \''uscan'\' \''_uscan'\'
+compdump:43> _d_f=useradd
+compdump:44> print -r - \''useradd'\' \''_user_admin'\'
+compdump:43> _d_f=userdel
+compdump:44> print -r - \''userdel'\' \''_users'\'
+compdump:43> _d_f=usermod
+compdump:44> print -r - \''usermod'\' \''_user_admin'\'
+compdump:43> _d_f=uzbl
+compdump:44> print -r - \''uzbl'\' \''_uzbl'\'
+compdump:43> _d_f=uzbl-browser
+compdump:44> print -r - \''uzbl-browser'\' \''_uzbl'\'
+compdump:43> _d_f=uzbl-tabbed
+compdump:44> print -r - \''uzbl-tabbed'\' \''_uzbl'\'
+compdump:43> _d_f=val
+compdump:44> print -r - \''val'\' \''_sccs'\'
+compdump:43> _d_f=valgrind
+compdump:44> print -r - \''valgrind'\' \''_valgrind'\'
+compdump:43> _d_f=-value-
+compdump:44> print -r - \''-value-'\' \''_value'\'
+compdump:43> _d_f=-value-,ADB_TRACE,-default-
+compdump:44> print -r - \''-value-,ADB_TRACE,-default-'\' \''_adb'\'
+compdump:43> _d_f=-value-,ANDROID_LOG_TAGS,-default-
+compdump:44> print -r - \''-value-,ANDROID_LOG_TAGS,-default-'\' \''_adb'\'
+compdump:43> _d_f=-value-,ANDROID_SERIAL,-default-
+compdump:44> print -r - \''-value-,ANDROID_SERIAL,-default-'\' \''_adb'\'
+compdump:43> _d_f=-value-,ANT_ARGS,-default-
+compdump:44> print -r - \''-value-,ANT_ARGS,-default-'\' \''_ant'\'
+compdump:43> _d_f=-value-,CFLAGS,-default-
+compdump:44> print -r - \''-value-,CFLAGS,-default-'\' \''_gcc'\'
+compdump:43> _d_f=-value-,CPPFLAGS,-default-
+compdump:44> print -r - \''-value-,CPPFLAGS,-default-'\' \''_gcc'\'
+compdump:43> _d_f=-value-,CXXFLAGS,-default-
+compdump:44> print -r - \''-value-,CXXFLAGS,-default-'\' \''_gcc'\'
+compdump:43> _d_f=-value-,-default-,-command-
+compdump:44> print -r - \''-value-,-default-,-command-'\' \''_zargs'\'
+compdump:43> _d_f=-value-,-default-,-default-
+compdump:44> print -r - \''-value-,-default-,-default-'\' \''_value'\'
+compdump:43> _d_f=-value-,DISPLAY,-default-
+compdump:44> print -r - \''-value-,DISPLAY,-default-'\' \''_x_display'\'
+compdump:43> _d_f=-value-,GREP_OPTIONS,-default-
+compdump:44> print -r - \''-value-,GREP_OPTIONS,-default-'\' \''_grep'\'
+compdump:43> _d_f=-value-,GZIP,-default-
+compdump:44> print -r - \''-value-,GZIP,-default-'\' \''_gzip'\'
+compdump:43> _d_f=-value-,LANG,-default-
+compdump:44> print -r - \''-value-,LANG,-default-'\' \''_locales'\'
+compdump:43> _d_f=-value-,LANGUAGE,-default-
+compdump:44> print -r - \''-value-,LANGUAGE,-default-'\' \''_locales'\'
+compdump:43> _d_f=-value-,LD_DEBUG,-default-
+compdump:44> print -r - \''-value-,LD_DEBUG,-default-'\' \''_ld_debug'\'
+compdump:43> _d_f=-value-,LDFLAGS,-default-
+compdump:44> print -r - \''-value-,LDFLAGS,-default-'\' \''_gcc'\'
+compdump:43> _d_f=-value-,LESSCHARSET,-default-
+compdump:44> print -r - \''-value-,LESSCHARSET,-default-'\' \''_less'\'
+compdump:43> _d_f=-value-,LESS,-default-
+compdump:44> print -r - \''-value-,LESS,-default-'\' \''_less'\'
+compdump:43> _d_f=-value-,LPDEST,-default-
+compdump:44> print -r - \''-value-,LPDEST,-default-'\' \''_printers'\'
+compdump:43> _d_f=-value-,P4CLIENT,-default-
+compdump:44> print -r - \''-value-,P4CLIENT,-default-'\' \''_perforce'\'
+compdump:43> _d_f=-value-,P4MERGE,-default-
+compdump:44> print -r - \''-value-,P4MERGE,-default-'\' \''_perforce'\'
+compdump:43> _d_f=-value-,P4PORT,-default-
+compdump:44> print -r - \''-value-,P4PORT,-default-'\' \''_perforce'\'
+compdump:43> _d_f=-value-,P4USER,-default-
+compdump:44> print -r - \''-value-,P4USER,-default-'\' \''_perforce'\'
+compdump:43> _d_f=-value-,PERLDOC,-default-
+compdump:44> print -r - \''-value-,PERLDOC,-default-'\' \''_perldoc'\'
+compdump:43> _d_f=-value-,PRINTER,-default-
+compdump:44> print -r - \''-value-,PRINTER,-default-'\' \''_printers'\'
+compdump:43> _d_f=-value-,PROMPT2,-default-
+compdump:44> print -r - \''-value-,PROMPT2,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PROMPT3,-default-
+compdump:44> print -r - \''-value-,PROMPT3,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PROMPT4,-default-
+compdump:44> print -r - \''-value-,PROMPT4,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PROMPT,-default-
+compdump:44> print -r - \''-value-,PROMPT,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PS1,-default-
+compdump:44> print -r - \''-value-,PS1,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PS2,-default-
+compdump:44> print -r - \''-value-,PS2,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PS3,-default-
+compdump:44> print -r - \''-value-,PS3,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,PS4,-default-
+compdump:44> print -r - \''-value-,PS4,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,RPROMPT2,-default-
+compdump:44> print -r - \''-value-,RPROMPT2,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,RPROMPT,-default-
+compdump:44> print -r - \''-value-,RPROMPT,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,RPS1,-default-
+compdump:44> print -r - \''-value-,RPS1,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,RPS2,-default-
+compdump:44> print -r - \''-value-,RPS2,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,SPROMPT,-default-
+compdump:44> print -r - \''-value-,SPROMPT,-default-'\' \''_ps1234'\'
+compdump:43> _d_f=-value-,TERM,-default-
+compdump:44> print -r - \''-value-,TERM,-default-'\' \''_terminals'\'
+compdump:43> _d_f=-value-,TERMINFO_DIRS,-default-
+compdump:44> print -r - \''-value-,TERMINFO_DIRS,-default-'\' \''_dir_list'\'
+compdump:43> _d_f=-value-,TZ,-default-
+compdump:44> print -r - \''-value-,TZ,-default-'\' \''_time_zone'\'
+compdump:43> _d_f=-value-,VALGRIND_OPTS,-default-
+compdump:44> print -r - \''-value-,VALGRIND_OPTS,-default-'\' \''_valgrind'\'
+compdump:43> _d_f=-value-,WWW_HOME,-default-
+compdump:44> print -r - \''-value-,WWW_HOME,-default-'\' \''_urls'\'
+compdump:43> _d_f=-value-,XML_CATALOG_FILES,-default-
+compdump:44> print -r - \''-value-,XML_CATALOG_FILES,-default-'\' \''_xmlsoft'\'
+compdump:43> _d_f=-value-,XZ_DEFAULTS,-default-
+compdump:44> print -r - \''-value-,XZ_DEFAULTS,-default-'\' \''_xz'\'
+compdump:43> _d_f=-value-,XZ_OPT,-default-
+compdump:44> print -r - \''-value-,XZ_OPT,-default-'\' \''_xz'\'
+compdump:43> _d_f=vared
+compdump:44> print -r - \''vared'\' \''_vared'\'
+compdump:43> _d_f=-vared-
+compdump:44> print -r - \''-vared-'\' \''_in_vared'\'
+compdump:43> _d_f=vcsh
+compdump:44> print -r - \''vcsh'\' \''_vcsh'\'
+compdump:43> _d_f=vim
+compdump:44> print -r - \''vim'\' \''_vim'\'
+compdump:43> _d_f=vim-addons
+compdump:44> print -r - \''vim-addons'\' \''_vim-addons'\'
+compdump:43> _d_f=vimdiff
+compdump:44> print -r - \''vimdiff'\' \''_vim'\'
+compdump:43> _d_f=virsh
+compdump:44> print -r - \''virsh'\' \''_libvirt'\'
+compdump:43> _d_f=virt-admin
+compdump:44> print -r - \''virt-admin'\' \''_libvirt'\'
+compdump:43> _d_f=virt-host-validate
+compdump:44> print -r - \''virt-host-validate'\' \''_libvirt'\'
+compdump:43> _d_f=virt-pki-validate
+compdump:44> print -r - \''virt-pki-validate'\' \''_libvirt'\'
+compdump:43> _d_f=virt-xml-validate
+compdump:44> print -r - \''virt-xml-validate'\' \''_libvirt'\'
+compdump:43> _d_f=vitrage
+compdump:44> print -r - \''vitrage'\' \''_openstack'\'
+compdump:43> _d_f=vmstat
+compdump:44> print -r - \''vmstat'\' \''_vmstat'\'
+compdump:43> _d_f=vncserver
+compdump:44> print -r - \''vncserver'\' \''_vnc'\'
+compdump:43> _d_f=vncviewer
+compdump:44> print -r - \''vncviewer'\' \''_vnc'\'
+compdump:43> _d_f=vorbiscomment
+compdump:44> print -r - \''vorbiscomment'\' \''_vorbiscomment'\'
+compdump:43> _d_f=vserver
+compdump:44> print -r - \''vserver'\' \''_vserver'\'
+compdump:43> _d_f=vux
+compdump:44> print -r - \''vux'\' \''_vux'\'
+compdump:43> _d_f=vuxctl
+compdump:44> print -r - \''vuxctl'\' \''_vux'\'
+compdump:43> _d_f=w3m
+compdump:44> print -r - \''w3m'\' \''_w3m'\'
+compdump:43> _d_f=wait
+compdump:44> print -r - \''wait'\' \''_wait'\'
+compdump:43> _d_f=wajig
+compdump:44> print -r - \''wajig'\' \''_wajig'\'
+compdump:43> _d_f=wanna-build
+compdump:44> print -r - \''wanna-build'\' \''_wanna-build'\'
+compdump:43> _d_f=watch
+compdump:44> print -r - \''watch'\' \''_watch'\'
+compdump:43> _d_f=watcher
+compdump:44> print -r - \''watcher'\' \''_openstack'\'
+compdump:43> _d_f=wc
+compdump:44> print -r - \''wc'\' \''_wc'\'
+compdump:43> _d_f=wget
+compdump:44> print -r - \''wget'\' \''_wget'\'
+compdump:43> _d_f=what
+compdump:44> print -r - \''what'\' \''_sccs'\'
+compdump:43> _d_f=whatis
+compdump:44> print -r - \''whatis'\' \''_man'\'
+compdump:43> _d_f=whence
+compdump:44> print -r - \''whence'\' \''_which'\'
+compdump:43> _d_f=where
+compdump:44> print -r - \''where'\' \''_which'\'
+compdump:43> _d_f=whereis
+compdump:44> print -r - \''whereis'\' \''_whereis'\'
+compdump:43> _d_f=which
+compdump:44> print -r - \''which'\' \''_which'\'
+compdump:43> _d_f=whoami
+compdump:44> print -r - \''whoami'\' \''_nothing'\'
+compdump:43> _d_f=whois
+compdump:44> print -r - \''whois'\' \''_whois'\'
+compdump:43> _d_f=whom
+compdump:44> print -r - \''whom'\' \''_mh'\'
+compdump:43> _d_f=wiggle
+compdump:44> print -r - \''wiggle'\' \''_wiggle'\'
+compdump:43> _d_f=wodim
+compdump:44> print -r - \''wodim'\' \''_cdrecord'\'
+compdump:43> _d_f=wpa_cli
+compdump:44> print -r - \''wpa_cli'\' \''_wpa_cli'\'
+compdump:43> _d_f=write
+compdump:44> print -r - \''write'\' \''_users_on'\'
+compdump:43> _d_f=www
+compdump:44> print -r - \''www'\' \''_webbrowser'\'
+compdump:43> _d_f=xargs
+compdump:44> print -r - \''xargs'\' \''_xargs'\'
+compdump:43> _d_f=xauth
+compdump:44> print -r - \''xauth'\' \''_xauth'\'
+compdump:43> _d_f=xautolock
+compdump:44> print -r - \''xautolock'\' \''_xautolock'\'
+compdump:43> _d_f=xclip
+compdump:44> print -r - \''xclip'\' \''_xclip'\'
+compdump:43> _d_f=xdpyinfo
+compdump:44> print -r - \''xdpyinfo'\' \''_x_utils'\'
+compdump:43> _d_f=xdvi
+compdump:44> print -r - \''xdvi'\' \''_xdvi'\'
+compdump:43> _d_f=xelatex
+compdump:44> print -r - \''xelatex'\' \''_tex'\'
+compdump:43> _d_f=xetex
+compdump:44> print -r - \''xetex'\' \''_tex'\'
+compdump:43> _d_f=xev
+compdump:44> print -r - \''xev'\' \''_x_utils'\'
+compdump:43> _d_f=xfd
+compdump:44> print -r - \''xfd'\' \''_x_utils'\'
+compdump:43> _d_f=xfig
+compdump:44> print -r - \''xfig'\' \''_xfig'\'
+compdump:43> _d_f=xfontsel
+compdump:44> print -r - \''xfontsel'\' \''_x_utils'\'
+compdump:43> _d_f=xfreerdp
+compdump:44> print -r - \''xfreerdp'\' \''_rdesktop'\'
+compdump:43> _d_f=xhost
+compdump:44> print -r - \''xhost'\' \''_x_utils'\'
+compdump:43> _d_f=xkill
+compdump:44> print -r - \''xkill'\' \''_x_utils'\'
+compdump:43> _d_f=xli
+compdump:44> print -r - \''xli'\' \''_xloadimage'\'
+compdump:43> _d_f=xloadimage
+compdump:44> print -r - \''xloadimage'\' \''_xloadimage'\'
+compdump:43> _d_f=xlsatoms
+compdump:44> print -r - \''xlsatoms'\' \''_x_utils'\'
+compdump:43> _d_f=xlsclients
+compdump:44> print -r - \''xlsclients'\' \''_x_utils'\'
+compdump:43> _d_f=xmllint
+compdump:44> print -r - \''xmllint'\' \''_xmlsoft'\'
+compdump:43> _d_f=xmms2
+compdump:44> print -r - \''xmms2'\' \''_xmms2'\'
+compdump:43> _d_f=xmodmap
+compdump:44> print -r - \''xmodmap'\' \''_xmodmap'\'
+compdump:43> _d_f=xmosaic
+compdump:44> print -r - \''xmosaic'\' \''_webbrowser'\'
+compdump:43> _d_f=xon
+compdump:44> print -r - \''xon'\' \''_x_utils'\'
+compdump:43> _d_f=xournal
+compdump:44> print -r - \''xournal'\' \''_xournal'\'
+compdump:43> _d_f=xpdf
+compdump:44> print -r - \''xpdf'\' \''_xpdf'\'
+compdump:43> _d_f=xping
+compdump:44> print -r - \''xping'\' \''_hosts'\'
+compdump:43> _d_f=xprop
+compdump:44> print -r - \''xprop'\' \''_x_utils'\'
+compdump:43> _d_f=xrandr
+compdump:44> print -r - \''xrandr'\' \''_xrandr'\'
+compdump:43> _d_f=xrdb
+compdump:44> print -r - \''xrdb'\' \''_x_utils'\'
+compdump:43> _d_f=xscreensaver-command
+compdump:44> print -r - \''xscreensaver-command'\' \''_xscreensaver'\'
+compdump:43> _d_f=xset
+compdump:44> print -r - \''xset'\' \''_xset'\'
+compdump:43> _d_f=xsetbg
+compdump:44> print -r - \''xsetbg'\' \''_xloadimage'\'
+compdump:43> _d_f=xsetroot
+compdump:44> print -r - \''xsetroot'\' \''_x_utils'\'
+compdump:43> _d_f=xsltproc
+compdump:44> print -r - \''xsltproc'\' \''_xmlsoft'\'
+compdump:43> _d_f=xterm
+compdump:44> print -r - \''xterm'\' \''_xterm'\'
+compdump:43> _d_f=xtightvncviewer
+compdump:44> print -r - \''xtightvncviewer'\' \''_vnc'\'
+compdump:43> _d_f=xtp
+compdump:44> print -r - \''xtp'\' \''_imagemagick'\'
+compdump:43> _d_f=xv
+compdump:44> print -r - \''xv'\' \''_xv'\'
+compdump:43> _d_f=xview
+compdump:44> print -r - \''xview'\' \''_xloadimage'\'
+compdump:43> _d_f=xvnc4viewer
+compdump:44> print -r - \''xvnc4viewer'\' \''_vnc'\'
+compdump:43> _d_f=xvncviewer
+compdump:44> print -r - \''xvncviewer'\' \''_vnc'\'
+compdump:43> _d_f=xwd
+compdump:44> print -r - \''xwd'\' \''_x_utils'\'
+compdump:43> _d_f=xwininfo
+compdump:44> print -r - \''xwininfo'\' \''_x_utils'\'
+compdump:43> _d_f=xwit
+compdump:44> print -r - \''xwit'\' \''_xwit'\'
+compdump:43> _d_f=xwud
+compdump:44> print -r - \''xwud'\' \''_x_utils'\'
+compdump:43> _d_f=xxd
+compdump:44> print -r - \''xxd'\' \''_xxd'\'
+compdump:43> _d_f=xz
+compdump:44> print -r - \''xz'\' \''_xz'\'
+compdump:43> _d_f=xzcat
+compdump:44> print -r - \''xzcat'\' \''_xz'\'
+compdump:43> _d_f=yafc
+compdump:44> print -r - \''yafc'\' \''_yafc'\'
+compdump:43> _d_f=yast
+compdump:44> print -r - \''yast'\' \''_yast'\'
+compdump:43> _d_f=yast2
+compdump:44> print -r - \''yast2'\' \''_yast'\'
+compdump:43> _d_f=ypbind
+compdump:44> print -r - \''ypbind'\' \''_yp'\'
+compdump:43> _d_f=ypcat
+compdump:44> print -r - \''ypcat'\' \''_yp'\'
+compdump:43> _d_f=ypmatch
+compdump:44> print -r - \''ypmatch'\' \''_yp'\'
+compdump:43> _d_f=yppasswd
+compdump:44> print -r - \''yppasswd'\' \''_yp'\'
+compdump:43> _d_f=yppoll
+compdump:44> print -r - \''yppoll'\' \''_yp'\'
+compdump:43> _d_f=yppush
+compdump:44> print -r - \''yppush'\' \''_yp'\'
+compdump:43> _d_f=ypserv
+compdump:44> print -r - \''ypserv'\' \''_yp'\'
+compdump:43> _d_f=ypset
+compdump:44> print -r - \''ypset'\' \''_yp'\'
+compdump:43> _d_f=ypwhich
+compdump:44> print -r - \''ypwhich'\' \''_yp'\'
+compdump:43> _d_f=ypxfr
+compdump:44> print -r - \''ypxfr'\' \''_yp'\'
+compdump:43> _d_f=ytalk
+compdump:44> print -r - \''ytalk'\' \''_other_accounts'\'
+compdump:43> _d_f=yum
+compdump:44> print -r - \''yum'\' \''_yum'\'
+compdump:43> _d_f=zargs
+compdump:44> print -r - \''zargs'\' \''_zargs'\'
+compdump:43> _d_f=zathura
+compdump:44> print -r - \''zathura'\' \''_pspdf'\'
+compdump:43> _d_f=zcalc
+compdump:44> print -r - \''zcalc'\' \''_zcalc'\'
+compdump:43> _d_f=-zcalc-line-
+compdump:44> print -r - \''-zcalc-line-'\' \''_zcalc_line'\'
+compdump:43> _d_f=zcat
+compdump:44> print -r - \''zcat'\' \''_zcat'\'
+compdump:43> _d_f=zcompile
+compdump:44> print -r - \''zcompile'\' \''_zcompile'\'
+compdump:43> _d_f=zcp
+compdump:44> print -r - \''zcp'\' \''_zmv'\'
+compdump:43> _d_f=zdelattr
+compdump:44> print -r - \''zdelattr'\' \''_zattr'\'
+compdump:43> _d_f=zdump
+compdump:44> print -r - \''zdump'\' \''_zdump'\'
+compdump:43> _d_f=zed
+compdump:44> print -r - \''zed'\' \''_zed'\'
+compdump:43> _d_f=zegrep
+compdump:44> print -r - \''zegrep'\' \''_grep'\'
+compdump:43> _d_f=zen
+compdump:44> print -r - \''zen'\' \''_webbrowser'\'
+compdump:43> _d_f=zf_chgrp
+compdump:44> print -r - \''zf_chgrp'\' \''_chown'\'
+compdump:43> _d_f=zf_chown
+compdump:44> print -r - \''zf_chown'\' \''_chown'\'
+compdump:43> _d_f=zfgrep
+compdump:44> print -r - \''zfgrep'\' \''_grep'\'
+compdump:43> _d_f=zf_ln
+compdump:44> print -r - \''zf_ln'\' \''_ln'\'
+compdump:43> _d_f=zf_mkdir
+compdump:44> print -r - \''zf_mkdir'\' \''_mkdir'\'
+compdump:43> _d_f=zf_rm
+compdump:44> print -r - \''zf_rm'\' \''_rm'\'
+compdump:43> _d_f=zf_rmdir
+compdump:44> print -r - \''zf_rmdir'\' \''_directories'\'
+compdump:43> _d_f=zfs
+compdump:44> print -r - \''zfs'\' \''_zfs'\'
+compdump:43> _d_f=zgetattr
+compdump:44> print -r - \''zgetattr'\' \''_zattr'\'
+compdump:43> _d_f=zgrep
+compdump:44> print -r - \''zgrep'\' \''_grep'\'
+compdump:43> _d_f=zip
+compdump:44> print -r - \''zip'\' \''_zip'\'
+compdump:43> _d_f=zipinfo
+compdump:44> print -r - \''zipinfo'\' \''_zip'\'
+compdump:43> _d_f=zle
+compdump:44> print -r - \''zle'\' \''_zle'\'
+compdump:43> _d_f=zlistattr
+compdump:44> print -r - \''zlistattr'\' \''_zattr'\'
+compdump:43> _d_f=zln
+compdump:44> print -r - \''zln'\' \''_zmv'\'
+compdump:43> _d_f=zlogin
+compdump:44> print -r - \''zlogin'\' \''_zlogin'\'
+compdump:43> _d_f=zmail
+compdump:44> print -r - \''zmail'\' \''_mail'\'
+compdump:43> _d_f=zmodload
+compdump:44> print -r - \''zmodload'\' \''_zmodload'\'
+compdump:43> _d_f=zmv
+compdump:44> print -r - \''zmv'\' \''_zmv'\'
+compdump:43> _d_f=zone
+compdump:44> print -r - \''zone'\' \''_hosts'\'
+compdump:43> _d_f=zoneadm
+compdump:44> print -r - \''zoneadm'\' \''_zoneadm'\'
+compdump:43> _d_f=zpool
+compdump:44> print -r - \''zpool'\' \''_zpool'\'
+compdump:43> _d_f=zpty
+compdump:44> print -r - \''zpty'\' \''_zpty'\'
+compdump:43> _d_f=zsetattr
+compdump:44> print -r - \''zsetattr'\' \''_zattr'\'
+compdump:43> _d_f=zsh
+compdump:44> print -r - \''zsh'\' \''_zsh'\'
+compdump:43> _d_f=zsh-mime-handler
+compdump:44> print -r - \''zsh-mime-handler'\' \''_zsh-mime-handler'\'
+compdump:43> _d_f=zsocket
+compdump:44> print -r - \''zsocket'\' \''_zsocket'\'
+compdump:43> _d_f=zstat
+compdump:44> print -r - \''zstat'\' \''_stat'\'
+compdump:43> _d_f=zstyle
+compdump:44> print -r - \''zstyle'\' \''_zstyle'\'
+compdump:43> _d_f=ztodo
+compdump:44> print -r - \''ztodo'\' \''_ztodo'\'
+compdump:43> _d_f=zun
+compdump:44> print -r - \''zun'\' \''_openstack'\'
+compdump:43> _d_f=zxpdf
+compdump:44> print -r - \''zxpdf'\' \''_xpdf'\'
+compdump:43> _d_f=zypper
+compdump:44> print -r - \''zypper'\' \''_zypper'\'
+compdump:46> print ')'
+compdump:48> print '\n_services=('
+compdump:49> _d_f=bzcat
+compdump:50> print -r - \''bzcat'\' \''bunzip2'\'
+compdump:49> _d_f=dch
+compdump:50> print -r - \''dch'\' \''debchange'\'
+compdump:49> _d_f=gnupod_addsong.pl
+compdump:50> print -r - \''gnupod_addsong.pl'\' \''gnupod_addsong'\'
+compdump:49> _d_f=gnupod_check.pl
+compdump:50> print -r - \''gnupod_check.pl'\' \''gnupod_check'\'
+compdump:49> _d_f=gnupod_INIT.pl
+compdump:50> print -r - \''gnupod_INIT.pl'\' \''gnupod_INIT'\'
+compdump:49> _d_f=gnupod_search.pl
+compdump:50> print -r - \''gnupod_search.pl'\' \''gnupod_search'\'
+compdump:49> _d_f=gpg2
+compdump:50> print -r - \''gpg2'\' \''gpg'\'
+compdump:49> _d_f=gzcat
+compdump:50> print -r - \''gzcat'\' \''gunzip'\'
+compdump:49> _d_f=iceweasel
+compdump:50> print -r - \''iceweasel'\' \''firefox'\'
+compdump:49> _d_f=lzcat
+compdump:50> print -r - \''lzcat'\' \''unxz'\'
+compdump:49> _d_f=lzma
+compdump:50> print -r - \''lzma'\' \''xz'\'
+compdump:49> _d_f=Mail
+compdump:50> print -r - \''Mail'\' \''mail'\'
+compdump:49> _d_f=mailx
+compdump:50> print -r - \''mailx'\' \''mail'\'
+compdump:49> _d_f=mktunes.pl
+compdump:50> print -r - \''mktunes.pl'\' \''mktunes'\'
+compdump:49> _d_f=nail
+compdump:50> print -r - \''nail'\' \''mail'\'
+compdump:49> _d_f=ncl
+compdump:50> print -r - \''ncl'\' \''nc'\'
+compdump:49> _d_f=nedit-nc
+compdump:50> print -r - \''nedit-nc'\' \''nc'\'
+compdump:49> _d_f=pcat
+compdump:50> print -r - \''pcat'\' \''unpack'\'
+compdump:49> _d_f=-redirect-,<,bunzip2
+compdump:50> print -r - \''-redirect-,<,bunzip2'\' \''bunzip2'\'
+compdump:49> _d_f=-redirect-,<,bzip2
+compdump:50> print -r - \''-redirect-,<,bzip2'\' \''bzip2'\'
+compdump:49> _d_f=-redirect-,>,bzip2
+compdump:50> print -r - \''-redirect-,>,bzip2'\' \''bunzip2'\'
+compdump:49> _d_f=-redirect-,<,compress
+compdump:50> print -r - \''-redirect-,<,compress'\' \''compress'\'
+compdump:49> _d_f=-redirect-,>,compress
+compdump:50> print -r - \''-redirect-,>,compress'\' \''uncompress'\'
+compdump:49> _d_f=-redirect-,<,gunzip
+compdump:50> print -r - \''-redirect-,<,gunzip'\' \''gunzip'\'
+compdump:49> _d_f=-redirect-,<,gzip
+compdump:50> print -r - \''-redirect-,<,gzip'\' \''gzip'\'
+compdump:49> _d_f=-redirect-,>,gzip
+compdump:50> print -r - \''-redirect-,>,gzip'\' \''gunzip'\'
+compdump:49> _d_f=-redirect-,<,uncompress
+compdump:50> print -r - \''-redirect-,<,uncompress'\' \''uncompress'\'
+compdump:49> _d_f=-redirect-,<,unxz
+compdump:50> print -r - \''-redirect-,<,unxz'\' \''unxz'\'
+compdump:49> _d_f=-redirect-,<,xz
+compdump:50> print -r - \''-redirect-,<,xz'\' \''xz'\'
+compdump:49> _d_f=-redirect-,>,xz
+compdump:50> print -r - \''-redirect-,>,xz'\' \''unxz'\'
+compdump:49> _d_f=remsh
+compdump:50> print -r - \''remsh'\' \''rsh'\'
+compdump:49> _d_f=slogin
+compdump:50> print -r - \''slogin'\' \''ssh'\'
+compdump:49> _d_f=svnadmin-static
+compdump:50> print -r - \''svnadmin-static'\' \''svnadmin'\'
+compdump:49> _d_f=tunes2pod.pl
+compdump:50> print -r - \''tunes2pod.pl'\' \''tunes2pod'\'
+compdump:49> _d_f=unlzma
+compdump:50> print -r - \''unlzma'\' \''unxz'\'
+compdump:49> _d_f=xelatex
+compdump:50> print -r - \''xelatex'\' \''latex'\'
+compdump:49> _d_f=xetex
+compdump:50> print -r - \''xetex'\' \''tex'\'
+compdump:49> _d_f=xzcat
+compdump:50> print -r - \''xzcat'\' \''unxz'\'
+compdump:49> _d_f=zf_chgrp
+compdump:50> print -r - \''zf_chgrp'\' \''chgrp'\'
+compdump:49> _d_f=zf_chown
+compdump:50> print -r - \''zf_chown'\' \''chown'\'
+compdump:52> print ')'
+compdump:54> print '\n_patcomps=('
+compdump:55> _d_f=*/(init|rc[0-9S]#).d/*
+compdump:56> print -r - \''*/(init|rc[0-9S]#).d/*'\' \''_init_d'\'
+compdump:55> _d_f=zf*
+compdump:56> print -r - \''zf*'\' \''_zftp'\'
+compdump:58> print ')'
+compdump:60> _d_tmp=_postpatcomps 
+compdump:61> print '\n_postpatcomps=('
+compdump:62> _d_f=(p[bgpn]m*|*top[bgpn]m)
+compdump:63> print -r - \''(p[bgpn]m*|*top[bgpn]m)'\' \''_pbm'\'
+compdump:62> _d_f=pydoc[0-9.]#
+compdump:63> print -r - \''pydoc[0-9.]#'\' \''_pydoc'\'
+compdump:62> _d_f=python[0-9.]#
+compdump:63> print -r - \''python[0-9.]#'\' \''_python'\'
+compdump:62> _d_f=qemu(|-system-*)
+compdump:63> print -r - \''qemu(|-system-*)'\' \''_qemu'\'
+compdump:62> _d_f=(ruby|[ei]rb)[0-9.]#
+compdump:63> print -r - \''(ruby|[ei]rb)[0-9.]#'\' \''_ruby'\'
+compdump:62> _d_f=(texi(2*|ndex))
+compdump:63> print -r - \''(texi(2*|ndex))'\' \''_texi'\'
+compdump:62> _d_f=(tiff*|*2tiff|pal2rgb)
+compdump:63> print -r - \''(tiff*|*2tiff|pal2rgb)'\' \''_tiff'\'
+compdump:62> _d_f=-value-,(ftp|http(|s))_proxy,-default-
+compdump:63> print -r - \''-value-,(ftp|http(|s))_proxy,-default-'\' \''_urls'\'
+compdump:62> _d_f=-value-,LC_*,-default-
+compdump:63> print -r - \''-value-,LC_*,-default-'\' \''_locales'\'
+compdump:62> _d_f=-value-,*path,-default-
+compdump:63> print -r - \''-value-,*path,-default-'\' \''_directories'\'
+compdump:62> _d_f=-value-,*PATH,-default-
+compdump:63> print -r - \''-value-,*PATH,-default-'\' \''_dir_list'\'
+compdump:62> _d_f=-value-,RUBY(LIB|OPT|PATH),-default-
+compdump:63> print -r - \''-value-,RUBY(LIB|OPT|PATH),-default-'\' \''_ruby'\'
+compdump:62> _d_f=*/X11(|R<4->)/*
+compdump:63> print -r - \''*/X11(|R<4->)/*'\' \''_x_arguments'\'
+compdump:62> _d_f=yodl(|2*)
+compdump:63> print -r - \''yodl(|2*)'\' \''_yodl'\'
+compdump:65> print ')'
+compdump:67> print '\n_compautos=('
+compdump:68> _d_f=_call_program
+compdump:69> print -r - \''_call_program'\' \''+X'\'
+compdump:71> print ')'
+compdump:73> print
+compdump:81> _d_bks=( ) 
+compdump:82> typeset _d_complist=''
+compdump:84> read -rA _d_line
+compdump:83> zle -lL
+compdump:85> [[ _bash_complete-word = _* && _bash_completions = _* ]]
+compdump:86> [[ -z '' && .complete-word = .menu-select ]]
+compdump:90> print -r - zle -C _bash_complete-word .complete-word _bash_completions
+compdump:91> _d_bks+=( _bash_complete-word ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _bash_list-choices = _* && _bash_completions = _* ]]
+compdump:86> [[ -z '' && .list-choices = .menu-select ]]
+compdump:90> print -r - zle -C _bash_list-choices .list-choices _bash_completions
+compdump:91> _d_bks+=( _bash_list-choices ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _complete_debug = _* && _complete_debug = _* ]]
+compdump:86> [[ -z '' && .complete-word = .menu-select ]]
+compdump:90> print -r - zle -C _complete_debug .complete-word _complete_debug
+compdump:91> _d_bks+=( _complete_debug ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _complete_help = _* && _complete_help = _* ]]
+compdump:86> [[ -z '' && .complete-word = .menu-select ]]
+compdump:90> print -r - zle -C _complete_help .complete-word _complete_help
+compdump:91> _d_bks+=( _complete_help ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _complete_tag = _* && _complete_tag = _* ]]
+compdump:86> [[ -z '' && .complete-word = .menu-select ]]
+compdump:90> print -r - zle -C _complete_tag .complete-word _complete_tag
+compdump:91> _d_bks+=( _complete_tag ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _correct_filename = _* && _correct_filename = _* ]]
+compdump:86> [[ -z '' && .complete-word = .menu-select ]]
+compdump:90> print -r - zle -C _correct_filename .complete-word _correct_filename
+compdump:91> _d_bks+=( _correct_filename ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _correct_word = _* && _correct_word = _* ]]
+compdump:86> [[ -z '' && .complete-word = .menu-select ]]
+compdump:90> print -r - zle -C _correct_word .complete-word _correct_word
+compdump:91> _d_bks+=( _correct_word ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _expand_alias = _* && _expand_alias = _* ]]
+compdump:86> [[ -z '' && .complete-word = .menu-select ]]
+compdump:90> print -r - zle -C _expand_alias .complete-word _expand_alias
+compdump:91> _d_bks+=( _expand_alias ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _expand_word = _* && _expand_word = _* ]]
+compdump:86> [[ -z '' && .complete-word = .menu-select ]]
+compdump:90> print -r - zle -C _expand_word .complete-word _expand_word
+compdump:91> _d_bks+=( _expand_word ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _history-complete-newer = _* && _history_complete_word = _* ]]
+compdump:86> [[ -z '' && .complete-word = .menu-select ]]
+compdump:90> print -r - zle -C _history-complete-newer .complete-word _history_complete_word
+compdump:91> _d_bks+=( _history-complete-newer ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _history-complete-older = _* && _history_complete_word = _* ]]
+compdump:86> [[ -z '' && .complete-word = .menu-select ]]
+compdump:90> print -r - zle -C _history-complete-older .complete-word _history_complete_word
+compdump:91> _d_bks+=( _history-complete-older ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _list_expansions = _* && _expand_word = _* ]]
+compdump:86> [[ -z '' && .list-choices = .menu-select ]]
+compdump:90> print -r - zle -C _list_expansions .list-choices _expand_word
+compdump:91> _d_bks+=( _list_expansions ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _most_recent_file = _* && _most_recent_file = _* ]]
+compdump:86> [[ -z '' && .complete-word = .menu-select ]]
+compdump:90> print -r - zle -C _most_recent_file .complete-word _most_recent_file
+compdump:91> _d_bks+=( _most_recent_file ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _next_tags = _* && _next_tags = _* ]]
+compdump:86> [[ -z '' && .list-choices = .menu-select ]]
+compdump:90> print -r - zle -C _next_tags .list-choices _next_tags
+compdump:91> _d_bks+=( _next_tags ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ _read_comp = _* && _read_comp = _* ]]
+compdump:86> [[ -z '' && .complete-word = .menu-select ]]
+compdump:90> print -r - zle -C _read_comp .complete-word _read_comp
+compdump:91> _d_bks+=( _read_comp ) 
+compdump:84> read -rA _d_line
+compdump:85> [[ bracketed-paste = _* ]]
+compdump:84> read -rA _d_line
+compdump:85> [[ down-line-or-beginning-search = _* ]]
+compdump:84> read -rA _d_line
+compdump:85> [[ edit-command-line = _* ]]
+compdump:84> read -rA _d_line
+compdump:85> [[ self-insert = _* ]]
+compdump:84> read -rA _d_line
+compdump:85> [[ up-line-or-beginning-search = _* ]]
+compdump:84> read -rA _d_line
+compdump:85> [[ zle-line-finish = _* ]]
+compdump:84> read -rA _d_line
+compdump:85> [[ zle-line-init = _* ]]
+compdump:84> read -rA _d_line
+compdump:94> bindkey
+compdump:95> read -rA _d_line
+compdump:96> [[ set-mark-command = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ beginning-of-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-char = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ delete-char-or-list = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ end-of-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ forward-char = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ send-break = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-delete-char = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ expand-or-complete = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ accept-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ kill-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ clear-screen = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ accept-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ down-line-or-history = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ accept-line-and-down-history = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ up-line-or-history = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ push-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-incremental-search-backward = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-incremental-search-forward = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ transpose-chars = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ kill-whole-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ quoted-insert = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-kill-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ vi-match-bracket = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ edit-command-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ vi-find-next-char = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ vi-join = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ kill-buffer = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ infer-next-history = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ overwrite-mode = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _read_comp = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^X^R'\'' _read_comp'
+compdump:95> read -rA _d_line
+compdump:96> [[ undo = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ vi-cmd-mode = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ exchange-point-and-mark = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ expand-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ what-cursor-position = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _complete_debug = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^X?'\'' _complete_debug'
+compdump:95> read -rA _d_line
+compdump:96> [[ _correct_filename = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^XC'\'' _correct_filename'
+compdump:95> read -rA _d_line
+compdump:96> [[ list-expand = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _expand_alias = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xa'\'' _expand_alias'
+compdump:95> read -rA _d_line
+compdump:96> [[ _correct_word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xc'\'' _correct_word'
+compdump:95> read -rA _d_line
+compdump:96> [[ _list_expansions = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xd'\'' _list_expansions'
+compdump:95> read -rA _d_line
+compdump:96> [[ _expand_word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xe'\'' _expand_word'
+compdump:95> read -rA _d_line
+compdump:96> [[ list-expand = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _complete_help = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xh'\'' _complete_help'
+compdump:95> read -rA _d_line
+compdump:96> [[ _most_recent_file = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xm'\'' _most_recent_file'
+compdump:95> read -rA _d_line
+compdump:96> [[ _next_tags = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xn'\'' _next_tags'
+compdump:95> read -rA _d_line
+compdump:96> [[ history-incremental-search-backward = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-incremental-search-forward = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _complete_tag = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^Xt'\'' _complete_tag'
+compdump:95> read -rA _d_line
+compdump:96> [[ undo = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _bash_list-choices = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^X~'\'' _bash_list-choices'
+compdump:95> read -rA _d_line
+compdump:96> [[ yank = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ list-choices = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ send-break = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-kill-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ self-insert-unmeta = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ self-insert-unmeta = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ clear-screen = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ self-insert-unmeta = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ copy-prev-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ '"' = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ expand-history = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ quote-region = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ spell-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ quote-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _history-complete-newer = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^[,'\'' _history-complete-newer'
+compdump:95> read -rA _d_line
+compdump:96> [[ neg-argument = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ insert-last-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _history-complete-older = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^[/'\'' _history-complete-older'
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ digit-argument = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ beginning-of-buffer-or-history = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ end-of-buffer-or-history = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ which-command = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ accept-and-hold = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ capitalize-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ kill-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ forward-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ get-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ run-help = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ down-case-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-search-forward = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ up-line-or-beginning-search = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ down-line-or-beginning-search = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ forward-char = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-char = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-search-backward = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ push-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ spell-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ transpose-words = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ up-case-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ copy-region-as-kill = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ forward-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ beginning-of-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ bracketed-paste = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ delete-char = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ end-of-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ up-line-or-history = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ down-line-or-history = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ up-line-or-history = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ down-line-or-history = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ forward-char = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-char = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ reverse-menu-complete = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ insert-last-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ accept-and-hold = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ capitalize-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ kill-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ forward-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ get-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ run-help = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ '"ls^J"' = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ copy-prev-shell-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-search-forward = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ history-search-backward = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ push-line = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ spell-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ transpose-words = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ up-case-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ kill-region = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ execute-named-cmd = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ yank-pop = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ execute-last-named-cmd = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ vi-goto-column = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ _bash_complete-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:97> print -r 'bindkey '\''^[~'\'' _bash_complete-word'
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-kill-word = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ undo = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ '"' = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ self-insert = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ backward-delete-char = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:96> [[ self-insert = (_bash_complete-word|_bash_list-choices|_complete_debug|_complete_help|_complete_tag|_correct_filename|_correct_word|_expand_alias|_expand_word|_history-complete-newer|_history-complete-older|_list_expansions|_most_recent_file|_next_tags|_read_comp) ]]
+compdump:95> read -rA _d_line
+compdump:101> print
+compdump:107> _d_als=+compdump:107> typeset +fm '_*'
+compdump:107> _d_als=( _bootctl _busctl _coredumpctl _curl _hostnamectl _journalctl _kernel-install _localectl _loginctl _machinectl _networkctl _pulseaudio _sd_hosts_or_user_at_host _sd_machines _sd_outputmodes _sd_unit_files _systemctl _systemd _systemd-analyze _systemd-delta _systemd-inhibit _systemd-nspawn _systemd-resolve _systemd-run _systemd-tmpfiles _the_silver_searcher _timedatectl _udevadm _a2ps _a2utils _aap _absolute_command_paths _acpi _acpitool _acroread _adb _add-zle-hook-widget _add-zsh-hook _alias _aliases _all_labels _all_matches _alternative _analyseplugin _ant _antiword _apachectl _apm _approximate _apt _apt-file _aptitude _apt-move _apt-show-versions _arch_archives _arch_namespace _arg_compile _arguments _arp _arping _arrays _assign _at _attr _augeas _auto-apt _autocd _awk _axi-cache _basename _bash_completions _baudrates _baz _beadm _beep _be_name _bibtex _bind_addresses _bindkey _bison _bittorrent _bogofilter _bpython _brace_parameter _brctl _bsdconfig _bsdinstall _bsd_pkg _btrfs _bts _bug _builtin _bzip2 _bzr _cabal _cache_invalid _cal _calendar _call_function _call_program _canonical_paths _cat _ccal _cd _cdbs-edit-patch _cdcd _cdr _cdrdao _cdrecord _chflags _chkconfig _chmod _chown _chrt _chsh _clay _cmdambivalent _cmdstring _cmp _combination _comm _command _command_names _compadd _compdef _complete _complete_debug _complete_help _complete_help_generic _completers _complete_tag _comp_locale _compress _condition _configure _coreadm _correct _correct_filename _correct_word _cowsay _cp _cpio _cplay _cpupower _cryptsetup _cscope _cssh _csup _ctags_tags _cu _curl _cut _cvs _cvsup _cygcheck _cygpath _cygrunsrv _cygserver _cygstart _dak _darcs _date _date_formats _dates _dbus _dchroot _dchroot-dsa _dcop _dcut _dd _deb_architectures _debbugs_bugnumber _debchange _debcheckout _deb_codenames _debdiff _debfoster _deb_packages _debsign _default _defaults _delimiters _describe _description _devtodo _df _dhclient _dhcpinfo _dict _dict_words _diff _diff_options _diffstat _dig _directories _directory_stack _dir_list _dirs _disable _dispatch _django _dladm _dlocate _dmesg _dmidecode _dnf _doas _domains _dpatch-edit-patch _dpkg _dpkg-buildpackage _dpkg-cross _dpkg-repack _dpkg_source _dput _dsh _dtrace _du _dumpadm _dumper _dupload _dvi _dynamic_directory_name _ecasound _echotc _echoti _elfdump _elinks _elm _email_addresses _emulate _enable _enscript _entr _env _equal _espeak _etags _ethtool _evince _expand _expand_alias _expand_word _extensions _external_pwds _fakeroot _fc _feh _fetch _fetchmail _ffmpeg _figlet _file_descriptors _files _file_systems _find _find_net_interfaces _finger _fink _first _flasher _flex _floppy _flowadm _fmadm _fmt _fortune _freebsd-update _fsh _fstat _functions _fuse_arguments _fuser _fusermount _fuse_values _fw_update _gcc _gcore _gdb _generic _genisoimage _getclip _getconf _getent _getfacl _getmail _git _git-buildpackage _global _global_tags _globflags _globqual_delims _globquals _gnome-gv _gnu_generic _gnupod _gnutls _go _gpasswd _gpg _gphoto2 _gprof _gqview _gradle _graphicsmagick _grep _grep-excuses _groff _groups _growisofs _gs _gsettings _gstat _guard _guilt _gv _gzip _hash _have_glob_qual _hdiutil _head _hg _history _history_complete_word _history_modifiers _hosts _htop _hwinfo _iconv _iconvconfig _id _ifconfig _iftop _ignored _imagemagick _inetadm _initctl _init_d _in_vared _invoke-rc.d _ionice _iostat _ip _ipadm _ipset _iptables _irssi _ispell _iwconfig _jails _java _java_class _jexec _jls _jobs _jobs_bg _jobs_builtin _jobs_fg _joe _join _jot _kfmclient _kill _killall _kld _knock _kpartx _kvno _last _ldd _ld_debug _less _lha _libvirt _lighttpd _limit _limits _links _lintian _list _list_files _lldb _ln _loadkeys _locale _localedef _locales _locate _logical_volumes _look _losetup _lp _ls _lsblk _lscfg _lsdev _lslv _lsof _lspv _lsusb _lsvg _ltrace _lynx _lzop _mac_applications _mac_files_for_application _madison _mail _mailboxes _main_complete _make _make-kpkg _man _match _math _math_params _matlab _md5sum _mdadm _members _mencal _menu _mere _mergechanges _message _metaflac _mh _mii-tool _mime_types _mixerctl _mkdir _mkshortcut _mkzsh _module _module-assistant _module_math_func _modutils _mondo _monotone _moosic _mosh _most_recent_file _mount _mozilla _mpc _mplayer _mt _mtools _mtr _multi_parts _mutt _my_accounts _mysqldiff _mysql_utils _nautilus _ncftp _nedit _netcat _net_interfaces _netscape _netstat _newsgroups _next_label _next_tags _nice _nkf _nl _nm _nmap _nmcli _normal _nothing _notmuch _npm _nslookup _objdump _object_classes _object_files _od _okular _oldlist _open _openstack _options _options_set _options_unset _osc _other_accounts _pack _parameter _parameters _paste _patch _patchutils _path_commands _path_files _pax _pbm _pbuilder _pdf _pdftk _perforce _perl _perl_basepods _perldoc _perl_modules _pfctl _pfexec _pgrep _php _physical_volumes _pick_variant _picocom _pidof _pids _pine _ping _piuparts _pkg5 _pkgadd _pkg-config _pkginfo _pkg_instance _pkgrm _pkgtool _pon _portaudit _portlint _portmaster _ports _portsnap _postfix _postscript _powerd _prcs _precommand _prefix _print _printenv _printers _procstat _prompt _prove _prstat _ps _ps1234 _pscp _pspdf _psutils _ptree _pump _putclip _pydoc _python _python_modules _qdbus _qemu _qiv _qtplay _quilt _raggle _rake _ranlib _rar _rcctl _rcs _rdesktop _read _read_comp _readelf _readshortcut _rebootin _redirect _regex_arguments _regex_words _remote_files _renice _reprepro _requested _retrieve_cache _retrieve_mac_apps _ri _rlogin _rm _rpm _rpmbuild _rrdtool _rsync _rubber _ruby _run-help _runit _sablotron _samba _savecore _sccs _sched _schedtool _schroot _scl _screen _script _sed _sep_parts _sequence _service _services _set _set_command _setfacl _setopt _setup _setxkbmap _sh _showmount _signals _sisu _slrn _smit _snoop _socket _sockstat _softwareupdate _sort _source _spamassassin _sqlite _sqsh _ss _ssh _sshfs _stat _stgit _store_cache _strace _strftime _strip _stty _su _sub_commands _subscript _subversion _sudo _suffix_alias_files _surfraw _SUSEconfig _svcadm _svccfg _svcprop _svcs _svcs_fmri _svn-buildpackage _swaks _swift _sys_calls _sysctl _sysrc _sysstat _systat _system_profiler _tags _tail _tar _tar_archive _tardy _tcpdump _tcpsys _tcptraceroute _telnet _terminals _tex _texi _texinfo _tidy _tiff _tilde _tilde_files _time_zone _tin _tla _tmux _todo.sh _toilet _toolchain-source _top _topgit _totd _touch _tpb _tpconfig _tput _tr _tracepath _trap _tree _truss _ttyctl _ttys _tune2fs _twidge _twisted _typeset _ulimit _uml _umountable _unace _uname _unexpand _unhash _uniq _unison _units _update-alternatives _update-rc.d _urls _urpmi _urxvt _uscan _user_admin _user_at_host _user_expand _user_math_func _users _users_on _uzbl _valgrind _value _values _vared _vars _vcsh _vim _vim-addons _vmstat _vnc _volume_groups _vorbis _vorbiscomment _vserver _vux _w3m _wait _wajig _wakeup_capable_devices _wanna-build _wanted _watch _watch-snoop _wc _webbrowser _wget _whereis _which _whois _widgets _wiggle _wpa_cli _xargs _x_arguments _xauth _xautolock _x_borderwidth _xclip _x_color _x_colormapid _x_cursor _x_display _xdvi _x_extension _xfig _x_font _xft_fonts _x_geometry _x_keysym _xloadimage _x_locale _xmlsoft _xmms2 _x_modifier _xmodmap _x_name _xournal _xpdf _xrandr _x_resource _xscreensaver _x_selection_timeout _xset _xt_arguments _xterm _x_title _xt_session_id _x_utils _xv _x_visual _x_window _xwit _xxd _xz _yafc _yast _yodl _yp _yum _zargs _zattr _zcalc _zcalc_line _zcat _zcompile _zdump _zed _zfs _zfs_dataset _zfs_keysource_props _zfs_pool _zftp _zip _zle _zlogin _zmodload _zmv _zoneadm _zones _zpool _zpty _zsh _zsh-mime-handler _zsocket _zstyle _ztodo _zypper ) 
+compdump:111> integer _i=5
+compdump:112> print -n autoload -Uz
+compdump:113> ((  832  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bootctl'
+compdump:116> ((  ! --_i && 832 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  831  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _busctl'
+compdump:116> ((  ! --_i && 831 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  830  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _coredumpctl'
+compdump:116> ((  ! --_i && 830 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  829  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _curl'
+compdump:116> ((  ! --_i && 829 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  828  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _hostnamectl'
+compdump:116> ((  ! --_i && 828 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  827  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _journalctl'
+compdump:116> ((  ! --_i && 827 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  826  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _kernel-install'
+compdump:116> ((  ! --_i && 826 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  825  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _localectl'
+compdump:116> ((  ! --_i && 825 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  824  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _loginctl'
+compdump:116> ((  ! --_i && 824 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  823  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _machinectl'
+compdump:116> ((  ! --_i && 823 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  822  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _networkctl'
+compdump:116> ((  ! --_i && 822 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  821  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pulseaudio'
+compdump:116> ((  ! --_i && 821 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  820  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sd_hosts_or_user_at_host'
+compdump:116> ((  ! --_i && 820 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  819  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sd_machines'
+compdump:116> ((  ! --_i && 819 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  818  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sd_outputmodes'
+compdump:116> ((  ! --_i && 818 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  817  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sd_unit_files'
+compdump:116> ((  ! --_i && 817 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  816  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _systemctl'
+compdump:116> ((  ! --_i && 816 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  815  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _systemd'
+compdump:116> ((  ! --_i && 815 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  814  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _systemd-analyze'
+compdump:116> ((  ! --_i && 814 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  813  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _systemd-delta'
+compdump:116> ((  ! --_i && 813 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  812  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _systemd-inhibit'
+compdump:116> ((  ! --_i && 812 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  811  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _systemd-nspawn'
+compdump:116> ((  ! --_i && 811 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  810  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _systemd-resolve'
+compdump:116> ((  ! --_i && 810 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  809  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _systemd-run'
+compdump:116> ((  ! --_i && 809 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  808  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _systemd-tmpfiles'
+compdump:116> ((  ! --_i && 808 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  807  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _the_silver_searcher'
+compdump:116> ((  ! --_i && 807 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  806  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _timedatectl'
+compdump:116> ((  ! --_i && 806 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  805  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _udevadm'
+compdump:116> ((  ! --_i && 805 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  804  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _a2ps'
+compdump:116> ((  ! --_i && 804 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  803  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _a2utils'
+compdump:116> ((  ! --_i && 803 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  802  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _aap'
+compdump:116> ((  ! --_i && 802 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  801  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _absolute_command_paths'
+compdump:116> ((  ! --_i && 801 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  800  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _acpi'
+compdump:116> ((  ! --_i && 800 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  799  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _acpitool'
+compdump:116> ((  ! --_i && 799 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  798  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _acroread'
+compdump:116> ((  ! --_i && 798 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  797  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _adb'
+compdump:116> ((  ! --_i && 797 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  796  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _add-zle-hook-widget'
+compdump:116> ((  ! --_i && 796 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  795  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _add-zsh-hook'
+compdump:116> ((  ! --_i && 795 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  794  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _alias'
+compdump:116> ((  ! --_i && 794 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  793  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _aliases'
+compdump:116> ((  ! --_i && 793 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  792  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _all_labels'
+compdump:116> ((  ! --_i && 792 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  791  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _all_matches'
+compdump:116> ((  ! --_i && 791 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  790  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _alternative'
+compdump:116> ((  ! --_i && 790 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  789  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _analyseplugin'
+compdump:116> ((  ! --_i && 789 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  788  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ant'
+compdump:116> ((  ! --_i && 788 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  787  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _antiword'
+compdump:116> ((  ! --_i && 787 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  786  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _apachectl'
+compdump:116> ((  ! --_i && 786 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  785  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _apm'
+compdump:116> ((  ! --_i && 785 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  784  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _approximate'
+compdump:116> ((  ! --_i && 784 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  783  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _apt'
+compdump:116> ((  ! --_i && 783 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  782  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _apt-file'
+compdump:116> ((  ! --_i && 782 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  781  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _aptitude'
+compdump:116> ((  ! --_i && 781 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  780  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _apt-move'
+compdump:116> ((  ! --_i && 780 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  779  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _apt-show-versions'
+compdump:116> ((  ! --_i && 779 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  778  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _arch_archives'
+compdump:116> ((  ! --_i && 778 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  777  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _arch_namespace'
+compdump:116> ((  ! --_i && 777 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  776  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _arg_compile'
+compdump:116> ((  ! --_i && 776 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  775  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _arguments'
+compdump:116> ((  ! --_i && 775 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  774  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _arp'
+compdump:116> ((  ! --_i && 774 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  773  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _arping'
+compdump:116> ((  ! --_i && 773 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  772  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _arrays'
+compdump:116> ((  ! --_i && 772 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  771  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _assign'
+compdump:116> ((  ! --_i && 771 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  770  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _at'
+compdump:116> ((  ! --_i && 770 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  769  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _attr'
+compdump:116> ((  ! --_i && 769 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  768  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _augeas'
+compdump:116> ((  ! --_i && 768 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  767  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _auto-apt'
+compdump:116> ((  ! --_i && 767 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  766  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _autocd'
+compdump:116> ((  ! --_i && 766 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  765  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _awk'
+compdump:116> ((  ! --_i && 765 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  764  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _axi-cache'
+compdump:116> ((  ! --_i && 764 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  763  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _basename'
+compdump:116> ((  ! --_i && 763 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  762  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bash_completions'
+compdump:116> ((  ! --_i && 762 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  761  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _baudrates'
+compdump:116> ((  ! --_i && 761 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  760  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _baz'
+compdump:116> ((  ! --_i && 760 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  759  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _beadm'
+compdump:116> ((  ! --_i && 759 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  758  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _beep'
+compdump:116> ((  ! --_i && 758 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  757  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _be_name'
+compdump:116> ((  ! --_i && 757 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  756  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bibtex'
+compdump:116> ((  ! --_i && 756 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  755  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bind_addresses'
+compdump:116> ((  ! --_i && 755 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  754  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bindkey'
+compdump:116> ((  ! --_i && 754 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  753  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bison'
+compdump:116> ((  ! --_i && 753 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  752  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bittorrent'
+compdump:116> ((  ! --_i && 752 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  751  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bogofilter'
+compdump:116> ((  ! --_i && 751 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  750  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bpython'
+compdump:116> ((  ! --_i && 750 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  749  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _brace_parameter'
+compdump:116> ((  ! --_i && 749 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  748  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _brctl'
+compdump:116> ((  ! --_i && 748 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  747  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bsdconfig'
+compdump:116> ((  ! --_i && 747 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  746  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bsdinstall'
+compdump:116> ((  ! --_i && 746 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  745  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bsd_pkg'
+compdump:116> ((  ! --_i && 745 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  744  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _btrfs'
+compdump:116> ((  ! --_i && 744 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  743  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bts'
+compdump:116> ((  ! --_i && 743 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  742  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bug'
+compdump:116> ((  ! --_i && 742 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  741  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _builtin'
+compdump:116> ((  ! --_i && 741 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  740  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bzip2'
+compdump:116> ((  ! --_i && 740 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  739  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _bzr'
+compdump:116> ((  ! --_i && 739 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  738  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cabal'
+compdump:116> ((  ! --_i && 738 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  737  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cache_invalid'
+compdump:116> ((  ! --_i && 737 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  736  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cal'
+compdump:116> ((  ! --_i && 736 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  735  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _calendar'
+compdump:116> ((  ! --_i && 735 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  734  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _call_function'
+compdump:116> ((  ! --_i && 734 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  733  ))
+compdump:114> ((  ! 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  732  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _canonical_paths'
+compdump:116> ((  ! --_i && 732 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  731  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cat'
+compdump:116> ((  ! --_i && 731 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  730  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ccal'
+compdump:116> ((  ! --_i && 730 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  729  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cd'
+compdump:116> ((  ! --_i && 729 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  728  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cdbs-edit-patch'
+compdump:116> ((  ! --_i && 728 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  727  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cdcd'
+compdump:116> ((  ! --_i && 727 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  726  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cdr'
+compdump:116> ((  ! --_i && 726 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  725  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cdrdao'
+compdump:116> ((  ! --_i && 725 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  724  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cdrecord'
+compdump:116> ((  ! --_i && 724 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  723  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _chflags'
+compdump:116> ((  ! --_i && 723 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  722  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _chkconfig'
+compdump:116> ((  ! --_i && 722 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  721  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _chmod'
+compdump:116> ((  ! --_i && 721 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  720  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _chown'
+compdump:116> ((  ! --_i && 720 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  719  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _chrt'
+compdump:116> ((  ! --_i && 719 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  718  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _chsh'
+compdump:116> ((  ! --_i && 718 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  717  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _clay'
+compdump:116> ((  ! --_i && 717 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  716  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cmdambivalent'
+compdump:116> ((  ! --_i && 716 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  715  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cmdstring'
+compdump:116> ((  ! --_i && 715 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  714  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cmp'
+compdump:116> ((  ! --_i && 714 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  713  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _combination'
+compdump:116> ((  ! --_i && 713 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  712  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _comm'
+compdump:116> ((  ! --_i && 712 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  711  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _command'
+compdump:116> ((  ! --_i && 711 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  710  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _command_names'
+compdump:116> ((  ! --_i && 710 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  709  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _compadd'
+compdump:116> ((  ! --_i && 709 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  708  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _compdef'
+compdump:116> ((  ! --_i && 708 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  707  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _complete'
+compdump:116> ((  ! --_i && 707 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  706  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _complete_debug'
+compdump:116> ((  ! --_i && 706 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  705  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _complete_help'
+compdump:116> ((  ! --_i && 705 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  704  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _complete_help_generic'
+compdump:116> ((  ! --_i && 704 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  703  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _completers'
+compdump:116> ((  ! --_i && 703 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  702  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _complete_tag'
+compdump:116> ((  ! --_i && 702 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  701  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _comp_locale'
+compdump:116> ((  ! --_i && 701 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  700  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _compress'
+compdump:116> ((  ! --_i && 700 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  699  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _condition'
+compdump:116> ((  ! --_i && 699 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  698  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _configure'
+compdump:116> ((  ! --_i && 698 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  697  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _coreadm'
+compdump:116> ((  ! --_i && 697 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  696  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _correct'
+compdump:116> ((  ! --_i && 696 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  695  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _correct_filename'
+compdump:116> ((  ! --_i && 695 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  694  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _correct_word'
+compdump:116> ((  ! --_i && 694 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  693  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cowsay'
+compdump:116> ((  ! --_i && 693 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  692  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cp'
+compdump:116> ((  ! --_i && 692 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  691  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cpio'
+compdump:116> ((  ! --_i && 691 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  690  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cplay'
+compdump:116> ((  ! --_i && 690 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  689  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cpupower'
+compdump:116> ((  ! --_i && 689 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  688  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cryptsetup'
+compdump:116> ((  ! --_i && 688 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  687  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cscope'
+compdump:116> ((  ! --_i && 687 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  686  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cssh'
+compdump:116> ((  ! --_i && 686 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  685  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _csup'
+compdump:116> ((  ! --_i && 685 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  684  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ctags_tags'
+compdump:116> ((  ! --_i && 684 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  683  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cu'
+compdump:116> ((  ! --_i && 683 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  682  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _curl'
+compdump:116> ((  ! --_i && 682 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  681  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cut'
+compdump:116> ((  ! --_i && 681 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  680  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cvs'
+compdump:116> ((  ! --_i && 680 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  679  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cvsup'
+compdump:116> ((  ! --_i && 679 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  678  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cygcheck'
+compdump:116> ((  ! --_i && 678 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  677  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cygpath'
+compdump:116> ((  ! --_i && 677 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  676  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cygrunsrv'
+compdump:116> ((  ! --_i && 676 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  675  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cygserver'
+compdump:116> ((  ! --_i && 675 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  674  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _cygstart'
+compdump:116> ((  ! --_i && 674 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  673  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dak'
+compdump:116> ((  ! --_i && 673 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  672  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _darcs'
+compdump:116> ((  ! --_i && 672 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  671  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _date'
+compdump:116> ((  ! --_i && 671 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  670  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _date_formats'
+compdump:116> ((  ! --_i && 670 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  669  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dates'
+compdump:116> ((  ! --_i && 669 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  668  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dbus'
+compdump:116> ((  ! --_i && 668 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  667  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dchroot'
+compdump:116> ((  ! --_i && 667 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  666  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dchroot-dsa'
+compdump:116> ((  ! --_i && 666 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  665  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dcop'
+compdump:116> ((  ! --_i && 665 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  664  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dcut'
+compdump:116> ((  ! --_i && 664 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  663  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dd'
+compdump:116> ((  ! --_i && 663 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  662  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _deb_architectures'
+compdump:116> ((  ! --_i && 662 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  661  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _debbugs_bugnumber'
+compdump:116> ((  ! --_i && 661 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  660  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _debchange'
+compdump:116> ((  ! --_i && 660 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  659  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _debcheckout'
+compdump:116> ((  ! --_i && 659 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  658  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _deb_codenames'
+compdump:116> ((  ! --_i && 658 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  657  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _debdiff'
+compdump:116> ((  ! --_i && 657 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  656  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _debfoster'
+compdump:116> ((  ! --_i && 656 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  655  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _deb_packages'
+compdump:116> ((  ! --_i && 655 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  654  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _debsign'
+compdump:116> ((  ! --_i && 654 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  653  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _default'
+compdump:116> ((  ! --_i && 653 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  652  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _defaults'
+compdump:116> ((  ! --_i && 652 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  651  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _delimiters'
+compdump:116> ((  ! --_i && 651 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  650  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _describe'
+compdump:116> ((  ! --_i && 650 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  649  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _description'
+compdump:116> ((  ! --_i && 649 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  648  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _devtodo'
+compdump:116> ((  ! --_i && 648 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  647  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _df'
+compdump:116> ((  ! --_i && 647 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  646  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dhclient'
+compdump:116> ((  ! --_i && 646 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  645  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dhcpinfo'
+compdump:116> ((  ! --_i && 645 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  644  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dict'
+compdump:116> ((  ! --_i && 644 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  643  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dict_words'
+compdump:116> ((  ! --_i && 643 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  642  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _diff'
+compdump:116> ((  ! --_i && 642 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  641  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _diff_options'
+compdump:116> ((  ! --_i && 641 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  640  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _diffstat'
+compdump:116> ((  ! --_i && 640 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  639  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dig'
+compdump:116> ((  ! --_i && 639 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  638  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _directories'
+compdump:116> ((  ! --_i && 638 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  637  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _directory_stack'
+compdump:116> ((  ! --_i && 637 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  636  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dir_list'
+compdump:116> ((  ! --_i && 636 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  635  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dirs'
+compdump:116> ((  ! --_i && 635 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  634  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _disable'
+compdump:116> ((  ! --_i && 634 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  633  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dispatch'
+compdump:116> ((  ! --_i && 633 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  632  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _django'
+compdump:116> ((  ! --_i && 632 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  631  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dladm'
+compdump:116> ((  ! --_i && 631 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  630  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dlocate'
+compdump:116> ((  ! --_i && 630 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  629  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dmesg'
+compdump:116> ((  ! --_i && 629 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  628  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dmidecode'
+compdump:116> ((  ! --_i && 628 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  627  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dnf'
+compdump:116> ((  ! --_i && 627 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  626  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _doas'
+compdump:116> ((  ! --_i && 626 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  625  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _domains'
+compdump:116> ((  ! --_i && 625 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  624  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dpatch-edit-patch'
+compdump:116> ((  ! --_i && 624 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  623  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dpkg'
+compdump:116> ((  ! --_i && 623 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  622  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dpkg-buildpackage'
+compdump:116> ((  ! --_i && 622 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  621  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dpkg-cross'
+compdump:116> ((  ! --_i && 621 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  620  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dpkg-repack'
+compdump:116> ((  ! --_i && 620 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  619  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dpkg_source'
+compdump:116> ((  ! --_i && 619 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  618  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dput'
+compdump:116> ((  ! --_i && 618 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  617  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dsh'
+compdump:116> ((  ! --_i && 617 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  616  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dtrace'
+compdump:116> ((  ! --_i && 616 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  615  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _du'
+compdump:116> ((  ! --_i && 615 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  614  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dumpadm'
+compdump:116> ((  ! --_i && 614 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  613  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dumper'
+compdump:116> ((  ! --_i && 613 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  612  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dupload'
+compdump:116> ((  ! --_i && 612 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  611  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dvi'
+compdump:116> ((  ! --_i && 611 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  610  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _dynamic_directory_name'
+compdump:116> ((  ! --_i && 610 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  609  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ecasound'
+compdump:116> ((  ! --_i && 609 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  608  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _echotc'
+compdump:116> ((  ! --_i && 608 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  607  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _echoti'
+compdump:116> ((  ! --_i && 607 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  606  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _elfdump'
+compdump:116> ((  ! --_i && 606 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  605  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _elinks'
+compdump:116> ((  ! --_i && 605 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  604  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _elm'
+compdump:116> ((  ! --_i && 604 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  603  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _email_addresses'
+compdump:116> ((  ! --_i && 603 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  602  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _emulate'
+compdump:116> ((  ! --_i && 602 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  601  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _enable'
+compdump:116> ((  ! --_i && 601 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  600  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _enscript'
+compdump:116> ((  ! --_i && 600 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  599  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _entr'
+compdump:116> ((  ! --_i && 599 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  598  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _env'
+compdump:116> ((  ! --_i && 598 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  597  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _equal'
+compdump:116> ((  ! --_i && 597 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  596  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _espeak'
+compdump:116> ((  ! --_i && 596 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  595  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _etags'
+compdump:116> ((  ! --_i && 595 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  594  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ethtool'
+compdump:116> ((  ! --_i && 594 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  593  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _evince'
+compdump:116> ((  ! --_i && 593 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  592  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _expand'
+compdump:116> ((  ! --_i && 592 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  591  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _expand_alias'
+compdump:116> ((  ! --_i && 591 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  590  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _expand_word'
+compdump:116> ((  ! --_i && 590 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  589  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _extensions'
+compdump:116> ((  ! --_i && 589 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  588  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _external_pwds'
+compdump:116> ((  ! --_i && 588 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  587  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fakeroot'
+compdump:116> ((  ! --_i && 587 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  586  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fc'
+compdump:116> ((  ! --_i && 586 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  585  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _feh'
+compdump:116> ((  ! --_i && 585 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  584  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fetch'
+compdump:116> ((  ! --_i && 584 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  583  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fetchmail'
+compdump:116> ((  ! --_i && 583 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  582  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ffmpeg'
+compdump:116> ((  ! --_i && 582 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  581  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _figlet'
+compdump:116> ((  ! --_i && 581 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  580  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _file_descriptors'
+compdump:116> ((  ! --_i && 580 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  579  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _files'
+compdump:116> ((  ! --_i && 579 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  578  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _file_systems'
+compdump:116> ((  ! --_i && 578 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  577  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _find'
+compdump:116> ((  ! --_i && 577 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  576  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _find_net_interfaces'
+compdump:116> ((  ! --_i && 576 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  575  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _finger'
+compdump:116> ((  ! --_i && 575 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  574  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fink'
+compdump:116> ((  ! --_i && 574 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  573  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _first'
+compdump:116> ((  ! --_i && 573 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  572  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _flasher'
+compdump:116> ((  ! --_i && 572 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  571  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _flex'
+compdump:116> ((  ! --_i && 571 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  570  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _floppy'
+compdump:116> ((  ! --_i && 570 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  569  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _flowadm'
+compdump:116> ((  ! --_i && 569 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  568  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fmadm'
+compdump:116> ((  ! --_i && 568 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  567  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fmt'
+compdump:116> ((  ! --_i && 567 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  566  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fortune'
+compdump:116> ((  ! --_i && 566 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  565  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _freebsd-update'
+compdump:116> ((  ! --_i && 565 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  564  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fsh'
+compdump:116> ((  ! --_i && 564 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  563  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fstat'
+compdump:116> ((  ! --_i && 563 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  562  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _functions'
+compdump:116> ((  ! --_i && 562 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  561  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fuse_arguments'
+compdump:116> ((  ! --_i && 561 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  560  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fuser'
+compdump:116> ((  ! --_i && 560 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  559  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fusermount'
+compdump:116> ((  ! --_i && 559 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  558  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fuse_values'
+compdump:116> ((  ! --_i && 558 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  557  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _fw_update'
+compdump:116> ((  ! --_i && 557 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  556  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gcc'
+compdump:116> ((  ! --_i && 556 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  555  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gcore'
+compdump:116> ((  ! --_i && 555 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  554  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gdb'
+compdump:116> ((  ! --_i && 554 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  553  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _generic'
+compdump:116> ((  ! --_i && 553 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  552  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _genisoimage'
+compdump:116> ((  ! --_i && 552 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  551  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _getclip'
+compdump:116> ((  ! --_i && 551 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  550  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _getconf'
+compdump:116> ((  ! --_i && 550 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  549  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _getent'
+compdump:116> ((  ! --_i && 549 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  548  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _getfacl'
+compdump:116> ((  ! --_i && 548 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  547  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _getmail'
+compdump:116> ((  ! --_i && 547 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  546  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _git'
+compdump:116> ((  ! --_i && 546 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  545  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _git-buildpackage'
+compdump:116> ((  ! --_i && 545 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  544  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _global'
+compdump:116> ((  ! --_i && 544 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  543  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _global_tags'
+compdump:116> ((  ! --_i && 543 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  542  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _globflags'
+compdump:116> ((  ! --_i && 542 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  541  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _globqual_delims'
+compdump:116> ((  ! --_i && 541 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  540  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _globquals'
+compdump:116> ((  ! --_i && 540 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  539  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gnome-gv'
+compdump:116> ((  ! --_i && 539 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  538  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gnu_generic'
+compdump:116> ((  ! --_i && 538 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  537  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gnupod'
+compdump:116> ((  ! --_i && 537 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  536  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gnutls'
+compdump:116> ((  ! --_i && 536 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  535  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _go'
+compdump:116> ((  ! --_i && 535 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  534  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gpasswd'
+compdump:116> ((  ! --_i && 534 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  533  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gpg'
+compdump:116> ((  ! --_i && 533 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  532  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gphoto2'
+compdump:116> ((  ! --_i && 532 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  531  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gprof'
+compdump:116> ((  ! --_i && 531 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  530  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gqview'
+compdump:116> ((  ! --_i && 530 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  529  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gradle'
+compdump:116> ((  ! --_i && 529 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  528  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _graphicsmagick'
+compdump:116> ((  ! --_i && 528 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  527  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _grep'
+compdump:116> ((  ! --_i && 527 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  526  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _grep-excuses'
+compdump:116> ((  ! --_i && 526 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  525  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _groff'
+compdump:116> ((  ! --_i && 525 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  524  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _groups'
+compdump:116> ((  ! --_i && 524 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  523  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _growisofs'
+compdump:116> ((  ! --_i && 523 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  522  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gs'
+compdump:116> ((  ! --_i && 522 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  521  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gsettings'
+compdump:116> ((  ! --_i && 521 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  520  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gstat'
+compdump:116> ((  ! --_i && 520 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  519  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _guard'
+compdump:116> ((  ! --_i && 519 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  518  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _guilt'
+compdump:116> ((  ! --_i && 518 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  517  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gv'
+compdump:116> ((  ! --_i && 517 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  516  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _gzip'
+compdump:116> ((  ! --_i && 516 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  515  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _hash'
+compdump:116> ((  ! --_i && 515 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  514  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _have_glob_qual'
+compdump:116> ((  ! --_i && 514 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  513  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _hdiutil'
+compdump:116> ((  ! --_i && 513 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  512  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _head'
+compdump:116> ((  ! --_i && 512 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  511  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _hg'
+compdump:116> ((  ! --_i && 511 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  510  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _history'
+compdump:116> ((  ! --_i && 510 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  509  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _history_complete_word'
+compdump:116> ((  ! --_i && 509 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  508  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _history_modifiers'
+compdump:116> ((  ! --_i && 508 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  507  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _hosts'
+compdump:116> ((  ! --_i && 507 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  506  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _htop'
+compdump:116> ((  ! --_i && 506 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  505  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _hwinfo'
+compdump:116> ((  ! --_i && 505 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  504  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _iconv'
+compdump:116> ((  ! --_i && 504 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  503  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _iconvconfig'
+compdump:116> ((  ! --_i && 503 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  502  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _id'
+compdump:116> ((  ! --_i && 502 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  501  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ifconfig'
+compdump:116> ((  ! --_i && 501 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  500  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _iftop'
+compdump:116> ((  ! --_i && 500 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  499  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ignored'
+compdump:116> ((  ! --_i && 499 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  498  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _imagemagick'
+compdump:116> ((  ! --_i && 498 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  497  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _inetadm'
+compdump:116> ((  ! --_i && 497 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  496  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _initctl'
+compdump:116> ((  ! --_i && 496 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  495  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _init_d'
+compdump:116> ((  ! --_i && 495 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  494  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _in_vared'
+compdump:116> ((  ! --_i && 494 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  493  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _invoke-rc.d'
+compdump:116> ((  ! --_i && 493 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  492  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ionice'
+compdump:116> ((  ! --_i && 492 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  491  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _iostat'
+compdump:116> ((  ! --_i && 491 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  490  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ip'
+compdump:116> ((  ! --_i && 490 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  489  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ipadm'
+compdump:116> ((  ! --_i && 489 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  488  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ipset'
+compdump:116> ((  ! --_i && 488 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  487  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _iptables'
+compdump:116> ((  ! --_i && 487 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  486  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _irssi'
+compdump:116> ((  ! --_i && 486 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  485  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ispell'
+compdump:116> ((  ! --_i && 485 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  484  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _iwconfig'
+compdump:116> ((  ! --_i && 484 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  483  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _jails'
+compdump:116> ((  ! --_i && 483 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  482  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _java'
+compdump:116> ((  ! --_i && 482 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  481  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _java_class'
+compdump:116> ((  ! --_i && 481 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  480  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _jexec'
+compdump:116> ((  ! --_i && 480 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  479  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _jls'
+compdump:116> ((  ! --_i && 479 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  478  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _jobs'
+compdump:116> ((  ! --_i && 478 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  477  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _jobs_bg'
+compdump:116> ((  ! --_i && 477 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  476  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _jobs_builtin'
+compdump:116> ((  ! --_i && 476 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  475  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _jobs_fg'
+compdump:116> ((  ! --_i && 475 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  474  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _joe'
+compdump:116> ((  ! --_i && 474 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  473  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _join'
+compdump:116> ((  ! --_i && 473 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  472  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _jot'
+compdump:116> ((  ! --_i && 472 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  471  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _kfmclient'
+compdump:116> ((  ! --_i && 471 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  470  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _kill'
+compdump:116> ((  ! --_i && 470 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  469  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _killall'
+compdump:116> ((  ! --_i && 469 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  468  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _kld'
+compdump:116> ((  ! --_i && 468 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  467  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _knock'
+compdump:116> ((  ! --_i && 467 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  466  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _kpartx'
+compdump:116> ((  ! --_i && 466 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  465  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _kvno'
+compdump:116> ((  ! --_i && 465 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  464  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _last'
+compdump:116> ((  ! --_i && 464 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  463  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ldd'
+compdump:116> ((  ! --_i && 463 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  462  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ld_debug'
+compdump:116> ((  ! --_i && 462 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  461  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _less'
+compdump:116> ((  ! --_i && 461 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  460  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lha'
+compdump:116> ((  ! --_i && 460 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  459  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _libvirt'
+compdump:116> ((  ! --_i && 459 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  458  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lighttpd'
+compdump:116> ((  ! --_i && 458 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  457  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _limit'
+compdump:116> ((  ! --_i && 457 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  456  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _limits'
+compdump:116> ((  ! --_i && 456 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  455  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _links'
+compdump:116> ((  ! --_i && 455 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  454  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lintian'
+compdump:116> ((  ! --_i && 454 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  453  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _list'
+compdump:116> ((  ! --_i && 453 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  452  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _list_files'
+compdump:116> ((  ! --_i && 452 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  451  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lldb'
+compdump:116> ((  ! --_i && 451 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  450  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ln'
+compdump:116> ((  ! --_i && 450 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  449  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _loadkeys'
+compdump:116> ((  ! --_i && 449 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  448  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _locale'
+compdump:116> ((  ! --_i && 448 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  447  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _localedef'
+compdump:116> ((  ! --_i && 447 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  446  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _locales'
+compdump:116> ((  ! --_i && 446 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  445  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _locate'
+compdump:116> ((  ! --_i && 445 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  444  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _logical_volumes'
+compdump:116> ((  ! --_i && 444 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  443  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _look'
+compdump:116> ((  ! --_i && 443 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  442  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _losetup'
+compdump:116> ((  ! --_i && 442 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  441  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lp'
+compdump:116> ((  ! --_i && 441 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  440  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ls'
+compdump:116> ((  ! --_i && 440 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  439  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lsblk'
+compdump:116> ((  ! --_i && 439 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  438  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lscfg'
+compdump:116> ((  ! --_i && 438 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  437  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lsdev'
+compdump:116> ((  ! --_i && 437 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  436  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lslv'
+compdump:116> ((  ! --_i && 436 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  435  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lsof'
+compdump:116> ((  ! --_i && 435 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  434  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lspv'
+compdump:116> ((  ! --_i && 434 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  433  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lsusb'
+compdump:116> ((  ! --_i && 433 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  432  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lsvg'
+compdump:116> ((  ! --_i && 432 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  431  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ltrace'
+compdump:116> ((  ! --_i && 431 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  430  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lynx'
+compdump:116> ((  ! --_i && 430 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  429  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _lzop'
+compdump:116> ((  ! --_i && 429 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  428  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mac_applications'
+compdump:116> ((  ! --_i && 428 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  427  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mac_files_for_application'
+compdump:116> ((  ! --_i && 427 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  426  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _madison'
+compdump:116> ((  ! --_i && 426 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  425  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mail'
+compdump:116> ((  ! --_i && 425 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  424  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mailboxes'
+compdump:116> ((  ! --_i && 424 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  423  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _main_complete'
+compdump:116> ((  ! --_i && 423 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  422  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _make'
+compdump:116> ((  ! --_i && 422 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  421  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _make-kpkg'
+compdump:116> ((  ! --_i && 421 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  420  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _man'
+compdump:116> ((  ! --_i && 420 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  419  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _match'
+compdump:116> ((  ! --_i && 419 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  418  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _math'
+compdump:116> ((  ! --_i && 418 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  417  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _math_params'
+compdump:116> ((  ! --_i && 417 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  416  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _matlab'
+compdump:116> ((  ! --_i && 416 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  415  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _md5sum'
+compdump:116> ((  ! --_i && 415 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  414  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mdadm'
+compdump:116> ((  ! --_i && 414 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  413  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _members'
+compdump:116> ((  ! --_i && 413 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  412  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mencal'
+compdump:116> ((  ! --_i && 412 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  411  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _menu'
+compdump:116> ((  ! --_i && 411 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  410  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mere'
+compdump:116> ((  ! --_i && 410 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  409  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mergechanges'
+compdump:116> ((  ! --_i && 409 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  408  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _message'
+compdump:116> ((  ! --_i && 408 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  407  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _metaflac'
+compdump:116> ((  ! --_i && 407 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  406  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mh'
+compdump:116> ((  ! --_i && 406 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  405  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mii-tool'
+compdump:116> ((  ! --_i && 405 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  404  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mime_types'
+compdump:116> ((  ! --_i && 404 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  403  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mixerctl'
+compdump:116> ((  ! --_i && 403 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  402  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mkdir'
+compdump:116> ((  ! --_i && 402 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  401  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mkshortcut'
+compdump:116> ((  ! --_i && 401 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  400  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mkzsh'
+compdump:116> ((  ! --_i && 400 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  399  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _module'
+compdump:116> ((  ! --_i && 399 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  398  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _module-assistant'
+compdump:116> ((  ! --_i && 398 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  397  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _module_math_func'
+compdump:116> ((  ! --_i && 397 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  396  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _modutils'
+compdump:116> ((  ! --_i && 396 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  395  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mondo'
+compdump:116> ((  ! --_i && 395 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  394  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _monotone'
+compdump:116> ((  ! --_i && 394 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  393  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _moosic'
+compdump:116> ((  ! --_i && 393 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  392  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mosh'
+compdump:116> ((  ! --_i && 392 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  391  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _most_recent_file'
+compdump:116> ((  ! --_i && 391 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  390  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mount'
+compdump:116> ((  ! --_i && 390 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  389  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mozilla'
+compdump:116> ((  ! --_i && 389 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  388  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mpc'
+compdump:116> ((  ! --_i && 388 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  387  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mplayer'
+compdump:116> ((  ! --_i && 387 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  386  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mt'
+compdump:116> ((  ! --_i && 386 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  385  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mtools'
+compdump:116> ((  ! --_i && 385 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  384  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mtr'
+compdump:116> ((  ! --_i && 384 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  383  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _multi_parts'
+compdump:116> ((  ! --_i && 383 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  382  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mutt'
+compdump:116> ((  ! --_i && 382 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  381  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _my_accounts'
+compdump:116> ((  ! --_i && 381 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  380  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mysqldiff'
+compdump:116> ((  ! --_i && 380 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  379  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _mysql_utils'
+compdump:116> ((  ! --_i && 379 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  378  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _nautilus'
+compdump:116> ((  ! --_i && 378 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  377  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ncftp'
+compdump:116> ((  ! --_i && 377 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  376  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _nedit'
+compdump:116> ((  ! --_i && 376 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  375  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _netcat'
+compdump:116> ((  ! --_i && 375 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  374  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _net_interfaces'
+compdump:116> ((  ! --_i && 374 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  373  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _netscape'
+compdump:116> ((  ! --_i && 373 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  372  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _netstat'
+compdump:116> ((  ! --_i && 372 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  371  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _newsgroups'
+compdump:116> ((  ! --_i && 371 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  370  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _next_label'
+compdump:116> ((  ! --_i && 370 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  369  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _next_tags'
+compdump:116> ((  ! --_i && 369 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  368  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _nice'
+compdump:116> ((  ! --_i && 368 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  367  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _nkf'
+compdump:116> ((  ! --_i && 367 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  366  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _nl'
+compdump:116> ((  ! --_i && 366 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  365  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _nm'
+compdump:116> ((  ! --_i && 365 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  364  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _nmap'
+compdump:116> ((  ! --_i && 364 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  363  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _nmcli'
+compdump:116> ((  ! --_i && 363 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  362  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _normal'
+compdump:116> ((  ! --_i && 362 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  361  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _nothing'
+compdump:116> ((  ! --_i && 361 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  360  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _notmuch'
+compdump:116> ((  ! --_i && 360 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  359  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _npm'
+compdump:116> ((  ! --_i && 359 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  358  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _nslookup'
+compdump:116> ((  ! --_i && 358 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  357  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _objdump'
+compdump:116> ((  ! --_i && 357 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  356  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _object_classes'
+compdump:116> ((  ! --_i && 356 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  355  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _object_files'
+compdump:116> ((  ! --_i && 355 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  354  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _od'
+compdump:116> ((  ! --_i && 354 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  353  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _okular'
+compdump:116> ((  ! --_i && 353 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  352  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _oldlist'
+compdump:116> ((  ! --_i && 352 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  351  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _open'
+compdump:116> ((  ! --_i && 351 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  350  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _openstack'
+compdump:116> ((  ! --_i && 350 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  349  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _options'
+compdump:116> ((  ! --_i && 349 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  348  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _options_set'
+compdump:116> ((  ! --_i && 348 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  347  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _options_unset'
+compdump:116> ((  ! --_i && 347 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  346  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _osc'
+compdump:116> ((  ! --_i && 346 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  345  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _other_accounts'
+compdump:116> ((  ! --_i && 345 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  344  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pack'
+compdump:116> ((  ! --_i && 344 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  343  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _parameter'
+compdump:116> ((  ! --_i && 343 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  342  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _parameters'
+compdump:116> ((  ! --_i && 342 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  341  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _paste'
+compdump:116> ((  ! --_i && 341 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  340  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _patch'
+compdump:116> ((  ! --_i && 340 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  339  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _patchutils'
+compdump:116> ((  ! --_i && 339 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  338  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _path_commands'
+compdump:116> ((  ! --_i && 338 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  337  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _path_files'
+compdump:116> ((  ! --_i && 337 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  336  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pax'
+compdump:116> ((  ! --_i && 336 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  335  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pbm'
+compdump:116> ((  ! --_i && 335 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  334  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pbuilder'
+compdump:116> ((  ! --_i && 334 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  333  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pdf'
+compdump:116> ((  ! --_i && 333 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  332  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pdftk'
+compdump:116> ((  ! --_i && 332 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  331  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _perforce'
+compdump:116> ((  ! --_i && 331 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  330  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _perl'
+compdump:116> ((  ! --_i && 330 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  329  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _perl_basepods'
+compdump:116> ((  ! --_i && 329 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  328  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _perldoc'
+compdump:116> ((  ! --_i && 328 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  327  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _perl_modules'
+compdump:116> ((  ! --_i && 327 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  326  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pfctl'
+compdump:116> ((  ! --_i && 326 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  325  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pfexec'
+compdump:116> ((  ! --_i && 325 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  324  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pgrep'
+compdump:116> ((  ! --_i && 324 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  323  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _php'
+compdump:116> ((  ! --_i && 323 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  322  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _physical_volumes'
+compdump:116> ((  ! --_i && 322 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  321  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pick_variant'
+compdump:116> ((  ! --_i && 321 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  320  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _picocom'
+compdump:116> ((  ! --_i && 320 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  319  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pidof'
+compdump:116> ((  ! --_i && 319 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  318  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pids'
+compdump:116> ((  ! --_i && 318 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  317  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pine'
+compdump:116> ((  ! --_i && 317 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  316  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ping'
+compdump:116> ((  ! --_i && 316 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  315  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _piuparts'
+compdump:116> ((  ! --_i && 315 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  314  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pkg5'
+compdump:116> ((  ! --_i && 314 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  313  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pkgadd'
+compdump:116> ((  ! --_i && 313 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  312  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pkg-config'
+compdump:116> ((  ! --_i && 312 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  311  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pkginfo'
+compdump:116> ((  ! --_i && 311 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  310  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pkg_instance'
+compdump:116> ((  ! --_i && 310 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  309  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pkgrm'
+compdump:116> ((  ! --_i && 309 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  308  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pkgtool'
+compdump:116> ((  ! --_i && 308 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  307  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pon'
+compdump:116> ((  ! --_i && 307 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  306  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _portaudit'
+compdump:116> ((  ! --_i && 306 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  305  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _portlint'
+compdump:116> ((  ! --_i && 305 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  304  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _portmaster'
+compdump:116> ((  ! --_i && 304 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  303  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ports'
+compdump:116> ((  ! --_i && 303 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  302  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _portsnap'
+compdump:116> ((  ! --_i && 302 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  301  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _postfix'
+compdump:116> ((  ! --_i && 301 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  300  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _postscript'
+compdump:116> ((  ! --_i && 300 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  299  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _powerd'
+compdump:116> ((  ! --_i && 299 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  298  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _prcs'
+compdump:116> ((  ! --_i && 298 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  297  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _precommand'
+compdump:116> ((  ! --_i && 297 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  296  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _prefix'
+compdump:116> ((  ! --_i && 296 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  295  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _print'
+compdump:116> ((  ! --_i && 295 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  294  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _printenv'
+compdump:116> ((  ! --_i && 294 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  293  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _printers'
+compdump:116> ((  ! --_i && 293 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  292  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _procstat'
+compdump:116> ((  ! --_i && 292 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  291  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _prompt'
+compdump:116> ((  ! --_i && 291 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  290  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _prove'
+compdump:116> ((  ! --_i && 290 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  289  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _prstat'
+compdump:116> ((  ! --_i && 289 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  288  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ps'
+compdump:116> ((  ! --_i && 288 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  287  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ps1234'
+compdump:116> ((  ! --_i && 287 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  286  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pscp'
+compdump:116> ((  ! --_i && 286 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  285  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pspdf'
+compdump:116> ((  ! --_i && 285 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  284  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _psutils'
+compdump:116> ((  ! --_i && 284 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  283  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ptree'
+compdump:116> ((  ! --_i && 283 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  282  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pump'
+compdump:116> ((  ! --_i && 282 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  281  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _putclip'
+compdump:116> ((  ! --_i && 281 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  280  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _pydoc'
+compdump:116> ((  ! --_i && 280 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  279  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _python'
+compdump:116> ((  ! --_i && 279 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  278  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _python_modules'
+compdump:116> ((  ! --_i && 278 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  277  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _qdbus'
+compdump:116> ((  ! --_i && 277 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  276  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _qemu'
+compdump:116> ((  ! --_i && 276 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  275  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _qiv'
+compdump:116> ((  ! --_i && 275 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  274  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _qtplay'
+compdump:116> ((  ! --_i && 274 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  273  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _quilt'
+compdump:116> ((  ! --_i && 273 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  272  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _raggle'
+compdump:116> ((  ! --_i && 272 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  271  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rake'
+compdump:116> ((  ! --_i && 271 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  270  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ranlib'
+compdump:116> ((  ! --_i && 270 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  269  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rar'
+compdump:116> ((  ! --_i && 269 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  268  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rcctl'
+compdump:116> ((  ! --_i && 268 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  267  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rcs'
+compdump:116> ((  ! --_i && 267 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  266  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rdesktop'
+compdump:116> ((  ! --_i && 266 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  265  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _read'
+compdump:116> ((  ! --_i && 265 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  264  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _read_comp'
+compdump:116> ((  ! --_i && 264 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  263  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _readelf'
+compdump:116> ((  ! --_i && 263 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  262  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _readshortcut'
+compdump:116> ((  ! --_i && 262 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  261  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rebootin'
+compdump:116> ((  ! --_i && 261 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  260  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _redirect'
+compdump:116> ((  ! --_i && 260 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  259  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _regex_arguments'
+compdump:116> ((  ! --_i && 259 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  258  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _regex_words'
+compdump:116> ((  ! --_i && 258 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  257  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _remote_files'
+compdump:116> ((  ! --_i && 257 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  256  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _renice'
+compdump:116> ((  ! --_i && 256 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  255  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _reprepro'
+compdump:116> ((  ! --_i && 255 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  254  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _requested'
+compdump:116> ((  ! --_i && 254 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  253  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _retrieve_cache'
+compdump:116> ((  ! --_i && 253 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  252  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _retrieve_mac_apps'
+compdump:116> ((  ! --_i && 252 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  251  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ri'
+compdump:116> ((  ! --_i && 251 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  250  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rlogin'
+compdump:116> ((  ! --_i && 250 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  249  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rm'
+compdump:116> ((  ! --_i && 249 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  248  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rpm'
+compdump:116> ((  ! --_i && 248 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  247  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rpmbuild'
+compdump:116> ((  ! --_i && 247 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  246  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rrdtool'
+compdump:116> ((  ! --_i && 246 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  245  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rsync'
+compdump:116> ((  ! --_i && 245 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  244  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _rubber'
+compdump:116> ((  ! --_i && 244 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  243  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ruby'
+compdump:116> ((  ! --_i && 243 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  242  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _run-help'
+compdump:116> ((  ! --_i && 242 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  241  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _runit'
+compdump:116> ((  ! --_i && 241 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  240  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sablotron'
+compdump:116> ((  ! --_i && 240 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  239  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _samba'
+compdump:116> ((  ! --_i && 239 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  238  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _savecore'
+compdump:116> ((  ! --_i && 238 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  237  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sccs'
+compdump:116> ((  ! --_i && 237 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  236  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sched'
+compdump:116> ((  ! --_i && 236 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  235  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _schedtool'
+compdump:116> ((  ! --_i && 235 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  234  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _schroot'
+compdump:116> ((  ! --_i && 234 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  233  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _scl'
+compdump:116> ((  ! --_i && 233 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  232  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _screen'
+compdump:116> ((  ! --_i && 232 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  231  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _script'
+compdump:116> ((  ! --_i && 231 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  230  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sed'
+compdump:116> ((  ! --_i && 230 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  229  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sep_parts'
+compdump:116> ((  ! --_i && 229 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  228  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sequence'
+compdump:116> ((  ! --_i && 228 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  227  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _service'
+compdump:116> ((  ! --_i && 227 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  226  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _services'
+compdump:116> ((  ! --_i && 226 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  225  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _set'
+compdump:116> ((  ! --_i && 225 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  224  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _set_command'
+compdump:116> ((  ! --_i && 224 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  223  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _setfacl'
+compdump:116> ((  ! --_i && 223 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  222  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _setopt'
+compdump:116> ((  ! --_i && 222 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  221  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _setup'
+compdump:116> ((  ! --_i && 221 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  220  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _setxkbmap'
+compdump:116> ((  ! --_i && 220 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  219  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sh'
+compdump:116> ((  ! --_i && 219 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  218  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _showmount'
+compdump:116> ((  ! --_i && 218 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  217  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _signals'
+compdump:116> ((  ! --_i && 217 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  216  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sisu'
+compdump:116> ((  ! --_i && 216 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  215  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _slrn'
+compdump:116> ((  ! --_i && 215 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  214  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _smit'
+compdump:116> ((  ! --_i && 214 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  213  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _snoop'
+compdump:116> ((  ! --_i && 213 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  212  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _socket'
+compdump:116> ((  ! --_i && 212 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  211  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sockstat'
+compdump:116> ((  ! --_i && 211 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  210  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _softwareupdate'
+compdump:116> ((  ! --_i && 210 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  209  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sort'
+compdump:116> ((  ! --_i && 209 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  208  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _source'
+compdump:116> ((  ! --_i && 208 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  207  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _spamassassin'
+compdump:116> ((  ! --_i && 207 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  206  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sqlite'
+compdump:116> ((  ! --_i && 206 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  205  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sqsh'
+compdump:116> ((  ! --_i && 205 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  204  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ss'
+compdump:116> ((  ! --_i && 204 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  203  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ssh'
+compdump:116> ((  ! --_i && 203 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  202  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sshfs'
+compdump:116> ((  ! --_i && 202 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  201  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _stat'
+compdump:116> ((  ! --_i && 201 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  200  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _stgit'
+compdump:116> ((  ! --_i && 200 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  199  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _store_cache'
+compdump:116> ((  ! --_i && 199 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  198  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _strace'
+compdump:116> ((  ! --_i && 198 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  197  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _strftime'
+compdump:116> ((  ! --_i && 197 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  196  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _strip'
+compdump:116> ((  ! --_i && 196 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  195  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _stty'
+compdump:116> ((  ! --_i && 195 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  194  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _su'
+compdump:116> ((  ! --_i && 194 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  193  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sub_commands'
+compdump:116> ((  ! --_i && 193 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  192  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _subscript'
+compdump:116> ((  ! --_i && 192 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  191  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _subversion'
+compdump:116> ((  ! --_i && 191 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  190  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sudo'
+compdump:116> ((  ! --_i && 190 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  189  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _suffix_alias_files'
+compdump:116> ((  ! --_i && 189 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  188  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _surfraw'
+compdump:116> ((  ! --_i && 188 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  187  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _SUSEconfig'
+compdump:116> ((  ! --_i && 187 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  186  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _svcadm'
+compdump:116> ((  ! --_i && 186 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  185  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _svccfg'
+compdump:116> ((  ! --_i && 185 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  184  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _svcprop'
+compdump:116> ((  ! --_i && 184 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  183  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _svcs'
+compdump:116> ((  ! --_i && 183 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  182  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _svcs_fmri'
+compdump:116> ((  ! --_i && 182 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  181  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _svn-buildpackage'
+compdump:116> ((  ! --_i && 181 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  180  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _swaks'
+compdump:116> ((  ! --_i && 180 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  179  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _swift'
+compdump:116> ((  ! --_i && 179 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  178  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sys_calls'
+compdump:116> ((  ! --_i && 178 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  177  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sysctl'
+compdump:116> ((  ! --_i && 177 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  176  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sysrc'
+compdump:116> ((  ! --_i && 176 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  175  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _sysstat'
+compdump:116> ((  ! --_i && 175 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  174  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _systat'
+compdump:116> ((  ! --_i && 174 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  173  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _system_profiler'
+compdump:116> ((  ! --_i && 173 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  172  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tags'
+compdump:116> ((  ! --_i && 172 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  171  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tail'
+compdump:116> ((  ! --_i && 171 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  170  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tar'
+compdump:116> ((  ! --_i && 170 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  169  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tar_archive'
+compdump:116> ((  ! --_i && 169 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  168  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tardy'
+compdump:116> ((  ! --_i && 168 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  167  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tcpdump'
+compdump:116> ((  ! --_i && 167 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  166  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tcpsys'
+compdump:116> ((  ! --_i && 166 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  165  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tcptraceroute'
+compdump:116> ((  ! --_i && 165 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  164  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _telnet'
+compdump:116> ((  ! --_i && 164 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  163  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _terminals'
+compdump:116> ((  ! --_i && 163 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  162  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tex'
+compdump:116> ((  ! --_i && 162 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  161  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _texi'
+compdump:116> ((  ! --_i && 161 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  160  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _texinfo'
+compdump:116> ((  ! --_i && 160 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  159  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tidy'
+compdump:116> ((  ! --_i && 159 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  158  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tiff'
+compdump:116> ((  ! --_i && 158 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  157  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tilde'
+compdump:116> ((  ! --_i && 157 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  156  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tilde_files'
+compdump:116> ((  ! --_i && 156 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  155  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _time_zone'
+compdump:116> ((  ! --_i && 155 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  154  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tin'
+compdump:116> ((  ! --_i && 154 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  153  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tla'
+compdump:116> ((  ! --_i && 153 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  152  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tmux'
+compdump:116> ((  ! --_i && 152 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  151  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _todo.sh'
+compdump:116> ((  ! --_i && 151 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  150  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _toilet'
+compdump:116> ((  ! --_i && 150 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  149  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _toolchain-source'
+compdump:116> ((  ! --_i && 149 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  148  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _top'
+compdump:116> ((  ! --_i && 148 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  147  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _topgit'
+compdump:116> ((  ! --_i && 147 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  146  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _totd'
+compdump:116> ((  ! --_i && 146 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  145  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _touch'
+compdump:116> ((  ! --_i && 145 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  144  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tpb'
+compdump:116> ((  ! --_i && 144 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  143  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tpconfig'
+compdump:116> ((  ! --_i && 143 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  142  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tput'
+compdump:116> ((  ! --_i && 142 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  141  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tr'
+compdump:116> ((  ! --_i && 141 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  140  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tracepath'
+compdump:116> ((  ! --_i && 140 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  139  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _trap'
+compdump:116> ((  ! --_i && 139 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  138  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tree'
+compdump:116> ((  ! --_i && 138 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  137  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _truss'
+compdump:116> ((  ! --_i && 137 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  136  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ttyctl'
+compdump:116> ((  ! --_i && 136 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  135  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ttys'
+compdump:116> ((  ! --_i && 135 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  134  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _tune2fs'
+compdump:116> ((  ! --_i && 134 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  133  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _twidge'
+compdump:116> ((  ! --_i && 133 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  132  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _twisted'
+compdump:116> ((  ! --_i && 132 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  131  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _typeset'
+compdump:116> ((  ! --_i && 131 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  130  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ulimit'
+compdump:116> ((  ! --_i && 130 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  129  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _uml'
+compdump:116> ((  ! --_i && 129 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  128  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _umountable'
+compdump:116> ((  ! --_i && 128 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  127  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _unace'
+compdump:116> ((  ! --_i && 127 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  126  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _uname'
+compdump:116> ((  ! --_i && 126 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  125  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _unexpand'
+compdump:116> ((  ! --_i && 125 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  124  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _unhash'
+compdump:116> ((  ! --_i && 124 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  123  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _uniq'
+compdump:116> ((  ! --_i && 123 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  122  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _unison'
+compdump:116> ((  ! --_i && 122 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  121  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _units'
+compdump:116> ((  ! --_i && 121 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  120  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _update-alternatives'
+compdump:116> ((  ! --_i && 120 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  119  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _update-rc.d'
+compdump:116> ((  ! --_i && 119 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  118  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _urls'
+compdump:116> ((  ! --_i && 118 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  117  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _urpmi'
+compdump:116> ((  ! --_i && 117 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  116  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _urxvt'
+compdump:116> ((  ! --_i && 116 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  115  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _uscan'
+compdump:116> ((  ! --_i && 115 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  114  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _user_admin'
+compdump:116> ((  ! --_i && 114 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  113  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _user_at_host'
+compdump:116> ((  ! --_i && 113 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  112  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _user_expand'
+compdump:116> ((  ! --_i && 112 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  111  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _user_math_func'
+compdump:116> ((  ! --_i && 111 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  110  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _users'
+compdump:116> ((  ! --_i && 110 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  109  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _users_on'
+compdump:116> ((  ! --_i && 109 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  108  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _uzbl'
+compdump:116> ((  ! --_i && 108 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  107  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _valgrind'
+compdump:116> ((  ! --_i && 107 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  106  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _value'
+compdump:116> ((  ! --_i && 106 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  105  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _values'
+compdump:116> ((  ! --_i && 105 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  104  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _vared'
+compdump:116> ((  ! --_i && 104 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  103  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _vars'
+compdump:116> ((  ! --_i && 103 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  102  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _vcsh'
+compdump:116> ((  ! --_i && 102 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  101  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _vim'
+compdump:116> ((  ! --_i && 101 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  100  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _vim-addons'
+compdump:116> ((  ! --_i && 100 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  99  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _vmstat'
+compdump:116> ((  ! --_i && 99 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  98  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _vnc'
+compdump:116> ((  ! --_i && 98 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  97  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _volume_groups'
+compdump:116> ((  ! --_i && 97 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  96  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _vorbis'
+compdump:116> ((  ! --_i && 96 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  95  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _vorbiscomment'
+compdump:116> ((  ! --_i && 95 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  94  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _vserver'
+compdump:116> ((  ! --_i && 94 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  93  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _vux'
+compdump:116> ((  ! --_i && 93 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  92  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _w3m'
+compdump:116> ((  ! --_i && 92 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  91  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _wait'
+compdump:116> ((  ! --_i && 91 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  90  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _wajig'
+compdump:116> ((  ! --_i && 90 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  89  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _wakeup_capable_devices'
+compdump:116> ((  ! --_i && 89 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  88  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _wanna-build'
+compdump:116> ((  ! --_i && 88 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  87  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _wanted'
+compdump:116> ((  ! --_i && 87 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  86  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _watch'
+compdump:116> ((  ! --_i && 86 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  85  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _watch-snoop'
+compdump:116> ((  ! --_i && 85 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  84  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _wc'
+compdump:116> ((  ! --_i && 84 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  83  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _webbrowser'
+compdump:116> ((  ! --_i && 83 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  82  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _wget'
+compdump:116> ((  ! --_i && 82 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  81  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _whereis'
+compdump:116> ((  ! --_i && 81 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  80  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _which'
+compdump:116> ((  ! --_i && 80 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  79  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _whois'
+compdump:116> ((  ! --_i && 79 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  78  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _widgets'
+compdump:116> ((  ! --_i && 78 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  77  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _wiggle'
+compdump:116> ((  ! --_i && 77 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  76  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _wpa_cli'
+compdump:116> ((  ! --_i && 76 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  75  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xargs'
+compdump:116> ((  ! --_i && 75 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  74  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_arguments'
+compdump:116> ((  ! --_i && 74 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  73  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xauth'
+compdump:116> ((  ! --_i && 73 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  72  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xautolock'
+compdump:116> ((  ! --_i && 72 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  71  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_borderwidth'
+compdump:116> ((  ! --_i && 71 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  70  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xclip'
+compdump:116> ((  ! --_i && 70 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  69  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_color'
+compdump:116> ((  ! --_i && 69 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  68  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_colormapid'
+compdump:116> ((  ! --_i && 68 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  67  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_cursor'
+compdump:116> ((  ! --_i && 67 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  66  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_display'
+compdump:116> ((  ! --_i && 66 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  65  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xdvi'
+compdump:116> ((  ! --_i && 65 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  64  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_extension'
+compdump:116> ((  ! --_i && 64 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  63  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xfig'
+compdump:116> ((  ! --_i && 63 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  62  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_font'
+compdump:116> ((  ! --_i && 62 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  61  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xft_fonts'
+compdump:116> ((  ! --_i && 61 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  60  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_geometry'
+compdump:116> ((  ! --_i && 60 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  59  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_keysym'
+compdump:116> ((  ! --_i && 59 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  58  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xloadimage'
+compdump:116> ((  ! --_i && 58 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  57  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_locale'
+compdump:116> ((  ! --_i && 57 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  56  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xmlsoft'
+compdump:116> ((  ! --_i && 56 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  55  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xmms2'
+compdump:116> ((  ! --_i && 55 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  54  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_modifier'
+compdump:116> ((  ! --_i && 54 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  53  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xmodmap'
+compdump:116> ((  ! --_i && 53 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  52  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_name'
+compdump:116> ((  ! --_i && 52 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  51  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xournal'
+compdump:116> ((  ! --_i && 51 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  50  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xpdf'
+compdump:116> ((  ! --_i && 50 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  49  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xrandr'
+compdump:116> ((  ! --_i && 49 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  48  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_resource'
+compdump:116> ((  ! --_i && 48 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  47  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xscreensaver'
+compdump:116> ((  ! --_i && 47 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  46  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_selection_timeout'
+compdump:116> ((  ! --_i && 46 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  45  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xset'
+compdump:116> ((  ! --_i && 45 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  44  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xt_arguments'
+compdump:116> ((  ! --_i && 44 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  43  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xterm'
+compdump:116> ((  ! --_i && 43 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  42  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_title'
+compdump:116> ((  ! --_i && 42 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  41  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xt_session_id'
+compdump:116> ((  ! --_i && 41 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  40  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_utils'
+compdump:116> ((  ! --_i && 40 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  39  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xv'
+compdump:116> ((  ! --_i && 39 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  38  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_visual'
+compdump:116> ((  ! --_i && 38 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  37  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _x_window'
+compdump:116> ((  ! --_i && 37 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  36  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xwit'
+compdump:116> ((  ! --_i && 36 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  35  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xxd'
+compdump:116> ((  ! --_i && 35 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  34  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _xz'
+compdump:116> ((  ! --_i && 34 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  33  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _yafc'
+compdump:116> ((  ! --_i && 33 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  32  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _yast'
+compdump:116> ((  ! --_i && 32 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  31  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _yodl'
+compdump:116> ((  ! --_i && 31 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  30  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _yp'
+compdump:116> ((  ! --_i && 30 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  29  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _yum'
+compdump:116> ((  ! --_i && 29 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  28  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zargs'
+compdump:116> ((  ! --_i && 28 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  27  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zattr'
+compdump:116> ((  ! --_i && 27 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  26  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zcalc'
+compdump:116> ((  ! --_i && 26 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  25  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zcalc_line'
+compdump:116> ((  ! --_i && 25 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  24  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zcat'
+compdump:116> ((  ! --_i && 24 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  23  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zcompile'
+compdump:116> ((  ! --_i && 23 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  22  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zdump'
+compdump:116> ((  ! --_i && 22 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  21  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zed'
+compdump:116> ((  ! --_i && 21 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  20  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zfs'
+compdump:116> ((  ! --_i && 20 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  19  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zfs_dataset'
+compdump:116> ((  ! --_i && 19 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  18  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zfs_keysource_props'
+compdump:116> ((  ! --_i && 18 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  17  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zfs_pool'
+compdump:116> ((  ! --_i && 17 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  16  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zftp'
+compdump:116> ((  ! --_i && 16 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  15  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zip'
+compdump:116> ((  ! --_i && 15 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  14  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zle'
+compdump:116> ((  ! --_i && 14 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  13  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zlogin'
+compdump:116> ((  ! --_i && 13 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  12  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zmodload'
+compdump:116> ((  ! --_i && 12 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  11  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zmv'
+compdump:116> ((  ! --_i && 11 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  10  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zoneadm'
+compdump:116> ((  ! --_i && 10 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  9  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zones'
+compdump:116> ((  ! --_i && 9 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  8  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zpool'
+compdump:116> ((  ! --_i && 8 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  7  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zpty'
+compdump:116> ((  ! --_i && 7 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  6  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zsh'
+compdump:116> ((  ! --_i && 6 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  5  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zsh-mime-handler'
+compdump:116> ((  ! --_i && 5 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  4  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zsocket'
+compdump:116> ((  ! --_i && 4 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  3  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zstyle'
+compdump:116> ((  ! --_i && 3 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  2  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _ztodo'
+compdump:116> ((  ! --_i && 2 > 1  ))
+compdump:117> _i=5 
+compdump:118> print -n ' \\\n           '
+compdump:121> shift _d_als
+compdump:113> ((  1  ))
+compdump:114> ((  ! 0  ))
+compdump:115> print -n ' _zypper'
+compdump:116> ((  ! --_i && 1 > 1  ))
+compdump:121> shift _d_als
+compdump:113> ((  0  ))
+compdump:124> print
+compdump:126> local _c
+compdump:127> _c=_call_program
+compdump:128> print 'autoload -Uz +X _call_program'
+compdump:131> print
+compdump:133> print 'typeset -gUa _comp_assocs'
+compdump:134> print '_comp_assocs=( '\'\'' )'
+compdump:136> mv -f /root/.zcompdump-localhost-5.4.1.localhost.localdomain.3545 /root/.zcompdump-localhost-5.4.1
+compdump:138> unfunction compdump
+compdump:139> autoload -Uz compdump
+compinit:528> _i_line=complete-word
+compinit:531> zle -C complete-word .complete-word _main_complete
+compinit:528> _i_line=delete-char-or-list
+compinit:531> zle -C delete-char-or-list .delete-char-or-list _main_complete
+compinit:528> _i_line=expand-or-complete
+compinit:531> zle -C expand-or-complete .expand-or-complete _main_complete
+compinit:528> _i_line=expand-or-complete-prefix
+compinit:531> zle -C expand-or-complete-prefix .expand-or-complete-prefix _main_complete
+compinit:528> _i_line=list-choices
+compinit:531> zle -C list-choices .list-choices _main_complete
+compinit:528> _i_line=menu-complete
+compinit:531> zle -C menu-complete .menu-complete _main_complete
+compinit:528> _i_line=menu-expand-or-complete
+compinit:531> zle -C menu-expand-or-complete .menu-expand-or-complete _main_complete
+compinit:528> _i_line=reverse-menu-complete
+compinit:531> zle -C reverse-menu-complete .reverse-menu-complete _main_complete
+compinit:533> zle -la menu-select
+compinit:533> zle -C menu-select .menu-select _main_complete
+compinit:537> bindkey '^i'
+compinit:537> IFS=$' \t' +compinit:537> read -A _i_line
+compinit:538> [[ expand-or-complete = expand-or-complete ]]
+compinit:539> zstyle -a :completion: completer _i_line
+compinit:544> unfunction compinit compaudit
+compinit:545> autoload -Uz compinit compaudit
+compinit:547> return 0
+/root/.oh-my-zsh/oh-my-zsh.sh:81> plugin=git
+/root/.oh-my-zsh/oh-my-zsh.sh:82> [ -f /root/.oh-my-zsh/custom/plugins/git/git.plugin.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:84> [ -f /root/.oh-my-zsh/plugins/git/git.plugin.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:85> source /root/.oh-my-zsh/plugins/git/git.plugin.zsh
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:2> zstyle -s ':vcs_info:git:*:-all-' command _omz_git_git_cmd
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:3> : git
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:41> alias 'g=git'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:43> alias 'ga=git add'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:44> alias 'gaa=git add --all'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:45> alias 'gapa=git add --patch'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:46> alias 'gau=git add --update'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:47> alias 'gap=git apply'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:49> alias 'gb=git branch'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:50> alias 'gba=git branch -a'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:51> alias 'gbd=git branch -d'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:52> alias 'gbda=git branch --no-color --merged | command grep -vE "^(\*|\s*(master|develop|dev)\s*$)" | command xargs -n 1 git branch -d'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:53> alias 'gbl=git blame -b -w'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:54> alias 'gbnm=git branch --no-merged'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:55> alias 'gbr=git branch --remote'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:56> alias 'gbs=git bisect'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:57> alias 'gbsb=git bisect bad'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:58> alias 'gbsg=git bisect good'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:59> alias 'gbsr=git bisect reset'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:60> alias 'gbss=git bisect start'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:62> alias 'gc=git commit -v'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:63> alias 'gc!=git commit -v --amend'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:64> alias 'gcn!=git commit -v --no-edit --amend'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:65> alias 'gca=git commit -v -a'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:66> alias 'gca!=git commit -v -a --amend'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:67> alias 'gcan!=git commit -v -a --no-edit --amend'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:68> alias 'gcans!=git commit -v -a -s --no-edit --amend'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:69> alias 'gcam=git commit -a -m'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:70> alias 'gcsm=git commit -s -m'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:71> alias 'gcb=git checkout -b'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:72> alias 'gcf=git config --list'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:73> alias 'gcl=git clone --recursive'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:74> alias 'gclean=git clean -fd'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:75> alias 'gpristine=git reset --hard && git clean -dfx'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:76> alias 'gcm=git checkout master'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:77> alias 'gcd=git checkout develop'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:78> alias 'gcmsg=git commit -m'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:79> alias 'gco=git checkout'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:80> alias 'gcount=git shortlog -sn'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:81> compdef _git gcount
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gcount = -N ]]
+compdef:134> [[ gcount = -p ]]
+compdef:136> [[ gcount = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gcount = *=* ]]
+compdef:159> cmd=gcount 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:82> alias 'gcp=git cherry-pick'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:83> alias 'gcpa=git cherry-pick --abort'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:84> alias 'gcpc=git cherry-pick --continue'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:85> alias 'gcs=git commit -S'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:87> alias 'gd=git diff'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:88> alias 'gdca=git diff --cached'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:89> alias 'gdcw=git diff --cached --word-diff'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:90> alias 'gdct=git describe --tags `git rev-list --tags --max-count=1`'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:91> alias 'gdt=git diff-tree --no-commit-id --name-only -r'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:92> alias 'gdw=git diff --word-diff'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:95> compdef _git 'gdv=git-diff'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gdv=git-diff' = -N ]]
+compdef:134> [[ 'gdv=git-diff' = -p ]]
+compdef:136> [[ 'gdv=git-diff' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gdv=git-diff' = *=* ]]
+compdef:156> cmd=gdv 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-diff 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:97> alias 'gf=git fetch'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:98> alias 'gfa=git fetch --all --prune'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:99> alias 'gfo=git fetch origin'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:102> compdef _grep gfg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _grep = *=* ]]
+compdef:79> func=_grep 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gfg = -N ]]
+compdef:134> [[ gfg = -p ]]
+compdef:136> [[ gfg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gfg = *=* ]]
+compdef:159> cmd=gfg 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:104> alias 'gg=git gui citool'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:105> alias 'gga=git gui citool --amend'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:115> compdef _git 'ggf=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggf=git-checkout' = -N ]]
+compdef:134> [[ 'ggf=git-checkout' = -p ]]
+compdef:136> [[ 'ggf=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggf=git-checkout' = *=* ]]
+compdef:156> cmd=ggf 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:125> compdef _git 'ggl=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggl=git-checkout' = -N ]]
+compdef:134> [[ 'ggl=git-checkout' = -p ]]
+compdef:136> [[ 'ggl=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggl=git-checkout' = *=* ]]
+compdef:156> cmd=ggl 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:135> compdef _git 'ggp=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggp=git-checkout' = -N ]]
+compdef:134> [[ 'ggp=git-checkout' = -p ]]
+compdef:136> [[ 'ggp=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggp=git-checkout' = *=* ]]
+compdef:156> cmd=ggp 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:144> compdef _git 'ggpnp=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggpnp=git-checkout' = -N ]]
+compdef:134> [[ 'ggpnp=git-checkout' = -p ]]
+compdef:136> [[ 'ggpnp=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggpnp=git-checkout' = *=* ]]
+compdef:156> cmd=ggpnp 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:150> compdef _git 'ggu=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggu=git-checkout' = -N ]]
+compdef:134> [[ 'ggu=git-checkout' = -p ]]
+compdef:136> [[ 'ggu=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggu=git-checkout' = *=* ]]
+compdef:156> cmd=ggu 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:152> alias 'ggpur=ggu'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:153> compdef _git 'ggpur=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggpur=git-checkout' = -N ]]
+compdef:134> [[ 'ggpur=git-checkout' = -p ]]
+compdef:136> [[ 'ggpur=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggpur=git-checkout' = *=* ]]
+compdef:156> cmd=ggpur 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:155> alias 'ggpull=git pull origin $(git_current_branch)'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:156> compdef _git 'ggpull=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggpull=git-checkout' = -N ]]
+compdef:134> [[ 'ggpull=git-checkout' = -p ]]
+compdef:136> [[ 'ggpull=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggpull=git-checkout' = *=* ]]
+compdef:156> cmd=ggpull 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:158> alias 'ggpush=git push origin $(git_current_branch)'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:159> compdef _git 'ggpush=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggpush=git-checkout' = -N ]]
+compdef:134> [[ 'ggpush=git-checkout' = -p ]]
+compdef:136> [[ 'ggpush=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggpush=git-checkout' = *=* ]]
+compdef:156> cmd=ggpush 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:161> alias 'ggsup=git branch --set-upstream-to=origin/$(git_current_branch)'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:162> alias 'gpsup=git push --set-upstream origin $(git_current_branch)'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:164> alias 'ghh=git help'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:166> alias 'gignore=git update-index --assume-unchanged'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:167> alias 'gignored=git ls-files -v | grep "^[[:lower:]]"'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:168> alias 'git-svn-dcommit-push=git svn dcommit && git push github master:svntrunk'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:169> compdef _git 'git-svn-dcommit-push=git'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'git-svn-dcommit-push=git' = -N ]]
+compdef:134> [[ 'git-svn-dcommit-push=git' = -p ]]
+compdef:136> [[ 'git-svn-dcommit-push=git' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'git-svn-dcommit-push=git' = *=* ]]
+compdef:156> cmd=git-svn-dcommit-push 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:171> alias 'gk=\gitk --all --branches'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:172> compdef _git 'gk=gitk'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gk=gitk' = -N ]]
+compdef:134> [[ 'gk=gitk' = -p ]]
+compdef:136> [[ 'gk=gitk' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gk=gitk' = *=* ]]
+compdef:156> cmd=gk 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gitk 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:173> alias 'gke=\gitk --all $(git log -g --pretty=%h)'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:174> compdef _git 'gke=gitk'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gke=gitk' = -N ]]
+compdef:134> [[ 'gke=gitk' = -p ]]
+compdef:136> [[ 'gke=gitk' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gke=gitk' = *=* ]]
+compdef:156> cmd=gke 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gitk 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:176> alias 'gl=git pull'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:177> alias 'glg=git log --stat'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:178> alias 'glgp=git log --stat -p'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:179> alias 'glgg=git log --graph'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:180> alias 'glgga=git log --graph --decorate --all'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:181> alias 'glgm=git log --graph --max-count=10'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:182> alias 'glo=git log --oneline --decorate'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:183> alias 'glol=git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --abbrev-commit'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:184> alias 'glola=git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --abbrev-commit --all'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:185> alias 'glog=git log --oneline --decorate --graph'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:186> alias 'gloga=git log --oneline --decorate --graph --all'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:187> alias 'glp=_git_log_prettily'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:188> compdef _git 'glp=git-log'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'glp=git-log' = -N ]]
+compdef:134> [[ 'glp=git-log' = -p ]]
+compdef:136> [[ 'glp=git-log' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'glp=git-log' = *=* ]]
+compdef:156> cmd=glp 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-log 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:190> alias 'gm=git merge'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:191> alias 'gmom=git merge origin/master'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:192> alias 'gmt=git mergetool --no-prompt'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:193> alias 'gmtvim=git mergetool --no-prompt --tool=vimdiff'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:194> alias 'gmum=git merge upstream/master'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:195> alias 'gma=git merge --abort'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:197> alias 'gp=git push'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:198> alias 'gpd=git push --dry-run'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:199> alias 'gpoat=git push origin --all && git push origin --tags'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:200> compdef _git 'gpoat=git-push'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gpoat=git-push' = -N ]]
+compdef:134> [[ 'gpoat=git-push' = -p ]]
+compdef:136> [[ 'gpoat=git-push' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gpoat=git-push' = *=* ]]
+compdef:156> cmd=gpoat 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-push 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:201> alias 'gpu=git push upstream'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:202> alias 'gpv=git push -v'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:204> alias 'gr=git remote'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:205> alias 'gra=git remote add'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:206> alias 'grb=git rebase'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:207> alias 'grba=git rebase --abort'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:208> alias 'grbc=git rebase --continue'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:209> alias 'grbi=git rebase -i'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:210> alias 'grbm=git rebase master'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:211> alias 'grbs=git rebase --skip'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:212> alias 'grh=git reset HEAD'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:213> alias 'grhh=git reset HEAD --hard'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:214> alias 'grmv=git remote rename'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:215> alias 'grrm=git remote remove'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:216> alias 'grset=git remote set-url'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:217> alias 'grt=cd $(git rev-parse --show-toplevel || echo ".")'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:218> alias 'gru=git reset --'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:219> alias 'grup=git remote update'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:220> alias 'grv=git remote -v'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:222> alias 'gsb=git status -sb'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:223> alias 'gsd=git svn dcommit'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:224> alias 'gsi=git submodule init'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:225> alias 'gsps=git show --pretty=short --show-signature'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:226> alias 'gsr=git svn rebase'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:227> alias 'gss=git status -s'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:228> alias 'gst=git status'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:229> alias 'gsta=git stash save'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:230> alias 'gstaa=git stash apply'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:231> alias 'gstc=git stash clear'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:232> alias 'gstd=git stash drop'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:233> alias 'gstl=git stash list'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:234> alias 'gstp=git stash pop'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:235> alias 'gsts=git stash show --text'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:236> alias 'gsu=git submodule update'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:238> alias 'gts=git tag -s'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:239> alias 'gtv=git tag | sort -V'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:241> alias 'gunignore=git update-index --no-assume-unchanged'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:242> alias 'gunwip=git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:243> alias 'gup=git pull --rebase'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:244> alias 'gupv=git pull --rebase -v'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:245> alias 'glum=git pull upstream master'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:247> alias 'gwch=git whatchanged -p --abbrev-commit --pretty=medium'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:248> alias 'gwip=git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify -m "--wip-- [skip ci]"'
+/root/.oh-my-zsh/oh-my-zsh.sh:90> config_file=/root/.oh-my-zsh/custom/example.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:91> source /root/.oh-my-zsh/custom/example.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:93> unset config_file
+/root/.oh-my-zsh/oh-my-zsh.sh:96> [[ bira == random ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:108> [ '!' bira '=' '' ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:109> [ -f /root/.oh-my-zsh/custom/bira.zsh-theme ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:111> [ -f /root/.oh-my-zsh/custom/themes/bira.zsh-theme ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:114> source /root/.oh-my-zsh/themes/bira.zsh-theme
+/root/.oh-my-zsh/themes/bira.zsh-theme:2> local return_code=$'%(?..%{\C-[[31m%}%? ↵%{\C-[[00m%})'
+/root/.oh-my-zsh/themes/bira.zsh-theme:5> [[ 0 -eq 0 ]]
+/root/.oh-my-zsh/themes/bira.zsh-theme:6> local user_host='%{$terminfo[bold]$fg[red]%}%n@%m%{$reset_color%}'
+/root/.oh-my-zsh/themes/bira.zsh-theme:7> local user_symbol='#'
+/root/.oh-my-zsh/themes/bira.zsh-theme:13> local current_dir='%{$terminfo[bold]$fg[blue]%}%~%{$reset_color%}'
+/root/.oh-my-zsh/themes/bira.zsh-theme:14> local rvm_ruby=''
+/root/.oh-my-zsh/themes/bira.zsh-theme:15> alias
+/root/.oh-my-zsh/themes/bira.zsh-theme:15> /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot rvm-prompt
+/root/.oh-my-zsh/themes/bira.zsh-theme:15> declare -f
+/root/.oh-my-zsh/themes/bira.zsh-theme:18> alias
+/root/.oh-my-zsh/themes/bira.zsh-theme:18> /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot rbenv
+/root/.oh-my-zsh/themes/bira.zsh-theme:18> declare -f
+/root/.oh-my-zsh/themes/bira.zsh-theme:22> local git_branch='$(git_prompt_info)%{$reset_color%}'
+/root/.oh-my-zsh/themes/bira.zsh-theme:24> PROMPT=$'╭─%{$terminfo[bold]$fg[red]%}%n@%m%{$reset_color%} %{$terminfo[bold]$fg[blue]%}%~%{$reset_color%}  $(git_prompt_info)%{$reset_color%}\n╰─%B#%b ' 
+/root/.oh-my-zsh/themes/bira.zsh-theme:26> RPS1=$'%B%(?..%{\C-[[31m%}%? ↵%{\C-[[00m%})%b' 
+/root/.oh-my-zsh/themes/bira.zsh-theme:28> ZSH_THEME_GIT_PROMPT_PREFIX=$'%{\C-[[33m%}‹' 
+/root/.oh-my-zsh/themes/bira.zsh-theme:29> ZSH_THEME_GIT_PROMPT_SUFFIX=$'› %{\C-[[00m%}' 
+/root/.zshrc:99> printf '\e[8;55;215t'
+/root/.zshrc:102> export GOPATH=/root/go
+/root/.zshrc:103> export GOROOT=/usr/local/go
+/root/.zshrc:104> export PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin
+/root/.zshrc:105> alias 'ctagscpp=ctags --c++-kinds=+p --fields=+iaS --extra=+q'
+/root/.zshrc:106> alias 'gl=ghq look $(ghq list|fzf)'
+/root/.zshrc:108> alias 'perldb=perl -d:Trepan'
+/root/.zshrc:109> alias 'chrome=google-chrome-stable --no-sandbox'
+/root/.zshrc:110> alias 'vid=vim --servername gdb'
+/root/.zshrc:111> export PS=/mnt/hgfs/H/work/package
+/root/.zshrc:112> export PG=mirrors.ustc.edu.cn
+/root/.zshrc:113> export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
+/root/.zshrc:114> export LD_LIBRARY_PATH=/usr/local/lib
+/root/.zshrc:115> export PERL5LIB=:/usr/local/lib/perl5/site_perl/5.26.1:/usr/local/lib/perl5/site_perl/5.26.1/x86_64-linux:/usr/local/lib/perl5/site_perl/5.26.1:/usr/local/lib/perl5/site_perl/5.26.1/x86_64-linux:/usr/local/lib/perl5/site_perl/5.26.1:/usr/local/lib/perl5/site_perl/5.26.1/x86_64-linux
+/root/.zshrc:121> [ -f /root/.fzf.zsh ']'
+/root/.zshrc:121> source /root/.fzf.zsh
+/root/.fzf.zsh:3> [[ ! /usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin == */root/.fzf/bin* ]]
+/root/.fzf.zsh:9> [[ 569JNRXZghikmx == *i* ]]
+/root/.fzf.zsh:9> source /root/.fzf/shell/completion.zsh
+/root/.fzf/shell/completion.zsh:14> declare -f _fzf_compgen_path
+/root/.fzf/shell/completion.zsh:23> declare -f _fzf_compgen_dir
+/root/.fzf/shell/completion.zsh:192> [ -z '' ']'
+/root/.fzf/shell/completion.zsh:193> binding=+/root/.fzf/shell/completion.zsh:193> bindkey '^I'
+/root/.fzf/shell/completion.zsh:193> binding='"^I" expand-or-complete' 
+/root/.fzf/shell/completion.zsh:194> [[ $binding -regex-match 'undefined-key' ]]
+/root/.fzf/shell/completion.zsh:194> fzf_default_completion=expand-or-complete 
+/root/.fzf/shell/completion.zsh:195> unset binding
+/root/.fzf/shell/completion.zsh:198> zle -N fzf-completion
+/root/.fzf/shell/completion.zsh:199> bindkey '^I' fzf-completion
+/root/.fzf.zsh:13> source /root/.fzf/shell/key-bindings.zsh
+/root/.fzf/shell/key-bindings.zsh:3> [[ 569JNRXZghikmx == *i* ]]
+/root/.fzf/shell/key-bindings.zsh:36> zle -N fzf-file-widget
+/root/.fzf/shell/key-bindings.zsh:37> bindkey '^T' fzf-file-widget
+/root/.fzf/shell/key-bindings.zsh:47> zle -N fzf-redraw-prompt
+/root/.fzf/shell/key-bindings.zsh:65> zle -N fzf-cd-widget
+/root/.fzf/shell/key-bindings.zsh:66> bindkey '\ec' fzf-cd-widget
+/root/.fzf/shell/key-bindings.zsh:85> zle -N fzf-history-widget
+/root/.fzf/shell/key-bindings.zsh:86> bindkey '^R' fzf-history-widget
+/root/.zshrc:124> [[ 569JNRXZghikmx != *i* ]]
+/root/.zshrc:125> [[ -z /tmp/tmux-0/default,2061,0 ]]
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:1> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:1> fg
fg: no current job
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:2> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=vim
+omz_termsupport_preexec:10> local LINE='vim 123'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:2> vim 123
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:3> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:3> ls '--color=tty'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:4> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh install-sub/install-fzf.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:4> sh install-sub/install-fzf.sh
fatal: destination path '/root/.fzf' already exists and is not an empty directory.
Do you want to enable fuzzy auto-completion? ([y]/n) +omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:5> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fzf
+omz_termsupport_preexec:10> local LINE=fzf
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:5> fzf
[?1049h[?1000h[37A[G[K[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [;m                                                                                                                                                     [;1;34m> [m[;1m[m[2C[1A[;m                                                                                                                                                     [;1;32m|[m[2C[;37m0/0[m[1B[2C[1A[;m                                                                                                                                                     [2C[;37m47/47[m[36A[;1;31;40m [m[;m [;mredhat-7.4/CentOS7.4-Base.repo[m[1B[;1;31;40m [m[;m [;mREADME.md[m[1B[;1;31;40m [m[;m [;mpredefine.log[m[1B[;1;31;40m [m[;m [;minstall.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-zsh.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-vim.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-tmux.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-shared.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-openbox.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-git.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-fzf.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-dnf.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-define.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-ag.sh[m[1B[;1;31;40m [m[;m [;minstall-gdb.sh[m[1B[;1;31;40m [m[;m [;minstall-define.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-x11.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-vim.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-stoptracker.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-perl.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-openbox.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-glibc.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-glib.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-git.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-gcc.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-ag.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-acl.sh[m[1B[;1;31;40m [m[;m [;minstall-autoconf.sh[m[1B[;1;31;40m [m[;m [;mfedora-27/fedora-ustc.repo[m[1B[;1;31;40m [m[;m [;mfedora-27/fedora-updates-ustc.repo[m[1B[;1;31;40m [m[;m [;mdotfile/MyConfig.pm[m[1B[;1;31;40m [m[;m [;mdotfile/my-autostart.desktop[m[1B[;1;31;40m [m[;m [;mdotfile/dnf.conf[m[1B[;1;31;40m [m[;m [;mdotfile/custom.conf[m[1B[;1;31;40m [m[;m [;mchinese-font.md[m[1B[;1;31;40m>[m[;1;33;40m [m[;1;33;40m123[m[2B[2C[1A[;m                                                                                                                                                     [2C[;37m47/47[m[1B[2C[;m                                                                                                                                                     [;1;34m> [m[;1m[m[?1049l[?1000l+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:6> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fzf
+omz_termsupport_preexec:10> local LINE=fzf
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:6> fzf
[?1049h[?1000h[37A[G[K[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [1B[;m                                                                                                                                                     [;m                                                                                                                                                     [;1;34m> [m[;1m[m[2C[1A[;m                                                                                                                                                     [;1;32m-[m[2C[;37m0/0[m[1B[2C[1A[;m                                                                                                                                                     [2C[;37m47/47[m[36A[;1;31;40m [m[;m [;mredhat-7.4/CentOS7.4-Base.repo[m[1B[;1;31;40m [m[;m [;mREADME.md[m[1B[;1;31;40m [m[;m [;mpredefine.log[m[1B[;1;31;40m [m[;m [;minstall.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-zsh.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-vim.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-tmux.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-shared.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-openbox.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-git.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-fzf.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-dnf.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-define.sh[m[1B[;1;31;40m [m[;m [;minstall-sub/install-ag.sh[m[1B[;1;31;40m [m[;m [;minstall-gdb.sh[m[1B[;1;31;40m [m[;m [;minstall-define.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-x11.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-vim.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-stoptracker.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-perl.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-openbox.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-glibc.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-glib.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-git.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-gcc.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-ag.sh[m[1B[;1;31;40m [m[;m [;minstall-bak/install-acl.sh[m[1B[;1;31;40m [m[;m [;minstall-autoconf.sh[m[1B[;1;31;40m [m[;m [;mfedora-27/fedora-ustc.repo[m[1B[;1;31;40m [m[;m [;mfedora-27/fedora-updates-ustc.repo[m[1B[;1;31;40m [m[;m [;mdotfile/MyConfig.pm[m[1B[;1;31;40m [m[;m [;mdotfile/my-autostart.desktop[m[1B[;1;31;40m [m[;m [;mdotfile/dnf.conf[m[1B[;1;31;40m [m[;m [;mdotfile/custom.conf[m[1B[;1;31;40m [m[;m [;mchinese-font.md[m[1B[;1;31;40m>[m[;1;33;40m [m[;1;33;40m123[m[2B[2C[1A[;m                                                                                                                                                     [2C[;37m47/47[m[1B[2C[;m                                                                                                                                                     [;1;34m> [m[;1m[m[?1049l[?1000l+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:7> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:7> fg
fg: no current job
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:8> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:8> fg
fg: no current job
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:9> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=which
+omz_termsupport_preexec:10> local LINE='( alias; declare -f; ) | /usr/bin/which --tty-only --read-alias  --show-tilde'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:9> alias
+zsh:9> /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot
+zsh:9> declare -f
Usage: /usr/bin/which [options] [--] COMMAND [...]
Write the full path of COMMAND(s) to standard output.

  --version, -[vV] Print version and exit successfully.
  --help,          Print this help and exit successfully.
  --skip-dot       Skip directories in PATH that start with a dot.
  --skip-tilde     Skip directories in PATH that start with a tilde.
  --show-dot       Don't expand a dot to current directory in output.
  --show-tilde     Output a tilde for HOME directory for non-root.
  --tty-only       Stop processing options on the right if not on tty.
  --all, -a        Print all matches in PATH, not just the first
  --read-alias, -i Read list of aliases from stdin.
  --skip-alias     Ignore option --read-alias; don't read stdin.
  --read-functions Read shell functions from stdin.
  --skip-functions Ignore option --read-functions; don't read stdin.

Recommended use is to write the output of (alias; declare -f) to standard
input, so that which can show aliases and shell functions. See which(1) for
examples.

If the options --read-alias and/or --read-functions are specified then the
output can be a full alias or function definition, optionally followed by
the full path of each command used inside of those.

Report bugs to <which-bugs@gnu.org>.
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:10> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:10> ls '--color=tty'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:11> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=autoconf
+omz_termsupport_preexec:10> local LINE=autoconf
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:11> autoconf
+command_not_found_handle:1> local runcnf=1
+command_not_found_handle:2> local retval=127
+command_not_found_handle:5> [[ $- -regex-match i ]]
+command_not_found_handle:8> [[ ! -S /run/dbus/system_bus_socket ]]
+command_not_found_handle:11> [[ ! -x /usr/libexec/packagekitd ]]
+command_not_found_handle:14> [[ -n '' ]]
+command_not_found_handle:17> [ 1 -eq 1 ']'
+command_not_found_handle:18> /usr/libexec/pk-command-not-found autoconf
zsh: autoconf: command not found...
+command_not_found_handle:19> retval=127 
+command_not_found_handle:25> return 127
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:12> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=which
+omz_termsupport_preexec:10> local LINE='( alias; declare -f; ) | /usr/bin/which --tty-only --read-alias  --show-tilde'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:12> alias
+zsh:12> /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot autoconf
+zsh:12> declare -f
/usr/bin/which: no autoconf in (/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin)
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:13> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=where
+omz_termsupport_preexec:10> local LINE='where autoconf'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:13> where autoconf
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:14> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE='git remote'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:14> git remote
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:15> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=source
+omz_termsupport_preexec:10> local LINE='source ~/.zshrc'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:15> source /root/.zshrc
+/root/.zshrc:5> export ZSH=/root/.oh-my-zsh
+/root/.zshrc:10> ZSH_THEME=bira 
+/root/.zshrc:61> plugins=( git ) 
+/root/.zshrc:65> source /root/.oh-my-zsh/oh-my-zsh.sh
+/root/.oh-my-zsh/oh-my-zsh.sh:2> [ '' '!=' true ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:3> env 'ZSH=/root/.oh-my-zsh' 'DISABLE_UPDATE_PROMPT=' zsh -f /root/.oh-my-zsh/tools/check_for_upgrade.sh
+/root/.oh-my-zsh/oh-my-zsh.sh:9> fpath=( /root/.oh-my-zsh/functions /root/.oh-my-zsh/completions /root/.oh-my-zsh/plugins/git /root/.oh-my-zsh/functions /root/.oh-my-zsh/completions /usr/local/share/zsh/site-functions /usr/share/zsh/site-functions /usr/share/zsh/5.4.1/functions ) 
+/root/.oh-my-zsh/oh-my-zsh.sh:12> autoload -U compaudit compinit
+/root/.oh-my-zsh/oh-my-zsh.sh:14> : true
+/root/.oh-my-zsh/oh-my-zsh.sh:18> [[ -z /root/.oh-my-zsh/custom ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:24> [[ -z /root/.oh-my-zsh/cache ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/bzr.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/bzr.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/bzr.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/bzr.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/clipboard.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/clipboard.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/clipboard.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/clipboard.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/compfix.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/compfix.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/compfix.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/compfix.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/completion.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/completion.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/completion.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/completion.zsh
+/root/.oh-my-zsh/lib/completion.zsh:2> zmodload -i zsh/complist
+/root/.oh-my-zsh/lib/completion.zsh:4> WORDCHARS='' 
+/root/.oh-my-zsh/lib/completion.zsh:6> unsetopt menu_complete
+/root/.oh-my-zsh/lib/completion.zsh:7> unsetopt flowcontrol
+/root/.oh-my-zsh/lib/completion.zsh:8> setopt auto_menu
+/root/.oh-my-zsh/lib/completion.zsh:9> setopt complete_in_word
+/root/.oh-my-zsh/lib/completion.zsh:10> setopt always_to_end
+/root/.oh-my-zsh/lib/completion.zsh:13> bindkey -M menuselect '^o' accept-and-infer-next-history
+/root/.oh-my-zsh/lib/completion.zsh:14> zstyle ':completion:*:*:*:*:*' menu select
+/root/.oh-my-zsh/lib/completion.zsh:17> [[ '' = true ]]
+/root/.oh-my-zsh/lib/completion.zsh:20> [[ '' = true ]]
+/root/.oh-my-zsh/lib/completion.zsh:23> zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
+/root/.oh-my-zsh/lib/completion.zsh:26> unset CASE_SENSITIVE HYPHEN_INSENSITIVE
+/root/.oh-my-zsh/lib/completion.zsh:28> zstyle ':completion:*' list-colors ''
+/root/.oh-my-zsh/lib/completion.zsh:29> zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
+/root/.oh-my-zsh/lib/completion.zsh:31> [[ linux-gnu = solaris* ]]
+/root/.oh-my-zsh/lib/completion.zsh:34> zstyle ':completion:*:*:*:*:processes' command 'ps -u root -o pid,user,comm -w -w'
+/root/.oh-my-zsh/lib/completion.zsh:38> zstyle ':completion:*:cd:*' tag-order local-directories directory-stack path-directories
+/root/.oh-my-zsh/lib/completion.zsh:41> zstyle ':completion::complete:*' use-cache 1
+/root/.oh-my-zsh/lib/completion.zsh:42> zstyle ':completion::complete:*' cache-path /root/.oh-my-zsh/cache
+/root/.oh-my-zsh/lib/completion.zsh:45> zstyle ':completion:*:*:*:users' ignored-patterns adm amanda apache at avahi avahi-autoipd beaglidx bin cacti canna clamav daemon dbus distcache dnsmasq dovecot fax ftp games gdm gkrellmd gopher hacluster haldaemon halt hsqldb ident junkbust kdm ldap lp mail mailman mailnull man messagebus mldonkey mysql nagios named netdump news nfsnobody nobody nscd ntp nut nx obsrun openvpn operator pcap polkitd postfix postgres privoxy pulse pvm quagga radvd rpc rpcuser rpm rtkit scard shutdown squid sshd statd svn sync tftp usbmux uucp vcsa wwwrun xfs '_*'
+/root/.oh-my-zsh/lib/completion.zsh:56> zstyle '*' single-ignored show
+/root/.oh-my-zsh/lib/completion.zsh:58> [[ '' = true ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/correction.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/correction.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/correction.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/correction.zsh
+/root/.oh-my-zsh/lib/correction.zsh:1> [[ '' == true ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/diagnostics.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/diagnostics.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/diagnostics.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/diagnostics.zsh
+/root/.oh-my-zsh/lib/diagnostics.zsh:56> autoload -Uz is-at-least
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/directories.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/directories.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/directories.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/directories.zsh
+/root/.oh-my-zsh/lib/directories.zsh:2> setopt auto_pushd
+/root/.oh-my-zsh/lib/directories.zsh:3> setopt pushd_ignore_dups
+/root/.oh-my-zsh/lib/directories.zsh:4> setopt pushdminus
+/root/.oh-my-zsh/lib/directories.zsh:6> alias -g '...=../..'
+/root/.oh-my-zsh/lib/directories.zsh:7> alias -g '....=../../..'
+/root/.oh-my-zsh/lib/directories.zsh:8> alias -g '.....=../../../..'
+/root/.oh-my-zsh/lib/directories.zsh:9> alias -g '......=../../../../..'
+/root/.oh-my-zsh/lib/directories.zsh:11> alias -- '-=cd -'
+/root/.oh-my-zsh/lib/directories.zsh:12> alias '1=cd -'
+/root/.oh-my-zsh/lib/directories.zsh:13> alias '2=cd -2'
+/root/.oh-my-zsh/lib/directories.zsh:14> alias '3=cd -3'
+/root/.oh-my-zsh/lib/directories.zsh:15> alias '4=cd -4'
+/root/.oh-my-zsh/lib/directories.zsh:16> alias '5=cd -5'
+/root/.oh-my-zsh/lib/directories.zsh:17> alias '6=cd -6'
+/root/.oh-my-zsh/lib/directories.zsh:18> alias '7=cd -7'
+/root/.oh-my-zsh/lib/directories.zsh:19> alias '8=cd -8'
+/root/.oh-my-zsh/lib/directories.zsh:20> alias '9=cd -9'
+/root/.oh-my-zsh/lib/directories.zsh:22> alias 'md=mkdir -p'
+/root/.oh-my-zsh/lib/directories.zsh:23> alias 'rd=rmdir'
+/root/.oh-my-zsh/lib/directories.zsh:24> alias 'd=dirs -v | head -10'
+/root/.oh-my-zsh/lib/directories.zsh:27> alias 'lsa=ls -lah'
+/root/.oh-my-zsh/lib/directories.zsh:28> alias 'l=ls -lah'
+/root/.oh-my-zsh/lib/directories.zsh:29> alias 'll=ls -lh'
+/root/.oh-my-zsh/lib/directories.zsh:30> alias 'la=ls -lAh'
+/root/.oh-my-zsh/lib/directories.zsh:33> alias 'pu=pushd'
+/root/.oh-my-zsh/lib/directories.zsh:34> alias 'po=popd'
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/functions.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/functions.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/functions.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/functions.zsh
+/root/.oh-my-zsh/lib/functions.zsh:104> zmodload zsh/langinfo
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/git.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/git.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/git.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/git.zsh
+/root/.oh-my-zsh/lib/git.zsh:219> POST_1_7_2_GIT=+/root/.oh-my-zsh/lib/git.zsh:219> git_compare_version 1.7.2
+git_compare_version:1> local INPUT_GIT_VERSION INSTALLED_GIT_VERSION
+git_compare_version:2> INPUT_GIT_VERSION=( 1 7 2 ) 
+git_compare_version:3> INSTALLED_GIT_VERSION=+git_compare_version:3> git --version
+git_compare_version:3> INSTALLED_GIT_VERSION=( git version 2.14.2 ) 
+git_compare_version:4> INSTALLED_GIT_VERSION=( 2 14 2 ) 
+git_compare_version:6> i=1
+git_compare_version:7> [[ 2 -gt 1 ]]
+git_compare_version:8> echo 1
+git_compare_version:9> return 0
+/root/.oh-my-zsh/lib/git.zsh:219> POST_1_7_2_GIT=1 
+/root/.oh-my-zsh/lib/git.zsh:221> unfunction git_compare_version
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/grep.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/grep.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/grep.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/grep.zsh
+/root/.oh-my-zsh/lib/grep.zsh:6> GREP_OPTIONS='' 
+/root/.oh-my-zsh/lib/grep.zsh:9> grep-flag-available '--color=auto'
+grep-flag-available:1> echo
+grep-flag-available:1> grep '--color=auto' '--exclude-dir=.bzr' '--exclude-dir=CVS' '--exclude-dir=.git' '--exclude-dir=.hg' '--exclude-dir=.svn' '--color=auto' ''
+/root/.oh-my-zsh/lib/grep.zsh:10> GREP_OPTIONS+=' --color=auto' 
+/root/.oh-my-zsh/lib/grep.zsh:14> VCS_FOLDERS='{.bzr,CVS,.git,.hg,.svn}' 
+/root/.oh-my-zsh/lib/grep.zsh:16> grep-flag-available '--exclude-dir=.cvs'
+grep-flag-available:1> echo
+grep-flag-available:1> grep '--color=auto' '--exclude-dir=.bzr' '--exclude-dir=CVS' '--exclude-dir=.git' '--exclude-dir=.hg' '--exclude-dir=.svn' '--exclude-dir=.cvs' ''
+/root/.oh-my-zsh/lib/grep.zsh:17> GREP_OPTIONS+=' --exclude-dir={.bzr,CVS,.git,.hg,.svn}' 
+/root/.oh-my-zsh/lib/grep.zsh:23> alias 'grep=grep  --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
+/root/.oh-my-zsh/lib/grep.zsh:26> unset GREP_OPTIONS
+/root/.oh-my-zsh/lib/grep.zsh:27> unset VCS_FOLDERS
+/root/.oh-my-zsh/lib/grep.zsh:28> unfunction grep-flag-available
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/history.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/history.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/history.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/history.zsh
+/root/.oh-my-zsh/lib/history.zsh:2> [ -z /root/.zsh_history ']'
+/root/.oh-my-zsh/lib/history.zsh:6> HISTSIZE=10000 
+/root/.oh-my-zsh/lib/history.zsh:7> SAVEHIST=10000 
+/root/.oh-my-zsh/lib/history.zsh:10> case  (mm/dd/yyyy)
+/root/.oh-my-zsh/lib/history.zsh:10> case  (dd.mm.yyyy)
+/root/.oh-my-zsh/lib/history.zsh:10> case  (yyyy-mm-dd)
+/root/.oh-my-zsh/lib/history.zsh:10> case  (*)
+/root/.oh-my-zsh/lib/history.zsh:14> alias 'history=fc -l 1'
+/root/.oh-my-zsh/lib/history.zsh:17> setopt append_history
+/root/.oh-my-zsh/lib/history.zsh:18> setopt extended_history
+/root/.oh-my-zsh/lib/history.zsh:19> setopt hist_expire_dups_first
+/root/.oh-my-zsh/lib/history.zsh:20> setopt hist_ignore_dups
+/root/.oh-my-zsh/lib/history.zsh:21> setopt hist_ignore_space
+/root/.oh-my-zsh/lib/history.zsh:22> setopt hist_verify
+/root/.oh-my-zsh/lib/history.zsh:23> setopt inc_append_history
+/root/.oh-my-zsh/lib/history.zsh:24> setopt share_history
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/key-bindings.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/key-bindings.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/key-bindings.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/key-bindings.zsh
+/root/.oh-my-zsh/lib/key-bindings.zsh:7> ((  1  ))
+/root/.oh-my-zsh/lib/key-bindings.zsh:7> ((  1  ))
+/root/.oh-my-zsh/lib/key-bindings.zsh:14> zle -N zle-line-init
+/root/.oh-my-zsh/lib/key-bindings.zsh:15> zle -N zle-line-finish
+/root/.oh-my-zsh/lib/key-bindings.zsh:18> bindkey -e
+/root/.oh-my-zsh/lib/key-bindings.zsh:20> bindkey '\ew' kill-region
+/root/.oh-my-zsh/lib/key-bindings.zsh:21> bindkey -s '\el' 'ls\n'
+/root/.oh-my-zsh/lib/key-bindings.zsh:22> bindkey '^r' history-incremental-search-backward
+/root/.oh-my-zsh/lib/key-bindings.zsh:23> [[ $'\C-[[5~' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:24> bindkey $'\C-[[5~' up-line-or-history
+/root/.oh-my-zsh/lib/key-bindings.zsh:26> [[ $'\C-[[6~' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:27> bindkey $'\C-[[6~' down-line-or-history
+/root/.oh-my-zsh/lib/key-bindings.zsh:31> [[ $'\C-[OA' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:32> autoload -U up-line-or-beginning-search
+/root/.oh-my-zsh/lib/key-bindings.zsh:33> zle -N up-line-or-beginning-search
+/root/.oh-my-zsh/lib/key-bindings.zsh:34> bindkey $'\C-[OA' up-line-or-beginning-search
+/root/.oh-my-zsh/lib/key-bindings.zsh:37> [[ $'\C-[OB' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:38> autoload -U down-line-or-beginning-search
+/root/.oh-my-zsh/lib/key-bindings.zsh:39> zle -N down-line-or-beginning-search
+/root/.oh-my-zsh/lib/key-bindings.zsh:40> bindkey $'\C-[OB' down-line-or-beginning-search
+/root/.oh-my-zsh/lib/key-bindings.zsh:43> [[ $'\C-[[1~' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:44> bindkey $'\C-[[1~' beginning-of-line
+/root/.oh-my-zsh/lib/key-bindings.zsh:46> [[ $'\C-[[4~' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:47> bindkey $'\C-[[4~' end-of-line
+/root/.oh-my-zsh/lib/key-bindings.zsh:50> bindkey ' ' magic-space
+/root/.oh-my-zsh/lib/key-bindings.zsh:52> bindkey '^[[1;5C' forward-word
+/root/.oh-my-zsh/lib/key-bindings.zsh:53> bindkey '^[[1;5D' backward-word
+/root/.oh-my-zsh/lib/key-bindings.zsh:55> [[ $'\C-[[Z' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:56> bindkey $'\C-[[Z' reverse-menu-complete
+/root/.oh-my-zsh/lib/key-bindings.zsh:59> bindkey '^?' backward-delete-char
+/root/.oh-my-zsh/lib/key-bindings.zsh:60> [[ $'\C-[[3~' !=  ]]
+/root/.oh-my-zsh/lib/key-bindings.zsh:61> bindkey $'\C-[[3~' delete-char
+/root/.oh-my-zsh/lib/key-bindings.zsh:69> autoload -U edit-command-line
+/root/.oh-my-zsh/lib/key-bindings.zsh:70> zle -N edit-command-line
+/root/.oh-my-zsh/lib/key-bindings.zsh:71> bindkey '\C-x\C-e' edit-command-line
+/root/.oh-my-zsh/lib/key-bindings.zsh:74> bindkey '^[m' copy-prev-shell-word
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/misc.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/misc.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/misc.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/misc.zsh
+/root/.oh-my-zsh/lib/misc.zsh:3> autoload -Uz is-at-least
+/root/.oh-my-zsh/lib/misc.zsh:4> [[ 5.4.1 != 5.1.1 ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/root/.oh-my-zsh/functions
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /root/.oh-my-zsh/functions/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/root/.oh-my-zsh/completions
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /root/.oh-my-zsh/completions/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/root/.oh-my-zsh/plugins/git
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /root/.oh-my-zsh/plugins/git/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/root/.oh-my-zsh/functions
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /root/.oh-my-zsh/functions/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/root/.oh-my-zsh/completions
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /root/.oh-my-zsh/completions/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/usr/local/share/zsh/site-functions
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /usr/local/share/zsh/site-functions/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/usr/share/zsh/site-functions
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /usr/share/zsh/site-functions/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:5> d=/usr/share/zsh/5.4.1/functions
+/root/.oh-my-zsh/lib/misc.zsh:6> [[ -e /usr/share/zsh/5.4.1/functions/url-quote-magic ]]
+/root/.oh-my-zsh/lib/misc.zsh:7> is-at-least 5.1
+is-at-least:23> emulate -L zsh
+is-at-least:25> local IFS=.- min_cnt=0 ver_cnt=0 part min_ver version order
+is-at-least:27> min_ver=( 5 1 ) 
+is-at-least:28> version=( 5 4 1 0 ) 
+is-at-least:30> ((  0 <= 2  ))
+is-at-least:31> [[ '' != <-> ]]
+is-at-least:32> ((  ++ver_cnt > 4  ))
+is-at-least:33> [[ 5 = *[0-9][^0-9]* ]]
+is-at-least:45> part=5 
+is-at-least:31> [[ 5 != <-> ]]
+is-at-least:48> true
+is-at-least:49> ((  ++min_cnt > 2  ))
+is-at-least:50> [[ 5 = <-> ]]
+is-at-least:50> break
+is-at-least:53> ((  part > min_ver[min_cnt]  ))
+is-at-least:54> ((  part < min_ver[min_cnt]  ))
+is-at-least:55> part='' 
+is-at-least:30> ((  1 <= 2  ))
+is-at-least:31> [[ '' != <-> ]]
+is-at-least:32> ((  ++ver_cnt > 4  ))
+is-at-least:33> [[ 4 = *[0-9][^0-9]* ]]
+is-at-least:45> part=4 
+is-at-least:31> [[ 4 != <-> ]]
+is-at-least:48> true
+is-at-least:49> ((  ++min_cnt > 2  ))
+is-at-least:50> [[ 1 = <-> ]]
+is-at-least:50> break
+is-at-least:53> ((  part > min_ver[min_cnt]  ))
+is-at-least:53> return 0
+/root/.oh-my-zsh/lib/misc.zsh:8> autoload -Uz bracketed-paste-magic
+/root/.oh-my-zsh/lib/misc.zsh:9> zle -N bracketed-paste bracketed-paste-magic
+/root/.oh-my-zsh/lib/misc.zsh:11> autoload -Uz url-quote-magic
+/root/.oh-my-zsh/lib/misc.zsh:12> zle -N self-insert url-quote-magic
+/root/.oh-my-zsh/lib/misc.zsh:13> break
+/root/.oh-my-zsh/lib/misc.zsh:19> setopt long_list_jobs
+/root/.oh-my-zsh/lib/misc.zsh:22> env_default PAGER less
+env_default:1> env
+env_default:1> grep '--color=auto' '--exclude-dir=.bzr' '--exclude-dir=CVS' '--exclude-dir=.git' '--exclude-dir=.hg' '--exclude-dir=.svn' -q '^PAGER='
+env_default:1> return 0
+/root/.oh-my-zsh/lib/misc.zsh:23> env_default LESS -R
+env_default:1> env
+env_default:1> grep '--color=auto' '--exclude-dir=.bzr' '--exclude-dir=CVS' '--exclude-dir=.git' '--exclude-dir=.hg' '--exclude-dir=.svn' -q '^LESS='
+env_default:1> return 0
+/root/.oh-my-zsh/lib/misc.zsh:26> alias '_=sudo'
+/root/.oh-my-zsh/lib/misc.zsh:27> alias 'please=sudo'
+/root/.oh-my-zsh/lib/misc.zsh:30> alias
+/root/.oh-my-zsh/lib/misc.zsh:30> /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot ack-grep
+/root/.oh-my-zsh/lib/misc.zsh:30> declare -f
+/root/.oh-my-zsh/lib/misc.zsh:33> alias 'afind=ack -il'
+/root/.oh-my-zsh/lib/misc.zsh:37> [[ -z en_US.UTF-8 ]]
+/root/.oh-my-zsh/lib/misc.zsh:42> setopt interactivecomments
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/nvm.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/nvm.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/nvm.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/nvm.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/prompt_info_functions.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/prompt_info_functions.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/prompt_info_functions.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/prompt_info_functions.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/spectrum.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/spectrum.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/spectrum.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/spectrum.zsh
+/root/.oh-my-zsh/lib/spectrum.zsh:6> typeset -AHg FX FG BG
+/root/.oh-my-zsh/lib/spectrum.zsh:8> FX=( reset $'%{\C-[[00m%}' bold $'%{\C-[[01m%}' no-bold $'%{\C-[[22m%}' italic $'%{\C-[[03m%}' no-italic $'%{\C-[[23m%}' underline $'%{\C-[[04m%}' no-underline $'%{\C-[[24m%}' blink $'%{\C-[[05m%}' no-blink $'%{\C-[[25m%}' reverse $'%{\C-[[07m%}' no-reverse $'%{\C-[[27m%}' ) 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=000
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;000m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;000m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=001
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;001m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;001m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=002
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;002m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;002m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=003
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;003m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;003m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=004
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;004m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;004m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=005
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;005m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;005m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=006
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;006m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;006m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=007
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;007m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;007m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=008
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;008m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;008m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=009
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;009m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;009m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=010
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;010m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;010m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=011
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;011m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;011m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=012
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;012m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;012m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=013
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;013m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;013m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=014
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;014m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;014m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=015
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;015m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;015m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=016
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;016m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;016m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=017
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;017m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;017m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=018
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;018m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;018m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=019
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;019m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;019m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=020
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;020m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;020m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=021
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;021m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;021m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=022
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;022m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;022m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=023
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;023m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;023m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=024
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;024m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;024m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=025
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;025m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;025m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=026
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;026m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;026m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=027
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;027m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;027m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=028
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;028m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;028m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=029
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;029m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;029m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=030
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;030m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;030m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=031
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;031m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;031m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=032
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;032m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;032m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=033
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;033m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;033m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=034
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;034m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;034m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=035
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;035m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;035m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=036
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;036m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;036m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=037
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;037m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;037m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=038
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;038m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;038m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=039
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;039m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;039m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=040
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;040m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;040m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=041
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;041m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;041m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=042
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;042m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;042m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=043
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;043m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;043m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=044
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;044m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;044m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=045
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;045m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;045m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=046
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;046m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;046m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=047
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;047m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;047m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=048
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;048m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;048m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=049
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;049m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;049m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=050
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;050m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;050m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=051
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;051m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;051m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=052
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;052m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;052m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=053
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;053m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;053m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=054
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;054m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;054m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=055
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;055m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;055m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=056
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;056m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;056m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=057
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;057m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;057m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=058
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;058m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;058m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=059
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;059m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;059m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=060
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;060m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;060m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=061
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;061m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;061m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=062
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;062m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;062m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=063
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;063m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;063m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=064
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;064m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;064m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=065
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;065m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;065m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=066
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;066m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;066m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=067
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;067m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;067m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=068
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;068m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;068m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=069
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;069m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;069m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=070
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;070m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;070m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=071
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;071m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;071m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=072
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;072m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;072m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=073
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;073m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;073m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=074
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;074m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;074m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=075
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;075m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;075m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=076
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;076m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;076m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=077
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;077m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;077m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=078
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;078m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;078m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=079
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;079m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;079m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=080
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;080m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;080m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=081
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;081m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;081m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=082
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;082m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;082m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=083
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;083m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;083m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=084
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;084m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;084m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=085
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;085m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;085m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=086
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;086m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;086m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=087
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;087m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;087m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=088
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;088m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;088m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=089
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;089m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;089m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=090
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;090m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;090m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=091
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;091m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;091m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=092
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;092m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;092m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=093
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;093m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;093m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=094
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;094m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;094m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=095
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;095m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;095m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=096
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;096m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;096m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=097
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;097m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;097m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=098
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;098m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;098m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=099
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;099m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;099m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=100
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;100m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;100m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=101
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;101m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;101m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=102
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;102m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;102m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=103
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;103m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;103m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=104
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;104m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;104m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=105
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;105m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;105m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=106
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;106m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;106m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=107
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;107m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;107m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=108
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;108m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;108m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=109
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;109m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;109m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=110
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;110m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;110m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=111
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;111m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;111m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=112
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;112m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;112m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=113
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;113m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;113m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=114
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;114m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;114m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=115
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;115m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;115m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=116
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;116m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;116m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=117
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;117m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;117m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=118
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;118m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;118m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=119
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;119m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;119m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=120
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;120m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;120m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=121
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;121m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;121m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=122
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;122m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;122m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=123
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;123m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;123m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=124
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;124m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;124m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=125
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;125m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;125m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=126
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;126m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;126m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=127
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;127m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;127m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=128
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;128m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;128m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=129
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;129m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;129m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=130
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;130m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;130m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=131
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;131m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;131m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=132
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;132m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;132m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=133
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;133m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;133m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=134
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;134m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;134m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=135
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;135m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;135m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=136
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;136m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;136m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=137
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;137m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;137m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=138
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;138m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;138m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=139
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;139m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;139m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=140
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;140m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;140m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=141
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;141m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;141m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=142
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;142m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;142m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=143
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;143m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;143m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=144
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;144m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;144m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=145
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;145m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;145m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=146
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;146m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;146m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=147
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;147m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;147m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=148
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;148m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;148m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=149
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;149m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;149m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=150
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;150m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;150m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=151
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;151m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;151m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=152
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;152m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;152m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=153
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;153m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;153m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=154
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;154m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;154m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=155
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;155m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;155m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=156
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;156m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;156m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=157
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;157m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;157m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=158
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;158m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;158m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=159
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;159m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;159m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=160
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;160m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;160m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=161
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;161m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;161m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=162
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;162m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;162m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=163
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;163m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;163m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=164
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;164m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;164m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=165
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;165m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;165m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=166
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;166m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;166m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=167
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;167m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;167m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=168
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;168m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;168m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=169
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;169m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;169m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=170
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;170m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;170m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=171
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;171m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;171m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=172
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;172m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;172m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=173
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;173m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;173m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=174
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;174m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;174m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=175
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;175m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;175m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=176
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;176m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;176m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=177
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;177m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;177m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=178
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;178m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;178m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=179
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;179m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;179m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=180
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;180m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;180m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=181
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;181m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;181m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=182
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;182m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;182m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=183
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;183m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;183m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=184
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;184m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;184m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=185
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;185m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;185m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=186
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;186m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;186m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=187
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;187m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;187m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=188
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;188m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;188m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=189
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;189m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;189m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=190
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;190m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;190m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=191
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;191m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;191m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=192
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;192m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;192m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=193
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;193m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;193m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=194
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;194m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;194m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=195
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;195m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;195m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=196
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;196m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;196m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=197
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;197m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;197m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=198
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;198m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;198m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=199
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;199m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;199m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=200
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;200m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;200m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=201
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;201m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;201m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=202
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;202m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;202m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=203
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;203m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;203m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=204
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;204m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;204m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=205
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;205m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;205m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=206
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;206m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;206m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=207
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;207m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;207m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=208
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;208m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;208m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=209
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;209m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;209m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=210
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;210m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;210m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=211
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;211m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;211m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=212
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;212m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;212m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=213
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;213m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;213m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=214
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;214m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;214m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=215
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;215m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;215m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=216
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;216m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;216m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=217
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;217m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;217m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=218
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;218m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;218m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=219
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;219m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;219m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=220
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;220m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;220m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=221
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;221m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;221m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=222
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;222m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;222m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=223
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;223m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;223m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=224
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;224m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;224m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=225
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;225m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;225m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=226
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;226m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;226m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=227
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;227m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;227m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=228
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;228m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;228m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=229
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;229m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;229m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=230
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;230m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;230m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=231
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;231m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;231m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=232
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;232m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;232m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=233
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;233m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;233m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=234
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;234m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;234m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=235
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;235m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;235m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=236
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;236m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;236m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=237
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;237m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;237m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=238
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;238m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;238m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=239
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;239m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;239m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=240
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;240m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;240m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=241
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;241m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;241m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=242
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;242m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;242m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=243
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;243m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;243m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=244
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;244m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;244m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=245
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;245m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;245m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=246
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;246m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;246m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=247
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;247m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;247m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=248
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;248m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;248m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=249
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;249m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;249m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=250
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;250m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;250m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=251
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;251m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;251m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=252
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;252m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;252m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=253
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;253m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;253m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=254
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;254m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;254m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:17> color=255
+/root/.oh-my-zsh/lib/spectrum.zsh:18> FG[$color]=$'%{\C-[[38;5;255m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:19> BG[$color]=$'%{\C-[[48;5;255m%}' 
+/root/.oh-my-zsh/lib/spectrum.zsh:23> ZSH_SPECTRUM_TEXT='Arma virumque cano Troiae qui primus ab oris' 
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/termsupport.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/termsupport.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/termsupport.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/termsupport.zsh
+/root/.oh-my-zsh/lib/termsupport.zsh:44> ZSH_THEME_TERM_TAB_TITLE_IDLE='%15<..<%~%<<' 
+/root/.oh-my-zsh/lib/termsupport.zsh:45> ZSH_THEME_TERM_TITLE_IDLE='%n@%m: %~' 
+/root/.oh-my-zsh/lib/termsupport.zsh:47> [[ '' == Apple_Terminal ]]
+/root/.oh-my-zsh/lib/termsupport.zsh:78> precmd_functions+=( omz_termsupport_precmd ) 
+/root/.oh-my-zsh/lib/termsupport.zsh:79> preexec_functions+=( omz_termsupport_preexec ) 
+/root/.oh-my-zsh/lib/termsupport.zsh:86> [[ '' == Apple_Terminal ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:31> config_file=/root/.oh-my-zsh/lib/theme-and-appearance.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:32> custom_config_file=/root/.oh-my-zsh/custom/lib/theme-and-appearance.zsh 
+/root/.oh-my-zsh/oh-my-zsh.sh:33> [ -f /root/.oh-my-zsh/custom/lib/theme-and-appearance.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:34> source /root/.oh-my-zsh/lib/theme-and-appearance.zsh
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:2> autoload -U colors
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:2> colors
+colors:4> emulate -L zsh
+colors:6> typeset -Ag color colour
+colors:8> color=( 00 none 01 bold 02 faint 22 normal 03 standout 23 no-standout 04 underline 24 no-underline 05 blink 25 no-blink 07 reverse 27 no-reverse 08 conceal 28 no-conceal 30 black 40 bg-black 31 red 41 bg-red 32 green 42 bg-green 33 yellow 43 bg-yellow 34 blue 44 bg-blue 35 magenta 45 bg-magenta 36 cyan 46 bg-cyan 37 white 47 bg-white 39 default 49 bg-default ) 
+colors:76> local k
+colors:77> k=44
+colors:77> color[${color[$k]}]=44 
+colors:77> k=33
+colors:77> color[${color[$k]}]=33 
+colors:77> k=22
+colors:77> color[${color[$k]}]=22 
+colors:77> k=00
+colors:77> color[${color[$k]}]=00 
+colors:77> k=45
+colors:77> color[${color[$k]}]=45 
+colors:77> k=34
+colors:77> color[${color[$k]}]=34 
+colors:77> k=23
+colors:77> color[${color[$k]}]=23 
+colors:77> k=01
+colors:77> color[${color[$k]}]=01 
+colors:77> k=46
+colors:77> color[${color[$k]}]=46 
+colors:77> k=35
+colors:77> color[${color[$k]}]=35 
+colors:77> k=24
+colors:77> color[${color[$k]}]=24 
+colors:77> k=02
+colors:77> color[${color[$k]}]=02 
+colors:77> k=47
+colors:77> color[${color[$k]}]=47 
+colors:77> k=36
+colors:77> color[${color[$k]}]=36 
+colors:77> k=25
+colors:77> color[${color[$k]}]=25 
+colors:77> k=03
+colors:77> color[${color[$k]}]=03 
+colors:77> k=37
+colors:77> color[${color[$k]}]=37 
+colors:77> k=04
+colors:77> color[${color[$k]}]=04 
+colors:77> k=49
+colors:77> color[${color[$k]}]=49 
+colors:77> k=27
+colors:77> color[${color[$k]}]=27 
+colors:77> k=05
+colors:77> color[${color[$k]}]=05 
+colors:77> k=39
+colors:77> color[${color[$k]}]=39 
+colors:77> k=28
+colors:77> color[${color[$k]}]=28 
+colors:77> k=07
+colors:77> color[${color[$k]}]=07 
+colors:77> k=08
+colors:77> color[${color[$k]}]=08 
+colors:77> k=40
+colors:77> color[${color[$k]}]=40 
+colors:77> k=41
+colors:77> color[${color[$k]}]=41 
+colors:77> k=30
+colors:77> color[${color[$k]}]=30 
+colors:77> k=42
+colors:77> color[${color[$k]}]=42 
+colors:77> k=31
+colors:77> color[${color[$k]}]=31 
+colors:77> k=43
+colors:77> color[${color[$k]}]=43 
+colors:77> k=32
+colors:77> color[${color[$k]}]=32 
+colors:81> k=30
+colors:81> color[fg-${color[$k]}]=30 
+colors:81> k=31
+colors:81> color[fg-${color[$k]}]=31 
+colors:81> k=32
+colors:81> color[fg-${color[$k]}]=32 
+colors:81> k=33
+colors:81> color[fg-${color[$k]}]=33 
+colors:81> k=34
+colors:81> color[fg-${color[$k]}]=34 
+colors:81> k=35
+colors:81> color[fg-${color[$k]}]=35 
+colors:81> k=36
+colors:81> color[fg-${color[$k]}]=36 
+colors:81> k=37
+colors:81> color[fg-${color[$k]}]=37 
+colors:81> k=39
+colors:81> color[fg-${color[$k]}]=39 
+colors:85> color[grey]=30 
+colors:86> color[fg-grey]=30 
+colors:87> color[bg-grey]=40 
+colors:91> colour=( 00 none 22 normal 44 bg-blue fg-red 31 01 bold 23 no-standout 45 bg-magenta 02 faint 24 no-underline 46 bg-cyan 03 standout 25 no-blink 47 bg-white 04 underline yellow 33 bg-red 41 bold 01 05 blink 27 no-reverse 49 bg-default no-reverse 27 28 no-conceal 07 reverse 08 conceal fg-black 30 red 31 conceal 08 default 39 faint 02 fg-green 32 no-underline 24 bg-magenta 45 magenta 35 blink 05 blue 34 grey 30 fg-default 39 bg-white 47 30 black no-standout 23 31 red 32 green bg-yellow 43 33 yellow cyan 36 34 blue 35 magenta white 37 36 cyan standout 03 37 white bg-blue 44 fg-magenta 35 39 default bg-grey 40 no-conceal 28 reverse 07 bg-cyan 46 underline 04 fg-yellow 33 fg-white 37 bg-black 40 normal 22 fg-blue 34 bg-green 42 none 00 fg-grey 30 black 30 no-blink 25 bg-default 49 40 bg-black fg-cyan 36 green 32 41 bg-red 42 bg-green 43 bg-yellow ) 
+colors:95> local lc=$'\C-[[' rc=m
+colors:97> typeset -Hg reset_color bold_color
+colors:98> reset_color=$'\C-[[00m' 
+colors:99> bold_color=$'\C-[[01m' 
+colors:103> typeset -AHg fg fg_bold fg_no_bold
+colors:104> k=fg-red
+colors:105> fg[${k#fg-}]=$'\C-[[31m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;31m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;31m' 
+colors:104> k=fg-black
+colors:105> fg[${k#fg-}]=$'\C-[[30m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;30m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;30m' 
+colors:104> k=fg-green
+colors:105> fg[${k#fg-}]=$'\C-[[32m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;32m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;32m' 
+colors:104> k=fg-default
+colors:105> fg[${k#fg-}]=$'\C-[[39m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;39m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;39m' 
+colors:104> k=fg-magenta
+colors:105> fg[${k#fg-}]=$'\C-[[35m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;35m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;35m' 
+colors:104> k=fg-yellow
+colors:105> fg[${k#fg-}]=$'\C-[[33m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;33m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;33m' 
+colors:104> k=fg-white
+colors:105> fg[${k#fg-}]=$'\C-[[37m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;37m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;37m' 
+colors:104> k=fg-blue
+colors:105> fg[${k#fg-}]=$'\C-[[34m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;34m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;34m' 
+colors:104> k=fg-grey
+colors:105> fg[${k#fg-}]=$'\C-[[30m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;30m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;30m' 
+colors:104> k=fg-cyan
+colors:105> fg[${k#fg-}]=$'\C-[[36m' 
+colors:106> fg_bold[${k#fg-}]=$'\C-[[01;36m' 
+colors:107> fg_no_bold[${k#fg-}]=$'\C-[[22;36m' 
+colors:112> typeset -AHg bg bg_bold bg_no_bold
+colors:113> k=bg-red
+colors:114> bg[${k#bg-}]=$'\C-[[41m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;41m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;41m' 
+colors:113> k=bg-magenta
+colors:114> bg[${k#bg-}]=$'\C-[[45m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;45m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;45m' 
+colors:113> k=bg-white
+colors:114> bg[${k#bg-}]=$'\C-[[47m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;47m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;47m' 
+colors:113> k=bg-yellow
+colors:114> bg[${k#bg-}]=$'\C-[[43m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;43m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;43m' 
+colors:113> k=bg-blue
+colors:114> bg[${k#bg-}]=$'\C-[[44m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;44m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;44m' 
+colors:113> k=bg-grey
+colors:114> bg[${k#bg-}]=$'\C-[[40m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;40m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;40m' 
+colors:113> k=bg-cyan
+colors:114> bg[${k#bg-}]=$'\C-[[46m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;46m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;46m' 
+colors:113> k=bg-black
+colors:114> bg[${k#bg-}]=$'\C-[[40m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;40m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;40m' 
+colors:113> k=bg-green
+colors:114> bg[${k#bg-}]=$'\C-[[42m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;42m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;42m' 
+colors:113> k=bg-default
+colors:114> bg[${k#bg-}]=$'\C-[[49m' 
+colors:115> bg_bold[${k#bg-}]=$'\C-[[01;49m' 
+colors:116> bg_no_bold[${k#bg-}]=$'\C-[[22;49m' 
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:5> export LSCOLORS=Gxfxcxdxbxegedabagacad
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:9> [[ '' != true ]]
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:11> [[ linux-gnu == netbsd* ]]
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:15> [[ linux-gnu == openbsd* ]]
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:22> [[ linux-gnu == darwin* ]]
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:31> [[ -z 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.m4a=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.oga=01;36:*.opus=01;36:*.spx=01;36:*.xspf=01;36:' ]]
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:35> ls '--color=tty' --color -d .
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:35> alias 'ls=ls --color=tty'
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:38> zstyle ':completion:*' list-colors 'rs=0' 'di=01;34' 'ln=01;36' 'mh=00' 'pi=40;33' 'so=01;35' 'do=01;35' 'bd=40;33;01' 'cd=40;33;01' 'or=40;31;01' 'mi=01;05;37;41' 'su=37;41' 'sg=30;43' 'ca=30;41' 'tw=30;42' 'ow=34;42' 'st=37;44' 'ex=01;32' '*.tar=01;31' '*.tgz=01;31' '*.arc=01;31' '*.arj=01;31' '*.taz=01;31' '*.lha=01;31' '*.lz4=01;31' '*.lzh=01;31' '*.lzma=01;31' '*.tlz=01;31' '*.txz=01;31' '*.tzo=01;31' '*.t7z=01;31' '*.zip=01;31' '*.z=01;31' '*.Z=01;31' '*.dz=01;31' '*.gz=01;31' '*.lrz=01;31' '*.lz=01;31' '*.lzo=01;31' '*.xz=01;31' '*.zst=01;31' '*.tzst=01;31' '*.bz2=01;31' '*.bz=01;31' '*.tbz=01;31' '*.tbz2=01;31' '*.tz=01;31' '*.deb=01;31' '*.rpm=01;31' '*.jar=01;31' '*.war=01;31' '*.ear=01;31' '*.sar=01;31' '*.rar=01;31' '*.alz=01;31' '*.ace=01;31' '*.zoo=01;31' '*.cpio=01;31' '*.7z=01;31' '*.rz=01;31' '*.cab=01;31' '*.wim=01;31' '*.swm=01;31' '*.dwm=01;31' '*.esd=01;31' '*.jpg=01;35' '*.jpeg=01;35' '*.mjpg=01;35' '*.mjpeg=01;35' '*.gif=01;35' '*.bmp=01;35' '*.pbm=01;35' '*.pgm=01;35' '*.ppm=01;35' '*.tga=01;35' '*.xbm=01;35' '*.xpm=01;35' '*.tif=01;35' '*.tiff=01;35' '*.png=01;35' '*.svg=01;35' '*.svgz=01;35' '*.mng=01;35' '*.pcx=01;35' '*.mov=01;35' '*.mpg=01;35' '*.mpeg=01;35' '*.m2v=01;35' '*.mkv=01;35' '*.webm=01;35' '*.ogm=01;35' '*.mp4=01;35' '*.m4v=01;35' '*.mp4v=01;35' '*.vob=01;35' '*.qt=01;35' '*.nuv=01;35' '*.wmv=01;35' '*.asf=01;35' '*.rm=01;35' '*.rmvb=01;35' '*.flc=01;35' '*.avi=01;35' '*.fli=01;35' '*.flv=01;35' '*.gl=01;35' '*.dl=01;35' '*.xcf=01;35' '*.xwd=01;35' '*.yuv=01;35' '*.cgm=01;35' '*.emf=01;35' '*.ogv=01;35' '*.ogx=01;35' '*.aac=01;36' '*.au=01;36' '*.flac=01;36' '*.m4a=01;36' '*.mid=01;36' '*.midi=01;36' '*.mka=01;36' '*.mp3=01;36' '*.mpc=01;36' '*.ogg=01;36' '*.ra=01;36' '*.wav=01;36' '*.oga=01;36' '*.opus=01;36' '*.spx=01;36' '*.xspf=01;36' ''
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:42> setopt auto_cd
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:43> setopt multios
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:44> setopt prompt_subst
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:46> [[ -n '' ]]
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:46> SCREEN_NO='' 
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:49> PS1='%n@%m:%~%# ' 
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:52> ZSH_THEME_GIT_PROMPT_PREFIX='git:(' 
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:53> ZSH_THEME_GIT_PROMPT_SUFFIX=')' 
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:54> ZSH_THEME_GIT_PROMPT_DIRTY='*' 
+/root/.oh-my-zsh/lib/theme-and-appearance.zsh:55> ZSH_THEME_GIT_PROMPT_CLEAN='' 
+/root/.oh-my-zsh/oh-my-zsh.sh:46> plugin=git
+/root/.oh-my-zsh/oh-my-zsh.sh:47> is_plugin /root/.oh-my-zsh/custom git
+is_plugin:1> local base_dir=/root/.oh-my-zsh/custom
+is_plugin:2> local name=git
+is_plugin:3> test -f /root/.oh-my-zsh/custom/plugins/git/git.plugin.zsh
+is_plugin:4> test -f /root/.oh-my-zsh/custom/plugins/git/_git
+/root/.oh-my-zsh/oh-my-zsh.sh:49> is_plugin /root/.oh-my-zsh git
+is_plugin:1> local base_dir=/root/.oh-my-zsh
+is_plugin:2> local name=git
+is_plugin:3> test -f /root/.oh-my-zsh/plugins/git/git.plugin.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:50> fpath=( /root/.oh-my-zsh/plugins/git /root/.oh-my-zsh/functions /root/.oh-my-zsh/completions /root/.oh-my-zsh/plugins/git /root/.oh-my-zsh/functions /root/.oh-my-zsh/completions /usr/local/share/zsh/site-functions /usr/share/zsh/site-functions /usr/share/zsh/5.4.1/functions ) 
+/root/.oh-my-zsh/oh-my-zsh.sh:55> [[ linux-gnu = darwin* ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:59> SHORT_HOST=localhost 
+/root/.oh-my-zsh/oh-my-zsh.sh:63> [ -z /root/.zcompdump-localhost-5.4.1 ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:67> [[ true != true ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:77> compinit -i -d /root/.zcompdump-localhost-5.4.1
+compinit:70> emulate -L zsh
+compinit:71> setopt extendedglob
+compinit:73> typeset _i_dumpfile _i_files _i_line _i_done _i_dir _i_autodump=1
+compinit:74> typeset _i_tag _i_file _i_addfiles _i_fail=ask _i_check=yes _i_name
+compinit:76> [[ 3 -gt 0 && -i = -[dDiuC] ]]
+compinit:77> case -i (-d)
+compinit:77> case -i (-D)
+compinit:77> case -i (-i)
+compinit:91> _i_fail=ign 
+compinit:92> shift
+compinit:76> [[ 2 -gt 0 && -d = -[dDiuC] ]]
+compinit:77> case -d (-d)
+compinit:79> _i_autodump=1 
+compinit:80> shift
+compinit:81> [[ 1 -gt 0 && /root/.zcompdump-localhost-5.4.1 != -[dfQC] ]]
+compinit:82> _i_dumpfile=/root/.zcompdump-localhost-5.4.1 
+compinit:83> shift
+compinit:76> [[ 0 -gt 0 ]]
+compinit:108> typeset -gHA _comps _services _patcomps _postpatcomps
+compinit:113> typeset -gHA _compautos
+compinit:118> typeset -gHA _lastcomp
+compinit:121> [[ -n /root/.zcompdump-localhost-5.4.1 ]]
+compinit:123> typeset -g _comp_dumpfile=/root/.zcompdump-localhost-5.4.1
+compinit:130> typeset -gHa _comp_options
+compinit:131> _comp_options=( bareglobqual extendedglob glob multibyte multifuncdef nullglob rcexpandparam unset NO_allexport NO_aliases NO_cshnullglob NO_cshjunkiequotes NO_errexit NO_errreturn NO_globassign NO_globsubst NO_histsubstpattern NO_ignorebraces NO_ignoreclosebraces NO_kshglob NO_ksharrays NO_kshtypeset NO_markdirs NO_octalzeroes NO_posixbuiltins NO_posixidentifiers NO_shwordsplit NO_shglob NO_warnnestedvar NO_warncreateglobal ) 
+compinit:170> typeset -gH _comp_setup=$'local -A _comp_caller_options;\n             _comp_caller_options=(${(kv)options[@]});\n             setopt localoptions localtraps localpatterns ${_comp_options[@]};\n             local IFS=$\' \\t\\r\\n\\0\';\n             builtin enable -p \\| \\~ \\( \\? \\* \\[ \\< \\^ \\# 2>&-;\n             exec </dev/null;\n             trap - ZERR;\n             local -a reply;\n             local REPLY'
+compinit:183> typeset -ga compprefuncs comppostfuncs
+compinit:184> compprefuncs=( ) 
+compinit:185> comppostfuncs=( ) 
+compinit:189> : compinit /root/.oh-my-zsh/oh-my-zsh.sh /root/.zshrc
+compinit:438> typeset _i_wdirs _i_wfiles
+compinit:440> _i_wdirs=( ) 
+compinit:441> _i_wfiles=( ) 
+compinit:443> autoload -Uz compaudit
+compinit:444> [[ -n yes ]]
+compinit:445> typeset _i_q
+compinit:446> eval compaudit
+(eval):1> compaudit
+compaudit:176> compaudit
+compaudit:13> emulate -L zsh
+compaudit:14> setopt extendedglob
+compaudit:16> [[ -n /usr/bin/getent ]]
+compaudit:27> ((  0  ))
+compaudit:29> ((  9 == 0  ))
+compaudit:33> set -- /root/.oh-my-zsh/plugins/git /root/.oh-my-zsh/functions /root/.oh-my-zsh/completions /root/.oh-my-zsh/plugins/git /root/.oh-my-zsh/functions /root/.oh-my-zsh/completions /usr/local/share/zsh/site-functions /usr/share/zsh/site-functions /usr/share/zsh/5.4.1/functions
+compaudit:40> ((  1  ))
+compaudit:46> fpath=( /root/.oh-my-zsh/plugins/git /root/.oh-my-zsh/functions /root/.oh-my-zsh/completions /root/.oh-my-zsh/plugins/git /root/.oh-my-zsh/functions /root/.oh-my-zsh/completions /usr/local/share/zsh/site-functions /usr/share/zsh/site-functions /usr/share/zsh/5.4.1/functions ) 
+compaudit:51> ((  0  ))
+compaudit:52> local _compdir=/usr/share/zsh/5.4.1/functions
+compaudit:53> [[ -z /usr/share/zsh/5.4.1/functions ]]
+compaudit:57> _i_wdirs=( ) 
+compaudit:58> _i_wfiles=( ) 
+compaudit:60> _i_files=( /usr/share/zsh/site-functions/_bootctl /usr/share/zsh/site-functions/_busctl /usr/share/zsh/site-functions/_coredumpctl /usr/share/zsh/site-functions/_curl /usr/share/zsh/site-functions/_hostnamectl /usr/share/zsh/site-functions/_journalctl /usr/share/zsh/site-functions/_kernel-install /usr/share/zsh/site-functions/_localectl /usr/share/zsh/site-functions/_loginctl /usr/share/zsh/site-functions/_machinectl /usr/share/zsh/site-functions/_networkctl /usr/share/zsh/site-functions/_pulseaudio /usr/share/zsh/site-functions/_sd_hosts_or_user_at_host /usr/share/zsh/site-functions/_sd_machines /usr/share/zsh/site-functions/_sd_outputmodes /usr/share/zsh/site-functions/_sd_unit_files /usr/share/zsh/site-functions/_systemctl /usr/share/zsh/site-functions/_systemd /usr/share/zsh/site-functions/_systemd-analyze /usr/share/zsh/site-functions/_systemd-delta /usr/share/zsh/site-functions/_systemd-inhibit /usr/share/zsh/site-functions/_systemd-nspawn /usr/share/zsh/site-functions/_systemd-resolve /usr/share/zsh/site-functions/_systemd-run /usr/share/zsh/site-functions/_systemd-tmpfiles /usr/share/zsh/site-functions/_the_silver_searcher /usr/share/zsh/site-functions/_timedatectl /usr/share/zsh/site-functions/_udevadm /usr/share/zsh/5.4.1/functions/_a2ps /usr/share/zsh/5.4.1/functions/_a2utils /usr/share/zsh/5.4.1/functions/_aap /usr/share/zsh/5.4.1/functions/_absolute_command_paths /usr/share/zsh/5.4.1/functions/_acpi /usr/share/zsh/5.4.1/functions/_acpitool /usr/share/zsh/5.4.1/functions/_acroread /usr/share/zsh/5.4.1/functions/_adb /usr/share/zsh/5.4.1/functions/_add-zle-hook-widget /usr/share/zsh/5.4.1/functions/_add-zsh-hook /usr/share/zsh/5.4.1/functions/_alias /usr/share/zsh/5.4.1/functions/_aliases /usr/share/zsh/5.4.1/functions/_all_labels /usr/share/zsh/5.4.1/functions/_all_matches /usr/share/zsh/5.4.1/functions/_alternative /usr/share/zsh/5.4.1/functions/_analyseplugin /usr/share/zsh/5.4.1/functions/_ant /usr/share/zsh/5.4.1/functions/_antiword /usr/share/zsh/5.4.1/functions/_apachectl /usr/share/zsh/5.4.1/functions/_apm /usr/share/zsh/5.4.1/functions/_approximate /usr/share/zsh/5.4.1/functions/_apt /usr/share/zsh/5.4.1/functions/_apt-file /usr/share/zsh/5.4.1/functions/_aptitude /usr/share/zsh/5.4.1/functions/_apt-move /usr/share/zsh/5.4.1/functions/_apt-show-versions /usr/share/zsh/5.4.1/functions/_arch_archives /usr/share/zsh/5.4.1/functions/_arch_namespace /usr/share/zsh/5.4.1/functions/_arg_compile /usr/share/zsh/5.4.1/functions/_arguments /usr/share/zsh/5.4.1/functions/_arp /usr/share/zsh/5.4.1/functions/_arping /usr/share/zsh/5.4.1/functions/_arrays /usr/share/zsh/5.4.1/functions/_assign /usr/share/zsh/5.4.1/functions/_at /usr/share/zsh/5.4.1/functions/_attr /usr/share/zsh/5.4.1/functions/_augeas /usr/share/zsh/5.4.1/functions/_auto-apt /usr/share/zsh/5.4.1/functions/_autocd /usr/share/zsh/5.4.1/functions/_awk /usr/share/zsh/5.4.1/functions/_axi-cache /usr/share/zsh/5.4.1/functions/_basename /usr/share/zsh/5.4.1/functions/_bash_completions /usr/share/zsh/5.4.1/functions/_baudrates /usr/share/zsh/5.4.1/functions/_baz /usr/share/zsh/5.4.1/functions/_beadm /usr/share/zsh/5.4.1/functions/_beep /usr/share/zsh/5.4.1/functions/_be_name /usr/share/zsh/5.4.1/functions/_bibtex /usr/share/zsh/5.4.1/functions/_bind_addresses /usr/share/zsh/5.4.1/functions/_bindkey /usr/share/zsh/5.4.1/functions/_bison /usr/share/zsh/5.4.1/functions/_bittorrent /usr/share/zsh/5.4.1/functions/_bogofilter /usr/share/zsh/5.4.1/functions/_bpython /usr/share/zsh/5.4.1/functions/_brace_parameter /usr/share/zsh/5.4.1/functions/_brctl /usr/share/zsh/5.4.1/functions/_bsdconfig /usr/share/zsh/5.4.1/functions/_bsdinstall /usr/share/zsh/5.4.1/functions/_bsd_pkg /usr/share/zsh/5.4.1/functions/_btrfs /usr/share/zsh/5.4.1/functions/_bts /usr/share/zsh/5.4.1/functions/_bug /usr/share/zsh/5.4.1/functions/_builtin /usr/share/zsh/5.4.1/functions/_bzip2 /usr/share/zsh/5.4.1/functions/_bzr /usr/share/zsh/5.4.1/functions/_cabal /usr/share/zsh/5.4.1/functions/_cache_invalid /usr/share/zsh/5.4.1/functions/_cal /usr/share/zsh/5.4.1/functions/_calendar /usr/share/zsh/5.4.1/functions/_call_function /usr/share/zsh/5.4.1/functions/_call_program /usr/share/zsh/5.4.1/functions/_canonical_paths /usr/share/zsh/5.4.1/functions/_cat /usr/share/zsh/5.4.1/functions/_ccal /usr/share/zsh/5.4.1/functions/_cd /usr/share/zsh/5.4.1/functions/_cdbs-edit-patch /usr/share/zsh/5.4.1/functions/_cdcd /usr/share/zsh/5.4.1/functions/_cdr /usr/share/zsh/5.4.1/functions/_cdrdao /usr/share/zsh/5.4.1/functions/_cdrecord /usr/share/zsh/5.4.1/functions/_chflags /usr/share/zsh/5.4.1/functions/_chkconfig /usr/share/zsh/5.4.1/functions/_chmod /usr/share/zsh/5.4.1/functions/_chown /usr/share/zsh/5.4.1/functions/_chrt /usr/share/zsh/5.4.1/functions/_chsh /usr/share/zsh/5.4.1/functions/_clay /usr/share/zsh/5.4.1/functions/_cmdambivalent /usr/share/zsh/5.4.1/functions/_cmdstring /usr/share/zsh/5.4.1/functions/_cmp /usr/share/zsh/5.4.1/functions/_combination /usr/share/zsh/5.4.1/functions/_comm /usr/share/zsh/5.4.1/functions/_command /usr/share/zsh/5.4.1/functions/_command_names /usr/share/zsh/5.4.1/functions/_compadd /usr/share/zsh/5.4.1/functions/_compdef /usr/share/zsh/5.4.1/functions/_complete /usr/share/zsh/5.4.1/functions/_complete_debug /usr/share/zsh/5.4.1/functions/_complete_help /usr/share/zsh/5.4.1/functions/_complete_help_generic /usr/share/zsh/5.4.1/functions/_completers /usr/share/zsh/5.4.1/functions/_complete_tag /usr/share/zsh/5.4.1/functions/_comp_locale /usr/share/zsh/5.4.1/functions/_compress /usr/share/zsh/5.4.1/functions/_condition /usr/share/zsh/5.4.1/functions/_configure /usr/share/zsh/5.4.1/functions/_coreadm /usr/share/zsh/5.4.1/functions/_correct /usr/share/zsh/5.4.1/functions/_correct_filename /usr/share/zsh/5.4.1/functions/_correct_word /usr/share/zsh/5.4.1/functions/_cowsay /usr/share/zsh/5.4.1/functions/_cp /usr/share/zsh/5.4.1/functions/_cpio /usr/share/zsh/5.4.1/functions/_cplay /usr/share/zsh/5.4.1/functions/_cpupower /usr/share/zsh/5.4.1/functions/_cryptsetup /usr/share/zsh/5.4.1/functions/_cscope /usr/share/zsh/5.4.1/functions/_cssh /usr/share/zsh/5.4.1/functions/_csup /usr/share/zsh/5.4.1/functions/_ctags_tags /usr/share/zsh/5.4.1/functions/_cu /usr/share/zsh/5.4.1/functions/_curl /usr/share/zsh/5.4.1/functions/_cut /usr/share/zsh/5.4.1/functions/_cvs /usr/share/zsh/5.4.1/functions/_cvsup /usr/share/zsh/5.4.1/functions/_cygcheck /usr/share/zsh/5.4.1/functions/_cygpath /usr/share/zsh/5.4.1/functions/_cygrunsrv /usr/share/zsh/5.4.1/functions/_cygserver /usr/share/zsh/5.4.1/functions/_cygstart /usr/share/zsh/5.4.1/functions/_dak /usr/share/zsh/5.4.1/functions/_darcs /usr/share/zsh/5.4.1/functions/_date /usr/share/zsh/5.4.1/functions/_date_formats /usr/share/zsh/5.4.1/functions/_dates /usr/share/zsh/5.4.1/functions/_dbus /usr/share/zsh/5.4.1/functions/_dchroot /usr/share/zsh/5.4.1/functions/_dchroot-dsa /usr/share/zsh/5.4.1/functions/_dcop /usr/share/zsh/5.4.1/functions/_dcut /usr/share/zsh/5.4.1/functions/_dd /usr/share/zsh/5.4.1/functions/_deb_architectures /usr/share/zsh/5.4.1/functions/_debbugs_bugnumber /usr/share/zsh/5.4.1/functions/_debchange /usr/share/zsh/5.4.1/functions/_debcheckout /usr/share/zsh/5.4.1/functions/_deb_codenames /usr/share/zsh/5.4.1/functions/_debdiff /usr/share/zsh/5.4.1/functions/_debfoster /usr/share/zsh/5.4.1/functions/_deb_packages /usr/share/zsh/5.4.1/functions/_debsign /usr/share/zsh/5.4.1/functions/_default /usr/share/zsh/5.4.1/functions/_defaults /usr/share/zsh/5.4.1/functions/_delimiters /usr/share/zsh/5.4.1/functions/_describe /usr/share/zsh/5.4.1/functions/_description /usr/share/zsh/5.4.1/functions/_devtodo /usr/share/zsh/5.4.1/functions/_df /usr/share/zsh/5.4.1/functions/_dhclient /usr/share/zsh/5.4.1/functions/_dhcpinfo /usr/share/zsh/5.4.1/functions/_dict /usr/share/zsh/5.4.1/functions/_dict_words /usr/share/zsh/5.4.1/functions/_diff /usr/share/zsh/5.4.1/functions/_diff_options /usr/share/zsh/5.4.1/functions/_diffstat /usr/share/zsh/5.4.1/functions/_dig /usr/share/zsh/5.4.1/functions/_directories /usr/share/zsh/5.4.1/functions/_directory_stack /usr/share/zsh/5.4.1/functions/_dir_list /usr/share/zsh/5.4.1/functions/_dirs /usr/share/zsh/5.4.1/functions/_disable /usr/share/zsh/5.4.1/functions/_dispatch /usr/share/zsh/5.4.1/functions/_django /usr/share/zsh/5.4.1/functions/_dladm /usr/share/zsh/5.4.1/functions/_dlocate /usr/share/zsh/5.4.1/functions/_dmesg /usr/share/zsh/5.4.1/functions/_dmidecode /usr/share/zsh/5.4.1/functions/_dnf /usr/share/zsh/5.4.1/functions/_doas /usr/share/zsh/5.4.1/functions/_domains /usr/share/zsh/5.4.1/functions/_dpatch-edit-patch /usr/share/zsh/5.4.1/functions/_dpkg /usr/share/zsh/5.4.1/functions/_dpkg-buildpackage /usr/share/zsh/5.4.1/functions/_dpkg-cross /usr/share/zsh/5.4.1/functions/_dpkg-repack /usr/share/zsh/5.4.1/functions/_dpkg_source /usr/share/zsh/5.4.1/functions/_dput /usr/share/zsh/5.4.1/functions/_dsh /usr/share/zsh/5.4.1/functions/_dtrace /usr/share/zsh/5.4.1/functions/_du /usr/share/zsh/5.4.1/functions/_dumpadm /usr/share/zsh/5.4.1/functions/_dumper /usr/share/zsh/5.4.1/functions/_dupload /usr/share/zsh/5.4.1/functions/_dvi /usr/share/zsh/5.4.1/functions/_dynamic_directory_name /usr/share/zsh/5.4.1/functions/_ecasound /usr/share/zsh/5.4.1/functions/_echotc /usr/share/zsh/5.4.1/functions/_echoti /usr/share/zsh/5.4.1/functions/_elfdump /usr/share/zsh/5.4.1/functions/_elinks /usr/share/zsh/5.4.1/functions/_elm /usr/share/zsh/5.4.1/functions/_email_addresses /usr/share/zsh/5.4.1/functions/_emulate /usr/share/zsh/5.4.1/functions/_enable /usr/share/zsh/5.4.1/functions/_enscript /usr/share/zsh/5.4.1/functions/_entr /usr/share/zsh/5.4.1/functions/_env /usr/share/zsh/5.4.1/functions/_equal /usr/share/zsh/5.4.1/functions/_espeak /usr/share/zsh/5.4.1/functions/_etags /usr/share/zsh/5.4.1/functions/_ethtool /usr/share/zsh/5.4.1/functions/_evince /usr/share/zsh/5.4.1/functions/_expand /usr/share/zsh/5.4.1/functions/_expand_alias /usr/share/zsh/5.4.1/functions/_expand_word /usr/share/zsh/5.4.1/functions/_extensions /usr/share/zsh/5.4.1/functions/_external_pwds /usr/share/zsh/5.4.1/functions/_fakeroot /usr/share/zsh/5.4.1/functions/_fc /usr/share/zsh/5.4.1/functions/_feh /usr/share/zsh/5.4.1/functions/_fetch /usr/share/zsh/5.4.1/functions/_fetchmail /usr/share/zsh/5.4.1/functions/_ffmpeg /usr/share/zsh/5.4.1/functions/_figlet /usr/share/zsh/5.4.1/functions/_file_descriptors /usr/share/zsh/5.4.1/functions/_files /usr/share/zsh/5.4.1/functions/_file_systems /usr/share/zsh/5.4.1/functions/_find /usr/share/zsh/5.4.1/functions/_find_net_interfaces /usr/share/zsh/5.4.1/functions/_finger /usr/share/zsh/5.4.1/functions/_fink /usr/share/zsh/5.4.1/functions/_first /usr/share/zsh/5.4.1/functions/_flasher /usr/share/zsh/5.4.1/functions/_flex /usr/share/zsh/5.4.1/functions/_floppy /usr/share/zsh/5.4.1/functions/_flowadm /usr/share/zsh/5.4.1/functions/_fmadm /usr/share/zsh/5.4.1/functions/_fmt /usr/share/zsh/5.4.1/functions/_fortune /usr/share/zsh/5.4.1/functions/_freebsd-update /usr/share/zsh/5.4.1/functions/_fsh /usr/share/zsh/5.4.1/functions/_fstat /usr/share/zsh/5.4.1/functions/_functions /usr/share/zsh/5.4.1/functions/_fuse_arguments /usr/share/zsh/5.4.1/functions/_fuser /usr/share/zsh/5.4.1/functions/_fusermount /usr/share/zsh/5.4.1/functions/_fuse_values /usr/share/zsh/5.4.1/functions/_fw_update /usr/share/zsh/5.4.1/functions/_gcc /usr/share/zsh/5.4.1/functions/_gcore /usr/share/zsh/5.4.1/functions/_gdb /usr/share/zsh/5.4.1/functions/_generic /usr/share/zsh/5.4.1/functions/_genisoimage /usr/share/zsh/5.4.1/functions/_getclip /usr/share/zsh/5.4.1/functions/_getconf /usr/share/zsh/5.4.1/functions/_getent /usr/share/zsh/5.4.1/functions/_getfacl /usr/share/zsh/5.4.1/functions/_getmail /usr/share/zsh/5.4.1/functions/_git /usr/share/zsh/5.4.1/functions/_git-buildpackage /usr/share/zsh/5.4.1/functions/_global /usr/share/zsh/5.4.1/functions/_global_tags /usr/share/zsh/5.4.1/functions/_globflags /usr/share/zsh/5.4.1/functions/_globqual_delims /usr/share/zsh/5.4.1/functions/_globquals /usr/share/zsh/5.4.1/functions/_gnome-gv /usr/share/zsh/5.4.1/functions/_gnu_generic /usr/share/zsh/5.4.1/functions/_gnupod /usr/share/zsh/5.4.1/functions/_gnutls /usr/share/zsh/5.4.1/functions/_go /usr/share/zsh/5.4.1/functions/_gpasswd /usr/share/zsh/5.4.1/functions/_gpg /usr/share/zsh/5.4.1/functions/_gphoto2 /usr/share/zsh/5.4.1/functions/_gprof /usr/share/zsh/5.4.1/functions/_gqview /usr/share/zsh/5.4.1/functions/_gradle /usr/share/zsh/5.4.1/functions/_graphicsmagick /usr/share/zsh/5.4.1/functions/_grep /usr/share/zsh/5.4.1/functions/_grep-excuses /usr/share/zsh/5.4.1/functions/_groff /usr/share/zsh/5.4.1/functions/_groups /usr/share/zsh/5.4.1/functions/_growisofs /usr/share/zsh/5.4.1/functions/_gs /usr/share/zsh/5.4.1/functions/_gsettings /usr/share/zsh/5.4.1/functions/_gstat /usr/share/zsh/5.4.1/functions/_guard /usr/share/zsh/5.4.1/functions/_guilt /usr/share/zsh/5.4.1/functions/_gv /usr/share/zsh/5.4.1/functions/_gzip /usr/share/zsh/5.4.1/functions/_hash /usr/share/zsh/5.4.1/functions/_have_glob_qual /usr/share/zsh/5.4.1/functions/_hdiutil /usr/share/zsh/5.4.1/functions/_head /usr/share/zsh/5.4.1/functions/_hg /usr/share/zsh/5.4.1/functions/_history /usr/share/zsh/5.4.1/functions/_history_complete_word /usr/share/zsh/5.4.1/functions/_history_modifiers /usr/share/zsh/5.4.1/functions/_hosts /usr/share/zsh/5.4.1/functions/_htop /usr/share/zsh/5.4.1/functions/_hwinfo /usr/share/zsh/5.4.1/functions/_iconv /usr/share/zsh/5.4.1/functions/_iconvconfig /usr/share/zsh/5.4.1/functions/_id /usr/share/zsh/5.4.1/functions/_ifconfig /usr/share/zsh/5.4.1/functions/_iftop /usr/share/zsh/5.4.1/functions/_ignored /usr/share/zsh/5.4.1/functions/_imagemagick /usr/share/zsh/5.4.1/functions/_inetadm /usr/share/zsh/5.4.1/functions/_initctl /usr/share/zsh/5.4.1/functions/_init_d /usr/share/zsh/5.4.1/functions/_in_vared /usr/share/zsh/5.4.1/functions/_invoke-rc.d /usr/share/zsh/5.4.1/functions/_ionice /usr/share/zsh/5.4.1/functions/_iostat /usr/share/zsh/5.4.1/functions/_ip /usr/share/zsh/5.4.1/functions/_ipadm /usr/share/zsh/5.4.1/functions/_ipset /usr/share/zsh/5.4.1/functions/_iptables /usr/share/zsh/5.4.1/functions/_irssi /usr/share/zsh/5.4.1/functions/_ispell /usr/share/zsh/5.4.1/functions/_iwconfig /usr/share/zsh/5.4.1/functions/_jails /usr/share/zsh/5.4.1/functions/_java /usr/share/zsh/5.4.1/functions/_java_class /usr/share/zsh/5.4.1/functions/_jexec /usr/share/zsh/5.4.1/functions/_jls /usr/share/zsh/5.4.1/functions/_jobs /usr/share/zsh/5.4.1/functions/_jobs_bg /usr/share/zsh/5.4.1/functions/_jobs_builtin /usr/share/zsh/5.4.1/functions/_jobs_fg /usr/share/zsh/5.4.1/functions/_joe /usr/share/zsh/5.4.1/functions/_join /usr/share/zsh/5.4.1/functions/_jot /usr/share/zsh/5.4.1/functions/_kfmclient /usr/share/zsh/5.4.1/functions/_kill /usr/share/zsh/5.4.1/functions/_killall /usr/share/zsh/5.4.1/functions/_kld /usr/share/zsh/5.4.1/functions/_knock /usr/share/zsh/5.4.1/functions/_kpartx /usr/share/zsh/5.4.1/functions/_kvno /usr/share/zsh/5.4.1/functions/_last /usr/share/zsh/5.4.1/functions/_ldd /usr/share/zsh/5.4.1/functions/_ld_debug /usr/share/zsh/5.4.1/functions/_less /usr/share/zsh/5.4.1/functions/_lha /usr/share/zsh/5.4.1/functions/_libvirt /usr/share/zsh/5.4.1/functions/_lighttpd /usr/share/zsh/5.4.1/functions/_limit /usr/share/zsh/5.4.1/functions/_limits /usr/share/zsh/5.4.1/functions/_links /usr/share/zsh/5.4.1/functions/_lintian /usr/share/zsh/5.4.1/functions/_list /usr/share/zsh/5.4.1/functions/_list_files /usr/share/zsh/5.4.1/functions/_lldb /usr/share/zsh/5.4.1/functions/_ln /usr/share/zsh/5.4.1/functions/_loadkeys /usr/share/zsh/5.4.1/functions/_locale /usr/share/zsh/5.4.1/functions/_localedef /usr/share/zsh/5.4.1/functions/_locales /usr/share/zsh/5.4.1/functions/_locate /usr/share/zsh/5.4.1/functions/_logical_volumes /usr/share/zsh/5.4.1/functions/_look /usr/share/zsh/5.4.1/functions/_losetup /usr/share/zsh/5.4.1/functions/_lp /usr/share/zsh/5.4.1/functions/_ls /usr/share/zsh/5.4.1/functions/_lsblk /usr/share/zsh/5.4.1/functions/_lscfg /usr/share/zsh/5.4.1/functions/_lsdev /usr/share/zsh/5.4.1/functions/_lslv /usr/share/zsh/5.4.1/functions/_lsof /usr/share/zsh/5.4.1/functions/_lspv /usr/share/zsh/5.4.1/functions/_lsusb /usr/share/zsh/5.4.1/functions/_lsvg /usr/share/zsh/5.4.1/functions/_ltrace /usr/share/zsh/5.4.1/functions/_lynx /usr/share/zsh/5.4.1/functions/_lzop /usr/share/zsh/5.4.1/functions/_mac_applications /usr/share/zsh/5.4.1/functions/_mac_files_for_application /usr/share/zsh/5.4.1/functions/_madison /usr/share/zsh/5.4.1/functions/_mail /usr/share/zsh/5.4.1/functions/_mailboxes /usr/share/zsh/5.4.1/functions/_main_complete /usr/share/zsh/5.4.1/functions/_make /usr/share/zsh/5.4.1/functions/_make-kpkg /usr/share/zsh/5.4.1/functions/_man /usr/share/zsh/5.4.1/functions/_match /usr/share/zsh/5.4.1/functions/_math /usr/share/zsh/5.4.1/functions/_math_params /usr/share/zsh/5.4.1/functions/_matlab /usr/share/zsh/5.4.1/functions/_md5sum /usr/share/zsh/5.4.1/functions/_mdadm /usr/share/zsh/5.4.1/functions/_members /usr/share/zsh/5.4.1/functions/_mencal /usr/share/zsh/5.4.1/functions/_menu /usr/share/zsh/5.4.1/functions/_mere /usr/share/zsh/5.4.1/functions/_mergechanges /usr/share/zsh/5.4.1/functions/_message /usr/share/zsh/5.4.1/functions/_metaflac /usr/share/zsh/5.4.1/functions/_mh /usr/share/zsh/5.4.1/functions/_mii-tool /usr/share/zsh/5.4.1/functions/_mime_types /usr/share/zsh/5.4.1/functions/_mixerctl /usr/share/zsh/5.4.1/functions/_mkdir /usr/share/zsh/5.4.1/functions/_mkshortcut /usr/share/zsh/5.4.1/functions/_mkzsh /usr/share/zsh/5.4.1/functions/_module /usr/share/zsh/5.4.1/functions/_module-assistant /usr/share/zsh/5.4.1/functions/_module_math_func /usr/share/zsh/5.4.1/functions/_modutils /usr/share/zsh/5.4.1/functions/_mondo /usr/share/zsh/5.4.1/functions/_monotone /usr/share/zsh/5.4.1/functions/_moosic /usr/share/zsh/5.4.1/functions/_mosh /usr/share/zsh/5.4.1/functions/_most_recent_file /usr/share/zsh/5.4.1/functions/_mount /usr/share/zsh/5.4.1/functions/_mozilla /usr/share/zsh/5.4.1/functions/_mpc /usr/share/zsh/5.4.1/functions/_mplayer /usr/share/zsh/5.4.1/functions/_mt /usr/share/zsh/5.4.1/functions/_mtools /usr/share/zsh/5.4.1/functions/_mtr /usr/share/zsh/5.4.1/functions/_multi_parts /usr/share/zsh/5.4.1/functions/_mutt /usr/share/zsh/5.4.1/functions/_my_accounts /usr/share/zsh/5.4.1/functions/_mysqldiff /usr/share/zsh/5.4.1/functions/_mysql_utils /usr/share/zsh/5.4.1/functions/_nautilus /usr/share/zsh/5.4.1/functions/_ncftp /usr/share/zsh/5.4.1/functions/_nedit /usr/share/zsh/5.4.1/functions/_netcat /usr/share/zsh/5.4.1/functions/_net_interfaces /usr/share/zsh/5.4.1/functions/_netscape /usr/share/zsh/5.4.1/functions/_netstat /usr/share/zsh/5.4.1/functions/_newsgroups /usr/share/zsh/5.4.1/functions/_next_label /usr/share/zsh/5.4.1/functions/_next_tags /usr/share/zsh/5.4.1/functions/_nice /usr/share/zsh/5.4.1/functions/_nkf /usr/share/zsh/5.4.1/functions/_nl /usr/share/zsh/5.4.1/functions/_nm /usr/share/zsh/5.4.1/functions/_nmap /usr/share/zsh/5.4.1/functions/_nmcli /usr/share/zsh/5.4.1/functions/_normal /usr/share/zsh/5.4.1/functions/_nothing /usr/share/zsh/5.4.1/functions/_notmuch /usr/share/zsh/5.4.1/functions/_npm /usr/share/zsh/5.4.1/functions/_nslookup /usr/share/zsh/5.4.1/functions/_objdump /usr/share/zsh/5.4.1/functions/_object_classes /usr/share/zsh/5.4.1/functions/_object_files /usr/share/zsh/5.4.1/functions/_od /usr/share/zsh/5.4.1/functions/_okular /usr/share/zsh/5.4.1/functions/_oldlist /usr/share/zsh/5.4.1/functions/_open /usr/share/zsh/5.4.1/functions/_openstack /usr/share/zsh/5.4.1/functions/_options /usr/share/zsh/5.4.1/functions/_options_set /usr/share/zsh/5.4.1/functions/_options_unset /usr/share/zsh/5.4.1/functions/_osc /usr/share/zsh/5.4.1/functions/_other_accounts /usr/share/zsh/5.4.1/functions/_pack /usr/share/zsh/5.4.1/functions/_parameter /usr/share/zsh/5.4.1/functions/_parameters /usr/share/zsh/5.4.1/functions/_paste /usr/share/zsh/5.4.1/functions/_patch /usr/share/zsh/5.4.1/functions/_patchutils /usr/share/zsh/5.4.1/functions/_path_commands /usr/share/zsh/5.4.1/functions/_path_files /usr/share/zsh/5.4.1/functions/_pax /usr/share/zsh/5.4.1/functions/_pbm /usr/share/zsh/5.4.1/functions/_pbuilder /usr/share/zsh/5.4.1/functions/_pdf /usr/share/zsh/5.4.1/functions/_pdftk /usr/share/zsh/5.4.1/functions/_perforce /usr/share/zsh/5.4.1/functions/_perl /usr/share/zsh/5.4.1/functions/_perl_basepods /usr/share/zsh/5.4.1/functions/_perldoc /usr/share/zsh/5.4.1/functions/_perl_modules /usr/share/zsh/5.4.1/functions/_pfctl /usr/share/zsh/5.4.1/functions/_pfexec /usr/share/zsh/5.4.1/functions/_pgrep /usr/share/zsh/5.4.1/functions/_php /usr/share/zsh/5.4.1/functions/_physical_volumes /usr/share/zsh/5.4.1/functions/_pick_variant /usr/share/zsh/5.4.1/functions/_picocom /usr/share/zsh/5.4.1/functions/_pidof /usr/share/zsh/5.4.1/functions/_pids /usr/share/zsh/5.4.1/functions/_pine /usr/share/zsh/5.4.1/functions/_ping /usr/share/zsh/5.4.1/functions/_piuparts /usr/share/zsh/5.4.1/functions/_pkg5 /usr/share/zsh/5.4.1/functions/_pkgadd /usr/share/zsh/5.4.1/functions/_pkg-config /usr/share/zsh/5.4.1/functions/_pkginfo /usr/share/zsh/5.4.1/functions/_pkg_instance /usr/share/zsh/5.4.1/functions/_pkgrm /usr/share/zsh/5.4.1/functions/_pkgtool /usr/share/zsh/5.4.1/functions/_pon /usr/share/zsh/5.4.1/functions/_portaudit /usr/share/zsh/5.4.1/functions/_portlint /usr/share/zsh/5.4.1/functions/_portmaster /usr/share/zsh/5.4.1/functions/_ports /usr/share/zsh/5.4.1/functions/_portsnap /usr/share/zsh/5.4.1/functions/_postfix /usr/share/zsh/5.4.1/functions/_postscript /usr/share/zsh/5.4.1/functions/_powerd /usr/share/zsh/5.4.1/functions/_prcs /usr/share/zsh/5.4.1/functions/_precommand /usr/share/zsh/5.4.1/functions/_prefix /usr/share/zsh/5.4.1/functions/_print /usr/share/zsh/5.4.1/functions/_printenv /usr/share/zsh/5.4.1/functions/_printers /usr/share/zsh/5.4.1/functions/_procstat /usr/share/zsh/5.4.1/functions/_prompt /usr/share/zsh/5.4.1/functions/_prove /usr/share/zsh/5.4.1/functions/_prstat /usr/share/zsh/5.4.1/functions/_ps /usr/share/zsh/5.4.1/functions/_ps1234 /usr/share/zsh/5.4.1/functions/_pscp /usr/share/zsh/5.4.1/functions/_pspdf /usr/share/zsh/5.4.1/functions/_psutils /usr/share/zsh/5.4.1/functions/_ptree /usr/share/zsh/5.4.1/functions/_pump /usr/share/zsh/5.4.1/functions/_putclip /usr/share/zsh/5.4.1/functions/_pydoc /usr/share/zsh/5.4.1/functions/_python /usr/share/zsh/5.4.1/functions/_python_modules /usr/share/zsh/5.4.1/functions/_qdbus /usr/share/zsh/5.4.1/functions/_qemu /usr/share/zsh/5.4.1/functions/_qiv /usr/share/zsh/5.4.1/functions/_qtplay /usr/share/zsh/5.4.1/functions/_quilt /usr/share/zsh/5.4.1/functions/_raggle /usr/share/zsh/5.4.1/functions/_rake /usr/share/zsh/5.4.1/functions/_ranlib /usr/share/zsh/5.4.1/functions/_rar /usr/share/zsh/5.4.1/functions/_rcctl /usr/share/zsh/5.4.1/functions/_rcs /usr/share/zsh/5.4.1/functions/_rdesktop /usr/share/zsh/5.4.1/functions/_read /usr/share/zsh/5.4.1/functions/_read_comp /usr/share/zsh/5.4.1/functions/_readelf /usr/share/zsh/5.4.1/functions/_readshortcut /usr/share/zsh/5.4.1/functions/_rebootin /usr/share/zsh/5.4.1/functions/_redirect /usr/share/zsh/5.4.1/functions/_regex_arguments /usr/share/zsh/5.4.1/functions/_regex_words /usr/share/zsh/5.4.1/functions/_remote_files /usr/share/zsh/5.4.1/functions/_renice /usr/share/zsh/5.4.1/functions/_reprepro /usr/share/zsh/5.4.1/functions/_requested /usr/share/zsh/5.4.1/functions/_retrieve_cache /usr/share/zsh/5.4.1/functions/_retrieve_mac_apps /usr/share/zsh/5.4.1/functions/_ri /usr/share/zsh/5.4.1/functions/_rlogin /usr/share/zsh/5.4.1/functions/_rm /usr/share/zsh/5.4.1/functions/_rpm /usr/share/zsh/5.4.1/functions/_rpmbuild /usr/share/zsh/5.4.1/functions/_rrdtool /usr/share/zsh/5.4.1/functions/_rsync /usr/share/zsh/5.4.1/functions/_rubber /usr/share/zsh/5.4.1/functions/_ruby /usr/share/zsh/5.4.1/functions/_run-help /usr/share/zsh/5.4.1/functions/_runit /usr/share/zsh/5.4.1/functions/_sablotron /usr/share/zsh/5.4.1/functions/_samba /usr/share/zsh/5.4.1/functions/_savecore /usr/share/zsh/5.4.1/functions/_sccs /usr/share/zsh/5.4.1/functions/_sched /usr/share/zsh/5.4.1/functions/_schedtool /usr/share/zsh/5.4.1/functions/_schroot /usr/share/zsh/5.4.1/functions/_scl /usr/share/zsh/5.4.1/functions/_screen /usr/share/zsh/5.4.1/functions/_script /usr/share/zsh/5.4.1/functions/_sed /usr/share/zsh/5.4.1/functions/_sep_parts /usr/share/zsh/5.4.1/functions/_sequence /usr/share/zsh/5.4.1/functions/_service /usr/share/zsh/5.4.1/functions/_services /usr/share/zsh/5.4.1/functions/_set /usr/share/zsh/5.4.1/functions/_set_command /usr/share/zsh/5.4.1/functions/_setfacl /usr/share/zsh/5.4.1/functions/_setopt /usr/share/zsh/5.4.1/functions/_setup /usr/share/zsh/5.4.1/functions/_setxkbmap /usr/share/zsh/5.4.1/functions/_sh /usr/share/zsh/5.4.1/functions/_showmount /usr/share/zsh/5.4.1/functions/_signals /usr/share/zsh/5.4.1/functions/_sisu /usr/share/zsh/5.4.1/functions/_slrn /usr/share/zsh/5.4.1/functions/_smit /usr/share/zsh/5.4.1/functions/_snoop /usr/share/zsh/5.4.1/functions/_socket /usr/share/zsh/5.4.1/functions/_sockstat /usr/share/zsh/5.4.1/functions/_softwareupdate /usr/share/zsh/5.4.1/functions/_sort /usr/share/zsh/5.4.1/functions/_source /usr/share/zsh/5.4.1/functions/_spamassassin /usr/share/zsh/5.4.1/functions/_sqlite /usr/share/zsh/5.4.1/functions/_sqsh /usr/share/zsh/5.4.1/functions/_ss /usr/share/zsh/5.4.1/functions/_ssh /usr/share/zsh/5.4.1/functions/_sshfs /usr/share/zsh/5.4.1/functions/_stat /usr/share/zsh/5.4.1/functions/_stgit /usr/share/zsh/5.4.1/functions/_store_cache /usr/share/zsh/5.4.1/functions/_strace /usr/share/zsh/5.4.1/functions/_strftime /usr/share/zsh/5.4.1/functions/_strip /usr/share/zsh/5.4.1/functions/_stty /usr/share/zsh/5.4.1/functions/_su /usr/share/zsh/5.4.1/functions/_sub_commands /usr/share/zsh/5.4.1/functions/_subscript /usr/share/zsh/5.4.1/functions/_subversion /usr/share/zsh/5.4.1/functions/_sudo /usr/share/zsh/5.4.1/functions/_suffix_alias_files /usr/share/zsh/5.4.1/functions/_surfraw /usr/share/zsh/5.4.1/functions/_SUSEconfig /usr/share/zsh/5.4.1/functions/_svcadm /usr/share/zsh/5.4.1/functions/_svccfg /usr/share/zsh/5.4.1/functions/_svcprop /usr/share/zsh/5.4.1/functions/_svcs /usr/share/zsh/5.4.1/functions/_svcs_fmri /usr/share/zsh/5.4.1/functions/_svn-buildpackage /usr/share/zsh/5.4.1/functions/_swaks /usr/share/zsh/5.4.1/functions/_swift /usr/share/zsh/5.4.1/functions/_sys_calls /usr/share/zsh/5.4.1/functions/_sysctl /usr/share/zsh/5.4.1/functions/_sysrc /usr/share/zsh/5.4.1/functions/_sysstat /usr/share/zsh/5.4.1/functions/_systat /usr/share/zsh/5.4.1/functions/_system_profiler /usr/share/zsh/5.4.1/functions/_tags /usr/share/zsh/5.4.1/functions/_tail /usr/share/zsh/5.4.1/functions/_tar /usr/share/zsh/5.4.1/functions/_tar_archive /usr/share/zsh/5.4.1/functions/_tardy /usr/share/zsh/5.4.1/functions/_tcpdump /usr/share/zsh/5.4.1/functions/_tcpsys /usr/share/zsh/5.4.1/functions/_tcptraceroute /usr/share/zsh/5.4.1/functions/_telnet /usr/share/zsh/5.4.1/functions/_terminals /usr/share/zsh/5.4.1/functions/_tex /usr/share/zsh/5.4.1/functions/_texi /usr/share/zsh/5.4.1/functions/_texinfo /usr/share/zsh/5.4.1/functions/_tidy /usr/share/zsh/5.4.1/functions/_tiff /usr/share/zsh/5.4.1/functions/_tilde /usr/share/zsh/5.4.1/functions/_tilde_files /usr/share/zsh/5.4.1/functions/_time_zone /usr/share/zsh/5.4.1/functions/_tin /usr/share/zsh/5.4.1/functions/_tla /usr/share/zsh/5.4.1/functions/_tmux /usr/share/zsh/5.4.1/functions/_todo.sh /usr/share/zsh/5.4.1/functions/_toilet /usr/share/zsh/5.4.1/functions/_toolchain-source /usr/share/zsh/5.4.1/functions/_top /usr/share/zsh/5.4.1/functions/_topgit /usr/share/zsh/5.4.1/functions/_totd /usr/share/zsh/5.4.1/functions/_touch /usr/share/zsh/5.4.1/functions/_tpb /usr/share/zsh/5.4.1/functions/_tpconfig /usr/share/zsh/5.4.1/functions/_tput /usr/share/zsh/5.4.1/functions/_tr /usr/share/zsh/5.4.1/functions/_tracepath /usr/share/zsh/5.4.1/functions/_trap /usr/share/zsh/5.4.1/functions/_tree /usr/share/zsh/5.4.1/functions/_truss /usr/share/zsh/5.4.1/functions/_ttyctl /usr/share/zsh/5.4.1/functions/_ttys /usr/share/zsh/5.4.1/functions/_tune2fs /usr/share/zsh/5.4.1/functions/_twidge /usr/share/zsh/5.4.1/functions/_twisted /usr/share/zsh/5.4.1/functions/_typeset /usr/share/zsh/5.4.1/functions/_ulimit /usr/share/zsh/5.4.1/functions/_uml /usr/share/zsh/5.4.1/functions/_umountable /usr/share/zsh/5.4.1/functions/_unace /usr/share/zsh/5.4.1/functions/_uname /usr/share/zsh/5.4.1/functions/_unexpand /usr/share/zsh/5.4.1/functions/_unhash /usr/share/zsh/5.4.1/functions/_uniq /usr/share/zsh/5.4.1/functions/_unison /usr/share/zsh/5.4.1/functions/_units /usr/share/zsh/5.4.1/functions/_update-alternatives /usr/share/zsh/5.4.1/functions/_update-rc.d /usr/share/zsh/5.4.1/functions/_urls /usr/share/zsh/5.4.1/functions/_urpmi /usr/share/zsh/5.4.1/functions/_urxvt /usr/share/zsh/5.4.1/functions/_uscan /usr/share/zsh/5.4.1/functions/_user_admin /usr/share/zsh/5.4.1/functions/_user_at_host /usr/share/zsh/5.4.1/functions/_user_expand /usr/share/zsh/5.4.1/functions/_user_math_func /usr/share/zsh/5.4.1/functions/_users /usr/share/zsh/5.4.1/functions/_users_on /usr/share/zsh/5.4.1/functions/_uzbl /usr/share/zsh/5.4.1/functions/_valgrind /usr/share/zsh/5.4.1/functions/_value /usr/share/zsh/5.4.1/functions/_values /usr/share/zsh/5.4.1/functions/_vared /usr/share/zsh/5.4.1/functions/_vars /usr/share/zsh/5.4.1/functions/_vcsh /usr/share/zsh/5.4.1/functions/_vim /usr/share/zsh/5.4.1/functions/_vim-addons /usr/share/zsh/5.4.1/functions/_vmstat /usr/share/zsh/5.4.1/functions/_vnc /usr/share/zsh/5.4.1/functions/_volume_groups /usr/share/zsh/5.4.1/functions/_vorbis /usr/share/zsh/5.4.1/functions/_vorbiscomment /usr/share/zsh/5.4.1/functions/_vserver /usr/share/zsh/5.4.1/functions/_vux /usr/share/zsh/5.4.1/functions/_w3m /usr/share/zsh/5.4.1/functions/_wait /usr/share/zsh/5.4.1/functions/_wajig /usr/share/zsh/5.4.1/functions/_wakeup_capable_devices /usr/share/zsh/5.4.1/functions/_wanna-build /usr/share/zsh/5.4.1/functions/_wanted /usr/share/zsh/5.4.1/functions/_watch /usr/share/zsh/5.4.1/functions/_watch-snoop /usr/share/zsh/5.4.1/functions/_wc /usr/share/zsh/5.4.1/functions/_webbrowser /usr/share/zsh/5.4.1/functions/_wget /usr/share/zsh/5.4.1/functions/_whereis /usr/share/zsh/5.4.1/functions/_which /usr/share/zsh/5.4.1/functions/_whois /usr/share/zsh/5.4.1/functions/_widgets /usr/share/zsh/5.4.1/functions/_wiggle /usr/share/zsh/5.4.1/functions/_wpa_cli /usr/share/zsh/5.4.1/functions/_xargs /usr/share/zsh/5.4.1/functions/_x_arguments /usr/share/zsh/5.4.1/functions/_xauth /usr/share/zsh/5.4.1/functions/_xautolock /usr/share/zsh/5.4.1/functions/_x_borderwidth /usr/share/zsh/5.4.1/functions/_xclip /usr/share/zsh/5.4.1/functions/_x_color /usr/share/zsh/5.4.1/functions/_x_colormapid /usr/share/zsh/5.4.1/functions/_x_cursor /usr/share/zsh/5.4.1/functions/_x_display /usr/share/zsh/5.4.1/functions/_xdvi /usr/share/zsh/5.4.1/functions/_x_extension /usr/share/zsh/5.4.1/functions/_xfig /usr/share/zsh/5.4.1/functions/_x_font /usr/share/zsh/5.4.1/functions/_xft_fonts /usr/share/zsh/5.4.1/functions/_x_geometry /usr/share/zsh/5.4.1/functions/_x_keysym /usr/share/zsh/5.4.1/functions/_xloadimage /usr/share/zsh/5.4.1/functions/_x_locale /usr/share/zsh/5.4.1/functions/_xmlsoft /usr/share/zsh/5.4.1/functions/_xmms2 /usr/share/zsh/5.4.1/functions/_x_modifier /usr/share/zsh/5.4.1/functions/_xmodmap /usr/share/zsh/5.4.1/functions/_x_name /usr/share/zsh/5.4.1/functions/_xournal /usr/share/zsh/5.4.1/functions/_xpdf /usr/share/zsh/5.4.1/functions/_xrandr /usr/share/zsh/5.4.1/functions/_x_resource /usr/share/zsh/5.4.1/functions/_xscreensaver /usr/share/zsh/5.4.1/functions/_x_selection_timeout /usr/share/zsh/5.4.1/functions/_xset /usr/share/zsh/5.4.1/functions/_xt_arguments /usr/share/zsh/5.4.1/functions/_xterm /usr/share/zsh/5.4.1/functions/_x_title /usr/share/zsh/5.4.1/functions/_xt_session_id /usr/share/zsh/5.4.1/functions/_x_utils /usr/share/zsh/5.4.1/functions/_xv /usr/share/zsh/5.4.1/functions/_x_visual /usr/share/zsh/5.4.1/functions/_x_window /usr/share/zsh/5.4.1/functions/_xwit /usr/share/zsh/5.4.1/functions/_xxd /usr/share/zsh/5.4.1/functions/_xz /usr/share/zsh/5.4.1/functions/_yafc /usr/share/zsh/5.4.1/functions/_yast /usr/share/zsh/5.4.1/functions/_yodl /usr/share/zsh/5.4.1/functions/_yp /usr/share/zsh/5.4.1/functions/_yum /usr/share/zsh/5.4.1/functions/_zargs /usr/share/zsh/5.4.1/functions/_zattr /usr/share/zsh/5.4.1/functions/_zcalc /usr/share/zsh/5.4.1/functions/_zcalc_line /usr/share/zsh/5.4.1/functions/_zcat /usr/share/zsh/5.4.1/functions/_zcompile /usr/share/zsh/5.4.1/functions/_zdump /usr/share/zsh/5.4.1/functions/_zed /usr/share/zsh/5.4.1/functions/_zfs /usr/share/zsh/5.4.1/functions/_zfs_dataset /usr/share/zsh/5.4.1/functions/_zfs_keysource_props /usr/share/zsh/5.4.1/functions/_zfs_pool /usr/share/zsh/5.4.1/functions/_zftp /usr/share/zsh/5.4.1/functions/_zip /usr/share/zsh/5.4.1/functions/_zle /usr/share/zsh/5.4.1/functions/_zlogin /usr/share/zsh/5.4.1/functions/_zmodload /usr/share/zsh/5.4.1/functions/_zmv /usr/share/zsh/5.4.1/functions/_zoneadm /usr/share/zsh/5.4.1/functions/_zones /usr/share/zsh/5.4.1/functions/_zpool /usr/share/zsh/5.4.1/functions/_zpty /usr/share/zsh/5.4.1/functions/_zsh /usr/share/zsh/5.4.1/functions/_zsh-mime-handler /usr/share/zsh/5.4.1/functions/_zsocket /usr/share/zsh/5.4.1/functions/_zstyle /usr/share/zsh/5.4.1/functions/_ztodo /usr/share/zsh/5.4.1/functions/_zypper ) 
+compaudit:61> [[ -n /usr/share/zsh/5.4.1/functions ]]
+compaudit:62> [[ 832 -lt 20 || /usr/share/zsh/5.4.1/functions = */Base || -d /usr/share/zsh/5.4.1/functions/Base ]]
+compaudit:84> [[ ign == use ]]
+compaudit:88> local _i_owners=u0u0
+compaudit:91> local -a _i_exes
+compaudit:92> _i_exes=( /proc/3545/exe /proc/3545/object/a.out ) 
+compaudit:96> local _i_exe
+compaudit:101> _i_exe=/proc/3545/exe
+compaudit:102> [[ -e /proc/3545/exe ]]
+compaudit:103> zmodload -F zsh/stat b:zstat
+compaudit:104> local -A _i_stathash
+compaudit:105> zstat -H _i_stathash /proc/3545/exe
+compaudit:106> [[ 0 -ne 0 ]]
+compaudit:110> break
+compaudit:123> _i_wdirs=( ) 
+compaudit:132> ((  0  ))
+compaudit:146> [[ -f /etc/debian_version ]]
+compaudit:153> _i_wdirs=( ) 
+compaudit:154> _i_wfiles=( ) 
+compaudit:156> case 0:0 (0:0)
+compaudit:157> _i_q='' 
+compaudit:163> [[ -n '' ]]
+compaudit:170> return 0
+compinit:471> autoload -Uz compdump compinstall
+compinit:475> _i_done='' 
+compinit:477> [[ -f /root/.zcompdump-localhost-5.4.1 ]]
+compinit:478> [[ -n yes ]]
+compinit:479> IFS=$' \t' +compinit:479> read -rA _i_line
+compinit:480> [[ _i_autodump -eq 1 && 832 -eq 832 && 5.4.1 = 5.4.1 ]]
+compinit:483> . /root/.zcompdump-localhost-5.4.1
+/root/.zcompdump-localhost-5.4.1:3> _comps=( - _precommand . _source 5g _go 5l _go 6g _go 6l _go 8g _go 8l _go a2dismod _a2utils a2dissite _a2utils a2enmod _a2utils a2ensite _a2utils a2ps _a2ps aaaa _hosts aap _aap acpi _acpi acpitool _acpitool acroread _acroread adb _adb add-zle-hook-widget _add-zle-hook-widget add-zsh-hook _add-zsh-hook admin _sccs ag _the_silver_searcher ali _mh alias _alias amaya _webbrowser analyseplugin _analyseplugin animate _imagemagick anno _mh ant _ant antiword _antiword aodh _openstack aoss _precommand apache2ctl _apachectl apachectl _apachectl apm _apm appletviewer _java apropos _man apt _apt apt-cache _apt apt-cdrom _apt apt-config _apt apt-file _apt-file apt-get _apt aptitude _aptitude apt-mark _apt apt-move _apt-move apt-show-versions _apt-show-versions apvlv _pdf arena _webbrowser arp _arp arping _arping -array-value- _value -assign-parameter- _assign at _at atq _at atrm _at attr _attr augtool _augeas auto-apt _auto-apt autoload _typeset awk _awk axi-cache _axi-cache barbican _openstack basename _basename bash _sh batch _at baz _baz beadm _beadm beep _beep bg _jobs_bg bibtex _bibtex bindkey _bindkey bison _bison bmake _make bogofilter _bogofilter bogotune _bogofilter bogoutil _bogofilter bootctl _bootctl bpython _bpython bpython2 _bpython bpython2-gtk _bpython bpython2-urwid _bpython bpython3 _bpython bpython3-gtk _bpython bpython3-urwid _bpython bpython-gtk _bpython bpython-urwid _bpython -brace-parameter- _brace_parameter brctl _brctl bsdconfig _bsdconfig bsdgrep _grep bsdinstall _bsdinstall btdownloadcurses _bittorrent btdownloadgui _bittorrent btdownloadheadless _bittorrent btlaunchmany _bittorrent btlaunchmanycurses _bittorrent btmakemetafile _bittorrent btreannounce _bittorrent btrename _bittorrent btrfs _btrfs bts _bts btshowmetainfo _bittorrent bttrack _bittorrent bug _bug buildhash _ispell builtin _builtin bunzip2 _bzip2 burst _mh busctl _busctl bzcat _bzip2 bzip2 _bzip2 bzip2recover _bzip2 bzr _bzr c++ _gcc cabal _cabal cal _cal calendar _calendar cat _cat catchsegv _precommand cc _gcc ccal _ccal cd _cd cdbs-edit-patch _cdbs-edit-patch cdc _sccs cdcd _cdcd cdr _cdr cdrdao _cdrdao cdrecord _cdrecord ceilometer _openstack certtool _gnutls cftp _twisted chage _users chdir _cd chflags _chflags chfn _users chgrp _chown chimera _webbrowser chkconfig _chkconfig chmod _chmod chown _chown chpass _chsh chrt _chrt chsh _chsh ci _rcs cifsiostat _sysstat cinder _openstack ckeygen _twisted clang _gcc clang++ _gcc clay _clay clear _nothing cloudkitty _openstack cmp _cmp co _rcs comb _sccs combine _imagemagick combinediff _patchutils comm _comm command _command -command- _autocd -command-line- _normal comp _mh compadd _compadd compdef _compdef composite _imagemagick compress _compress conch _twisted -condition- _condition config.status _configure configure _configure convert _imagemagick coreadm _coreadm coredumpctl _coredumpctl cowsay _cowsay cowthink _cowsay cp _cp cpio _cpio cplay _cplay cpupower _cpupower crsh _cssh cryptsetup _cryptsetup cscope _cscope csh _sh cssh _cssh csup _csup cu _cu curl _curl cut _cut cvs _cvs cvsup _cvsup cygcheck _cygcheck cygcheck.exe _cygcheck cygpath _cygpath cygpath.exe _cygpath cygrunsrv _cygrunsrv cygrunsrv.exe _cygrunsrv cygserver _cygserver cygserver.exe _cygserver cygstart _cygstart cygstart.exe _cygstart dak _dak darcs _darcs date _date dbus-monitor _dbus dbus-send _dbus dch _debchange dchroot _dchroot dchroot-dsa _dchroot-dsa dcop _dcop dcopclient _dcop dcopfind _dcop dcopobject _dcop dcopref _dcop dcopstart _dcop dcut _dcut dd _dd debchange _debchange debcheckout _debcheckout debdiff _debdiff debfoster _debfoster debsign _debsign declare _typeset -default- _default defaults _defaults delta _sccs designate _openstack devtodo _devtodo df _df dhclient _dhclient dhclient3 _dhclient dhcpinfo _dhcpinfo dict _dict diff _diff diffstat _diffstat dig _dig dillo _webbrowser dircmp _directories dirs _dirs disable _disable disown _jobs_fg display _imagemagick dist _mh django-admin _django django-admin.py _django dladm _dladm dlocate _dlocate dmake _make dmesg _dmesg dmidecode _dmidecode dnf _dnf dnf-2 _dnf dnf-3 _dnf doas _doas domainname _yp dosdel _floppy dosread _floppy dpatch-edit-patch _dpatch-edit-patch dpkg _dpkg dpkg-buildpackage _dpkg-buildpackage dpkg-cross _dpkg-cross dpkg-deb _dpkg dpkg-query _dpkg dpkg-reconfigure _dpkg dpkg-repack _dpkg-repack dpkg-source _dpkg_source dput _dput dsh _dsh dtrace _dtrace du _du dumpadm _dumpadm dumper _dumper dumper.exe _dumper dupload _dupload dvibook _dvi dviconcat _dvi dvicopy _dvi dvidvi _dvi dvipdf _dvi dvips _dvi dviselect _dvi dvitodvi _dvi dvitype _dvi dwb _webbrowser eatmydata _precommand ecasound _ecasound echotc _echotc echoti _echoti egrep _grep elfdump _elfdump elinks _elinks elm _elm emulate _emulate enable _enable enscript _enscript entr _entr env _env epdfview _pdf epsffit _psutils -equal- _equal erb _ruby espeak _espeak etags _etags ethtool _ethtool eu-nm _nm eu-readelf _readelf eval _precommand eview _vim evim _vim evince _evince exec _precommand explodepkg _pkgtool export _typeset express _webbrowser extcheck _java extractres _psutils fakeroot _fakeroot false _nothing fc _fc fc-list _xft_fonts fc-match _xft_fonts feh _feh fetch _fetch fetchmail _fetchmail ffmpeg _ffmpeg fg _jobs_fg fgrep _grep figlet _figlet filterdiff _patchutils find _find findaffix _ispell finger _finger fink _fink firefox _mozilla -first- _first fixdlsrps _psutils fixfmps _psutils fixmacps _psutils fixpsditps _psutils fixpspps _psutils fixscribeps _psutils fixtpps _psutils fixwfwps _psutils fixwpps _psutils fixwwps _psutils flasher _flasher flex _flex flex++ _flex flipdiff _patchutils flist _mh flists _mh float _typeset flowadm _flowadm fmadm _fmadm fmt _fmt fmttest _mh fned _zed fnext _mh folder _mh folders _mh fortune _fortune forw _mh fprev _mh freebsd-make _make freebsd-update _freebsd-update freezer _openstack fsh _fsh fstat _fstat ftp _hosts functions _typeset fuser _fuser fusermount _fusermount fwhois _whois fw_update _fw_update g++ _gcc galeon _webbrowser gawk _awk gbasename _basename gcc _gcc gccgo _go gchmod _chmod gcmp _cmp gcomm _comm gcore _gcore gcp _cp gdate _date gdb _gdb gdiff _diff gdu _du gegrep _grep genisoimage _genisoimage get _sccs getafm _psutils getclip _getclip getclip.exe _getclip getconf _getconf getent _getent getfacl _getfacl getfacl.exe _getfacl getfattr _attr getmail _getmail getopts _vars gex _vim gfgrep _grep gfind _find ggrep _grep ggv _gnome-gv ghostscript _gs ghostview _pspdf gid _id git _git git-buildpackage _git-buildpackage git-cvsserver _git gitk _git git-receive-pack _git git-shell _git git-upload-archive _git git-upload-pack _git gjoin _join glance _openstack gln _ln global _global glocate _locate gls _ls gm _graphicsmagick gmake _make gmd5sum _md5sum gmkdir _mkdir gmplayer _mplayer gnl _nl gnocchi _openstack gnome-gv _gnome-gv gnupod_addsong _gnupod gnupod_addsong.pl _gnupod gnupod_check _gnupod gnupod_check.pl _gnupod gnupod_INIT _gnupod gnupod_INIT.pl _gnupod gnupod_search _gnupod gnupod_search.pl _gnupod gnutls-cli _gnutls gnutls-cli-debug _gnutls god _od gofmt _go gpasswd _gpasswd gpatch _patch gpg _gpg gpg2 _gpg gpgv _gpg gpg-zip _gpg gphoto2 _gphoto2 gprof _gprof gqview _gqview gradle _gradle gradlew _gradle grail _webbrowser grep _grep grepdiff _patchutils grep-excuses _grep-excuses grm _rm groff _groff groupadd _user_admin groupdel _groups groupmod _user_admin groups _users growisofs _growisofs gs _gs gsbj _pspdf gsdj _pspdf gsdj500 _pspdf gsed _sed gsettings _gsettings gslj _pspdf gslp _pspdf gsnd _pspdf gsort _sort gstat _gstat gtar _tar gtouch _touch guilt _guilt guilt-add _guilt guilt-applied _guilt guilt-delete _guilt guilt-files _guilt guilt-fold _guilt guilt-fork _guilt guilt-header _guilt guilt-help _guilt guilt-import _guilt guilt-import-commit _guilt guilt-init _guilt guilt-new _guilt guilt-next _guilt guilt-patchbomb _guilt guilt-pop _guilt guilt-prev _guilt guilt-push _guilt guilt-rebase _guilt guilt-refresh _guilt guilt-rm _guilt guilt-series _guilt guilt-status _guilt guilt-top _guilt guilt-unapplied _guilt guniq _uniq gunzip _gzip gv _gv gview _vim gvim _vim gvimdiff _vim gwc _wc gxargs _xargs gzcat _gzip gzegrep _grep gzfgrep _grep gzgrep _grep gzilla _webbrowser gzip _gzip hash _hash hdiutil _hdiutil head _head heat _openstack help _sccs hg _hg hilite _precommand history _fc host _hosts hostnamectl _hostnamectl hotjava _webbrowser htop _htop hwinfo _hwinfo iceweasel _mozilla icombine _ispell iconv _iconv iconvconfig _iconvconfig id _id identify _imagemagick ifconfig _ifconfig ifdown _net_interfaces iftop _iftop ifup _net_interfaces ijoin _ispell import _imagemagick inc _mh includeres _psutils inetadm _inetadm info _texinfo infocmp _terminals initctl _initctl insmod _modutils install-info _texinfo installpkg _pkgtool integer _typeset interdiff _patchutils invoke-rc.d _invoke-rc.d ionice _ionice iostat _iostat ip _ip ipadm _ipadm ipset _ipset iptables _iptables iptables-restore _iptables iptables-save _iptables irb _ruby ironic _openstack irssi _irssi isag _sysstat ispell _ispell iwconfig _iwconfig jadetex _tex jar _java jarsigner _java java _java javac _java javadoc _java javah _java javap _java jdb _java jexec _jexec jls _jls jobs _jobs_builtin joe _joe join _join jot _jot journalctl _journalctl kernel-install _kernel-install keystone _openstack keytool _java kfmclient _kfmclient kill _kill killall _killall killall5 _killall kioclient _kfmclient kldload _kld kldunload _kld knock _knock konqueror _webbrowser kpartx _kpartx kpdf _pdf ksh _sh kvno _kvno last _last lastb _last latex _tex latexmk _tex ldd _ldd less _less let _math lftp _ncftp lha _lha light _webbrowser lighty-disable-mod _lighttpd lighty-enable-mod _lighttpd limit _limit links _links lintian _lintian lintian-info _lintian linux _uml lldb _lldb llvm-g++ _gcc llvm-gcc _gcc ln _ln loadkeys _loadkeys local _typeset locale _locale localectl _localectl localedef _localedef locate _locate log _nothing loginctl _loginctl logname _nothing look _look lore _twisted losetup _losetup lp _lp lpadmin _lp lpinfo _lp lpoptions _lp lpq _lp lpr _lp lprm _lp lpstat _lp ls _ls lsblk _lsblk lscfg _lscfg lsdev _lsdev lsdiff _patchutils lslv _lslv lsmod _modutils lsof _lsof lspv _lspv lsusb _lsusb lsvg _lsvg ltrace _ltrace lynx _lynx lzcat _xz lzma _xz lzop _lzop m-a _module-assistant machinectl _machinectl madison _madison magnum _openstack mail _mail Mail _mail mailx _mail make _make makeinfo _texinfo make-kpkg _make-kpkg makepkg _pkgtool man _man manage.py _django manhole _twisted manila _openstack mark _mh -math- _math matlab _matlab mattrib _mtools mcd _mtools mcopy _mtools md5sum _md5sum mdadm _mdadm mdel _mtools mdeltree _mtools mdir _mtools mdu _mtools members _members mencal _mencal mere _mere merge _rcs mergechanges _mergechanges metaflac _metaflac mformat _mtools mgv _pspdf mhfixmsg _mh mhlist _mh mhmail _mh mhn _mh mhparam _mh mhpath _mh mhshow _mh mhstore _mh mii-tool _mii-tool mistral _openstack mixerctl _mixerctl mkdir _mkdir mkisofs _growisofs mkshortcut _mkshortcut mkshortcut.exe _mkshortcut mktunes _gnupod mktunes.pl _gnupod mkzsh _mkzsh mkzsh.exe _mkzsh mlabel _mtools mlocate _locate mmd _mtools mmm _webbrowser mmount _mtools mmove _mtools modinfo _modutils modprobe _modutils module _module module-assistant _module-assistant mogrify _imagemagick monasca _openstack mondoarchive _mondo montage _imagemagick moosic _moosic Mosaic _webbrowser mosh _mosh mount _mount mozilla _mozilla mozilla-firefox _mozilla mozilla-xremote-client _mozilla mpc _mpc mplayer _mplayer mpstat _sysstat mrd _mtools mread _mtools mren _mtools msgchk _mh mt _mt mtn _monotone mtoolstest _mtools mtr _mtr mtype _mtools munchlist _ispell mupdf _pdf murano _openstack mush _mail mutt _mutt mx _hosts mysql _mysql_utils mysqladmin _mysql_utils mysqldiff _mysqldiff mysqldump _mysql_utils mysqlimport _mysql_utils mysqlshow _mysql_utils nail _mail native2ascii _java nautilus _nautilus nawk _awk nc _netcat ncal _cal ncftp _ncftp ncl _nedit nedit _nedit nedit-nc _nedit netcat _netcat netrik _webbrowser netscape _netscape netstat _netstat networkctl _networkctl neutron _openstack new _mh newgrp _groups next _mh nice _nice nkf _nkf nl _nl nm _nm nmap _nmap nmblookup _samba nmcli _nmcli nocorrect _precommand noglob _precommand nohup _precommand notmuch _notmuch nova _openstack npm _npm ns _hosts nslookup _nslookup ntalk _other_accounts nvim _vim objdump _objdump od _od odme _object_classes odmget _object_classes odmshow _object_classes ogg123 _vorbis oggdec _vorbis oggenc _vorbis ogginfo _vorbis okular _okular open _open openstack _openstack opera _webbrowser opera-next _webbrowser osc _osc p4 _perforce p4d _perforce pacat _pulseaudio pack _pack packf _mh pacmd _pulseaudio pactl _pulseaudio padsp _pulseaudio paplay _pulseaudio -parameter- _parameter parec _pulseaudio parecord _pulseaudio parsehdlist _urpmi passwd _users paste _paste pasuspender _pulseaudio patch _patch pax _pax pbuilder _pbuilder pcat _pack pcred _pids pdf2dsc _pdf pdf2ps _pdf pdffonts _pdf pdfimages _pdf pdfinfo _pdf pdfjadetex _tex pdflatex _tex pdfopt _pdf pdftex _tex pdftexi2dvi _texinfo pdftk _pdftk pdftopbm _pdf pdftops _pdf pdftotext _pdf perl _perl perldoc _perldoc pfctl _pfctl pfexec _pfexec pfiles _pids pflags _pids pgrep _pgrep php _php pick _mh picocom _picocom pidof _pidof pidstat _sysstat pigz _gzip pine _pine pinef _pine ping _ping piuparts _piuparts pkg _pkg5 pkgadd _pkgadd pkg_add _bsd_pkg pkg-config _pkg-config pkg_create _bsd_pkg pkg_delete _bsd_pkg pkginfo _pkginfo pkg_info _bsd_pkg pkgrm _pkgrm pkgtool _pkgtool pkill _pgrep pldd _pids pmake _make pman _perl_modules pmap _pids pmcat _perl_modules pmdesc _perl_modules pmeth _perl_modules pmexp _perl_modules pmfunc _perl_modules pmload _perl_modules pmls _perl_modules pmpath _perl_modules pmvers _perl_modules podgrep _perl_modules podpath _perl_modules podtoc _perl_modules poff _pon policytool _java pon _pon popd _directory_stack portaudit _portaudit portlint _portlint portmaster _portmaster portsnap _portsnap postconf _postfix postqueue _postfix postsuper _postfix powerd _powerd prcs _prcs prev _mh print _print printenv _printenv printf _print procstat _procstat prompt _prompt prove _prove prs _sccs prstat _prstat prt _sccs prun _pids ps _ps ps2ascii _pspdf ps2epsi _postscript ps2pdf _postscript ps2pdf12 _postscript ps2pdf13 _postscript ps2pdf14 _postscript ps2pdfwr _postscript ps2ps _postscript psbook _psutils pscp _pscp pscp.exe _pscp psed _sed psig _pids psmerge _psutils psmulti _postscript psnup _psutils psresize _psutils psselect _psutils pstack _pids pstoedit _pspdf pstop _pids pstops _psutils pstotgif _pspdf pswrap _postscript ptree _ptree pulseaudio _pulseaudio pump _pump pushd _cd putclip _putclip putclip.exe _putclip pwait _pids pwdx _pids pyhtmlizer _twisted qdbus _qdbus qiv _qiv qtplay _qtplay querybts _bug quilt _quilt r _fc raggle _raggle rake _rake ranlib _ranlib rar _rar rc _sh rcctl _rcctl rcp _rlogin rcs _rcs rcsdiff _rcs rdesktop _rdesktop read _read readelf _readelf readonly _typeset readshortcut _readshortcut readshortcut.exe _readshortcut rebootin _rebootin -redirect- _redirect '-redirect-,<,bunzip2' _bzip2 '-redirect-,<,bzip2' _bzip2 '-redirect-,>,bzip2' _bzip2 '-redirect-,<,compress' _compress '-redirect-,>,compress' _compress -redirect-,-default-,-default- _files '-redirect-,<,gunzip' _gzip '-redirect-,<,gzip' _gzip '-redirect-,>,gzip' _gzip '-redirect-,<,uncompress' _compress '-redirect-,<,unxz' _xz '-redirect-,<,xz' _xz '-redirect-,>,xz' _xz refile _mh rehash _hash reload _initctl removepkg _pkgtool remsh _rlogin renice _renice repl _mh reportbug _bug reprepro _reprepro restart _initctl retawq _webbrowser rgview _vim rgvim _vim ri _ri rlogin _rlogin rm _rm rmadison _madison rmdel _sccs rmdir _directories rmf _mh rmic _java rmid _java rmiregistry _java rmm _mh rmmod _modutils rpm _rpm rpmbuild _rpmbuild rrdtool _rrdtool rsh _rlogin rsync _rsync rtin _tin rubber _rubber rubber-info _rubber rubber-pipe _rubber ruby _ruby run-help _run-help rup _hosts rusage _precommand rview _vim rvim _vim rwho _hosts rxvt _urxvt s2p _sed sabcmd _sablotron sact _sccs sadf _sysstat sahara _openstack sar _sysstat savecore _savecore scan _mh sccs _sccs sccsdiff _sccs sched _sched schedtool _schedtool schroot _schroot scl _scl scp _ssh screen _screen script _script scriptreplay _script sed _sed senlin _openstack serialver _java service _service set _set setfacl _setfacl setfacl.exe _setfacl setfattr _attr setopt _setopt setsid _precommand setxkbmap _setxkbmap sftp _ssh sh _sh shift _arrays show _mh showchar _psutils showmount _showmount sisu _sisu skipstone _webbrowser slitex _tex slocate _locate slogin _ssh slrn _slrn smbclient _samba smbcontrol _samba smbstatus _samba smit _smit smitty _smit snoop _snoop soa _hosts socket _socket sockstat _sockstat softwareupdate _softwareupdate sort _sort sortm _mh source _source spamassassin _spamassassin splitdiff _patchutils sqlite _sqlite sqlite3 _sqlite sqsh _sqsh sr _surfraw srptool _gnutls ss _ss ssh _ssh ssh-add _ssh ssh-agent _ssh ssh-copy-id _ssh sshfs _sshfs ssh-keygen _ssh star _tar start _initctl stat _stat status _initctl stg _stgit stop _initctl strace _strace strace64 _strace strftime _strftime strip _strip stty _stty su _su -subscript- _subscript sudo _sudo sudoedit _sudo surfraw _surfraw SuSEconfig _SUSEconfig sv _runit svcadm _svcadm svccfg _svccfg svcprop _svcprop svcs _svcs svn _subversion svnadmin _subversion svnadmin-static _subversion svn-buildpackage _svn-buildpackage swaks _swaks swift _swift swiftc _swift sync _nothing sysctl _sysctl sysrc _sysrc systat _systat systemctl _systemctl systemd-analyze _systemd-analyze systemd-ask-password _systemd systemd-cat _systemd systemd-cgls _systemd systemd-cgtop _systemd systemd-delta _systemd-delta systemd-detect-virt _systemd systemd-inhibit _systemd-inhibit systemd-machine-id-setup _systemd systemd-notify _systemd systemd-nspawn _systemd-nspawn systemd-resolve _systemd-resolve systemd-run _systemd-run systemd-tmpfiles _systemd-tmpfiles systemd-tty-ask-password-agent _systemd system_profiler _system_profiler tacker _openstack tail _tail talk _other_accounts tap2deb _twisted tap2rpm _twisted tapconvert _twisted tar _tar tardy _tardy tcpdump _tcpdump tcp_open _tcpsys tcptraceroute _tcptraceroute tcsh _sh tda _devtodo tdd _devtodo tde _devtodo tdr _devtodo telnet _telnet tex _tex texi2any _texinfo texi2dvi _texinfo texi2pdf _texinfo texindex _texinfo tg _topgit tidy _tidy tig _git -tilde- _tilde time _precommand timedatectl _timedatectl times _nothing tin _tin tkconch _twisted tkinfo _texinfo tla _tla tmux _tmux todo _devtodo todo.sh _todo.sh toilet _toilet top _top totdconfig _totd touch _touch tpb _tpb tpconfig _tpconfig tpkg-debarch _toolchain-source tpkg-install _toolchain-source tpkg-install-libc _toolchain-source tpkg-make _toolchain-source tpkg-update _toolchain-source tput _tput tr _tr tracepath _tracepath tracepath6 _tracepath traceroute _hosts trap _trap tree _tree trial _twisted trove _openstack true _nothing truss _truss tryaffix _ispell ttyctl _ttyctl tunctl _uml tune2fs _tune2fs tunes2pod _gnupod tunes2pod.pl _gnupod twidge _twidge twistd _twisted txt _hosts type _which typeset _typeset udevadm _udevadm ulimit _ulimit uml_mconsole _uml uml_moo _uml uml_switch _uml umount _mount unace _unace unalias _aliases uname _uname uncompress _compress unexpand _unexpand unfunction _functions unget _sccs unhash _unhash uniq _uniq unison _unison units _units unlimit _limits unlzma _xz unpack _pack unpigz _gzip unrar _rar unset _vars unsetopt _setopt unwrapdiff _patchutils unxz _xz unzip _zip update-alternatives _update-alternatives update-rc.d _update-rc.d upgradepkg _pkgtool urpme _urpmi urpmf _urpmi urpmi _urpmi urpmi.addmedia _urpmi urpmi.removemedia _urpmi urpmi.update _urpmi urpmq _urpmi urxvt _urxvt urxvt256c _urxvt urxvt256cc _urxvt urxvt256c-ml _urxvt urxvt256c-mlc _urxvt urxvtc _urxvt uscan _uscan useradd _user_admin userdel _users usermod _user_admin uzbl _uzbl uzbl-browser _uzbl uzbl-tabbed _uzbl val _sccs valgrind _valgrind -value- _value -value-,ADB_TRACE,-default- _adb -value-,ANDROID_LOG_TAGS,-default- _adb -value-,ANDROID_SERIAL,-default- _adb -value-,ANT_ARGS,-default- _ant -value-,CFLAGS,-default- _gcc -value-,CPPFLAGS,-default- _gcc -value-,CXXFLAGS,-default- _gcc -value-,-default-,-command- _zargs -value-,-default-,-default- _value -value-,DISPLAY,-default- _x_display -value-,GREP_OPTIONS,-default- _grep -value-,GZIP,-default- _gzip -value-,LANG,-default- _locales -value-,LANGUAGE,-default- _locales -value-,LD_DEBUG,-default- _ld_debug -value-,LDFLAGS,-default- _gcc -value-,LESSCHARSET,-default- _less -value-,LESS,-default- _less -value-,LPDEST,-default- _printers -value-,P4CLIENT,-default- _perforce -value-,P4MERGE,-default- _perforce -value-,P4PORT,-default- _perforce -value-,P4USER,-default- _perforce -value-,PERLDOC,-default- _perldoc -value-,PRINTER,-default- _printers -value-,PROMPT2,-default- _ps1234 -value-,PROMPT3,-default- _ps1234 -value-,PROMPT4,-default- _ps1234 -value-,PROMPT,-default- _ps1234 -value-,PS1,-default- _ps1234 -value-,PS2,-default- _ps1234 -value-,PS3,-default- _ps1234 -value-,PS4,-default- _ps1234 -value-,RPROMPT2,-default- _ps1234 -value-,RPROMPT,-default- _ps1234 -value-,RPS1,-default- _ps1234 -value-,RPS2,-default- _ps1234 -value-,SPROMPT,-default- _ps1234 -value-,TERM,-default- _terminals -value-,TERMINFO_DIRS,-default- _dir_list -value-,TZ,-default- _time_zone -value-,VALGRIND_OPTS,-default- _valgrind -value-,WWW_HOME,-default- _urls -value-,XML_CATALOG_FILES,-default- _xmlsoft -value-,XZ_DEFAULTS,-default- _xz -value-,XZ_OPT,-default- _xz vared _vared -vared- _in_vared vcsh _vcsh vim _vim vim-addons _vim-addons vimdiff _vim virsh _libvirt virt-admin _libvirt virt-host-validate _libvirt virt-pki-validate _libvirt virt-xml-validate _libvirt vitrage _openstack vmstat _vmstat vncserver _vnc vncviewer _vnc vorbiscomment _vorbiscomment vserver _vserver vux _vux vuxctl _vux w3m _w3m wait _wait wajig _wajig wanna-build _wanna-build watch _watch watcher _openstack wc _wc wget _wget what _sccs whatis _man whence _which where _which whereis _whereis which _which whoami _nothing whois _whois whom _mh wiggle _wiggle wodim _cdrecord wpa_cli _wpa_cli write _users_on www _webbrowser xargs _xargs xauth _xauth xautolock _xautolock xclip _xclip xdpyinfo _x_utils xdvi _xdvi xelatex _tex xetex _tex xev _x_utils xfd _x_utils xfig _xfig xfontsel _x_utils xfreerdp _rdesktop xhost _x_utils xkill _x_utils xli _xloadimage xloadimage _xloadimage xlsatoms _x_utils xlsclients _x_utils xmllint _xmlsoft xmms2 _xmms2 xmodmap _xmodmap xmosaic _webbrowser xon _x_utils xournal _xournal xpdf _xpdf xping _hosts xprop _x_utils xrandr _xrandr xrdb _x_utils xscreensaver-command _xscreensaver xset _xset xsetbg _xloadimage xsetroot _x_utils xsltproc _xmlsoft xterm _xterm xtightvncviewer _vnc xtp _imagemagick xv _xv xview _xloadimage xvnc4viewer _vnc xvncviewer _vnc xwd _x_utils xwininfo _x_utils xwit _xwit xwud _x_utils xxd _xxd xz _xz xzcat _xz yafc _yafc yast _yast yast2 _yast ypbind _yp ypcat _yp ypmatch _yp yppasswd _yp yppoll _yp yppush _yp ypserv _yp ypset _yp ypwhich _yp ypxfr _yp ytalk _other_accounts yum _yum zargs _zargs zathura _pspdf zcalc _zcalc -zcalc-line- _zcalc_line zcat _zcat zcompile _zcompile zcp _zmv zdelattr _zattr zdump _zdump zed _zed zegrep _grep zen _webbrowser zf_chgrp _chown zf_chown _chown zfgrep _grep zf_ln _ln zf_mkdir _mkdir zf_rm _rm zf_rmdir _directories zfs _zfs zgetattr _zattr zgrep _grep zip _zip zipinfo _zip zle _zle zlistattr _zattr zln _zmv zlogin _zlogin zmail _mail zmodload _zmodload zmv _zmv zone _hosts zoneadm _zoneadm zpool _zpool zpty _zpty zsetattr _zattr zsh _zsh zsh-mime-handler _zsh-mime-handler zsocket _zsocket zstat _stat zstyle _zstyle ztodo _ztodo zun _openstack zxpdf _xpdf zypper _zypper ) 
+/root/.zcompdump-localhost-5.4.1:1466> _services=( bzcat bunzip2 dch debchange gnupod_addsong.pl gnupod_addsong gnupod_check.pl gnupod_check gnupod_INIT.pl gnupod_INIT gnupod_search.pl gnupod_search gpg2 gpg gzcat gunzip iceweasel firefox lzcat unxz lzma xz Mail mail mailx mail mktunes.pl mktunes nail mail ncl nc nedit-nc nc pcat unpack '-redirect-,<,bunzip2' bunzip2 '-redirect-,<,bzip2' bzip2 '-redirect-,>,bzip2' bunzip2 '-redirect-,<,compress' compress '-redirect-,>,compress' uncompress '-redirect-,<,gunzip' gunzip '-redirect-,<,gzip' gzip '-redirect-,>,gzip' gunzip '-redirect-,<,uncompress' uncompress '-redirect-,<,unxz' unxz '-redirect-,<,xz' xz '-redirect-,>,xz' unxz remsh rsh slogin ssh svnadmin-static svnadmin tunes2pod.pl tunes2pod unlzma unxz xelatex latex xetex tex xzcat unxz zf_chgrp chgrp zf_chown chown ) 
+/root/.zcompdump-localhost-5.4.1:1509> _patcomps=( '*/(init|rc[0-9S]#).d/*' _init_d 'zf*' _zftp ) 
+/root/.zcompdump-localhost-5.4.1:1514> _postpatcomps=( '(p[bgpn]m*|*top[bgpn]m)' _pbm 'pydoc[0-9.]#' _pydoc 'python[0-9.]#' _python 'qemu(|-system-*)' _qemu '(ruby|[ei]rb)[0-9.]#' _ruby '(texi(2*|ndex))' _texi '(tiff*|*2tiff|pal2rgb)' _tiff '-value-,(ftp|http(|s))_proxy,-default-' _urls '-value-,LC_*,-default-' _locales '-value-,*path,-default-' _directories '-value-,*PATH,-default-' _dir_list '-value-,RUBY(LIB|OPT|PATH),-default-' _ruby '*/X11(|R<4->)/*' _x_arguments 'yodl(|2*)' _yodl ) 
+/root/.zcompdump-localhost-5.4.1:1531> _compautos=( _call_program +X ) 
+/root/.zcompdump-localhost-5.4.1:1535> zle -C _bash_complete-word .complete-word _bash_completions
+/root/.zcompdump-localhost-5.4.1:1536> zle -C _bash_list-choices .list-choices _bash_completions
+/root/.zcompdump-localhost-5.4.1:1537> zle -C _complete_debug .complete-word _complete_debug
+/root/.zcompdump-localhost-5.4.1:1538> zle -C _complete_help .complete-word _complete_help
+/root/.zcompdump-localhost-5.4.1:1539> zle -C _complete_tag .complete-word _complete_tag
+/root/.zcompdump-localhost-5.4.1:1540> zle -C _correct_filename .complete-word _correct_filename
+/root/.zcompdump-localhost-5.4.1:1541> zle -C _correct_word .complete-word _correct_word
+/root/.zcompdump-localhost-5.4.1:1542> zle -C _expand_alias .complete-word _expand_alias
+/root/.zcompdump-localhost-5.4.1:1543> zle -C _expand_word .complete-word _expand_word
+/root/.zcompdump-localhost-5.4.1:1544> zle -C _history-complete-newer .complete-word _history_complete_word
+/root/.zcompdump-localhost-5.4.1:1545> zle -C _history-complete-older .complete-word _history_complete_word
+/root/.zcompdump-localhost-5.4.1:1546> zle -C _list_expansions .list-choices _expand_word
+/root/.zcompdump-localhost-5.4.1:1547> zle -C _most_recent_file .complete-word _most_recent_file
+/root/.zcompdump-localhost-5.4.1:1548> zle -C _next_tags .list-choices _next_tags
+/root/.zcompdump-localhost-5.4.1:1549> zle -C _read_comp .complete-word _read_comp
+/root/.zcompdump-localhost-5.4.1:1550> bindkey '^X^R' _read_comp
+/root/.zcompdump-localhost-5.4.1:1551> bindkey '^X?' _complete_debug
+/root/.zcompdump-localhost-5.4.1:1552> bindkey '^XC' _correct_filename
+/root/.zcompdump-localhost-5.4.1:1553> bindkey '^Xa' _expand_alias
+/root/.zcompdump-localhost-5.4.1:1554> bindkey '^Xc' _correct_word
+/root/.zcompdump-localhost-5.4.1:1555> bindkey '^Xd' _list_expansions
+/root/.zcompdump-localhost-5.4.1:1556> bindkey '^Xe' _expand_word
+/root/.zcompdump-localhost-5.4.1:1557> bindkey '^Xh' _complete_help
+/root/.zcompdump-localhost-5.4.1:1558> bindkey '^Xm' _most_recent_file
+/root/.zcompdump-localhost-5.4.1:1559> bindkey '^Xn' _next_tags
+/root/.zcompdump-localhost-5.4.1:1560> bindkey '^Xt' _complete_tag
+/root/.zcompdump-localhost-5.4.1:1561> bindkey '^X~' _bash_list-choices
+/root/.zcompdump-localhost-5.4.1:1562> bindkey '^[,' _history-complete-newer
+/root/.zcompdump-localhost-5.4.1:1563> bindkey '^[/' _history-complete-older
+/root/.zcompdump-localhost-5.4.1:1564> bindkey '^[~' _bash_complete-word
+/root/.zcompdump-localhost-5.4.1:1566> autoload -Uz _bootctl _busctl _coredumpctl _curl _hostnamectl _journalctl _kernel-install _localectl _loginctl _machinectl _networkctl _pulseaudio _sd_hosts_or_user_at_host _sd_machines _sd_outputmodes _sd_unit_files _systemctl _systemd _systemd-analyze _systemd-delta _systemd-inhibit _systemd-nspawn _systemd-resolve _systemd-run _systemd-tmpfiles _the_silver_searcher _timedatectl _udevadm _a2ps _a2utils _aap _absolute_command_paths _acpi _acpitool _acroread _adb _add-zle-hook-widget _add-zsh-hook _alias _aliases _all_labels _all_matches _alternative _analyseplugin _ant _antiword _apachectl _apm _approximate _apt _apt-file _aptitude _apt-move _apt-show-versions _arch_archives _arch_namespace _arg_compile _arguments _arp _arping _arrays _assign _at _attr _augeas _auto-apt _autocd _awk _axi-cache _basename _bash_completions _baudrates _baz _beadm _beep _be_name _bibtex _bind_addresses _bindkey _bison _bittorrent _bogofilter _bpython _brace_parameter _brctl _bsdconfig _bsdinstall _bsd_pkg _btrfs _bts _bug _builtin _bzip2 _bzr _cabal _cache_invalid _cal _calendar _call_function _canonical_paths _cat _ccal _cd _cdbs-edit-patch _cdcd _cdr _cdrdao _cdrecord _chflags _chkconfig _chmod _chown _chrt _chsh _clay _cmdambivalent _cmdstring _cmp _combination _comm _command _command_names _compadd _compdef _complete _complete_debug _complete_help _complete_help_generic _completers _complete_tag _comp_locale _compress _condition _configure _coreadm _correct _correct_filename _correct_word _cowsay _cp _cpio _cplay _cpupower _cryptsetup _cscope _cssh _csup _ctags_tags _cu _curl _cut _cvs _cvsup _cygcheck _cygpath _cygrunsrv _cygserver _cygstart _dak _darcs _date _date_formats _dates _dbus _dchroot _dchroot-dsa _dcop _dcut _dd _deb_architectures _debbugs_bugnumber _debchange _debcheckout _deb_codenames _debdiff _debfoster _deb_packages _debsign _default _defaults _delimiters _describe _description _devtodo _df _dhclient _dhcpinfo _dict _dict_words _diff _diff_options _diffstat _dig _directories _directory_stack _dir_list _dirs _disable _dispatch _django _dladm _dlocate _dmesg _dmidecode _dnf _doas _domains _dpatch-edit-patch _dpkg _dpkg-buildpackage _dpkg-cross _dpkg-repack _dpkg_source _dput _dsh _dtrace _du _dumpadm _dumper _dupload _dvi _dynamic_directory_name _ecasound _echotc _echoti _elfdump _elinks _elm _email_addresses _emulate _enable _enscript _entr _env _equal _espeak _etags _ethtool _evince _expand _expand_alias _expand_word _extensions _external_pwds _fakeroot _fc _feh _fetch _fetchmail _ffmpeg _figlet _file_descriptors _files _file_systems _find _find_net_interfaces _finger _fink _first _flasher _flex _floppy _flowadm _fmadm _fmt _fortune _freebsd-update _fsh _fstat _functions _fuse_arguments _fuser _fusermount _fuse_values _fw_update _gcc _gcore _gdb _generic _genisoimage _getclip _getconf _getent _getfacl _getmail _git _git-buildpackage _global _global_tags _globflags _globqual_delims _globquals _gnome-gv _gnu_generic _gnupod _gnutls _go _gpasswd _gpg _gphoto2 _gprof _gqview _gradle _graphicsmagick _grep _grep-excuses _groff _groups _growisofs _gs _gsettings _gstat _guard _guilt _gv _gzip _hash _have_glob_qual _hdiutil _head _hg _history _history_complete_word _history_modifiers _hosts _htop _hwinfo _iconv _iconvconfig _id _ifconfig _iftop _ignored _imagemagick _inetadm _initctl _init_d _in_vared _invoke-rc.d _ionice _iostat _ip _ipadm _ipset _iptables _irssi _ispell _iwconfig _jails _java _java_class _jexec _jls _jobs _jobs_bg _jobs_builtin _jobs_fg _joe _join _jot _kfmclient _kill _killall _kld _knock _kpartx _kvno _last _ldd _ld_debug _less _lha _libvirt _lighttpd _limit _limits _links _lintian _list _list_files _lldb _ln _loadkeys _locale _localedef _locales _locate _logical_volumes _look _losetup _lp _ls _lsblk _lscfg _lsdev _lslv _lsof _lspv _lsusb _lsvg _ltrace _lynx _lzop _mac_applications _mac_files_for_application _madison _mail _mailboxes _main_complete _make _make-kpkg _man _match _math _math_params _matlab _md5sum _mdadm _members _mencal _menu _mere _mergechanges _message _metaflac _mh _mii-tool _mime_types _mixerctl _mkdir _mkshortcut _mkzsh _module _module-assistant _module_math_func _modutils _mondo _monotone _moosic _mosh _most_recent_file _mount _mozilla _mpc _mplayer _mt _mtools _mtr _multi_parts _mutt _my_accounts _mysqldiff _mysql_utils _nautilus _ncftp _nedit _netcat _net_interfaces _netscape _netstat _newsgroups _next_label _next_tags _nice _nkf _nl _nm _nmap _nmcli _normal _nothing _notmuch _npm _nslookup _objdump _object_classes _object_files _od _okular _oldlist _open _openstack _options _options_set _options_unset _osc _other_accounts _pack _parameter _parameters _paste _patch _patchutils _path_commands _path_files _pax _pbm _pbuilder _pdf _pdftk _perforce _perl _perl_basepods _perldoc _perl_modules _pfctl _pfexec _pgrep _php _physical_volumes _pick_variant _picocom _pidof _pids _pine _ping _piuparts _pkg5 _pkgadd _pkg-config _pkginfo _pkg_instance _pkgrm _pkgtool _pon _portaudit _portlint _portmaster _ports _portsnap _postfix _postscript _powerd _prcs _precommand _prefix _print _printenv _printers _procstat _prompt _prove _prstat _ps _ps1234 _pscp _pspdf _psutils _ptree _pump _putclip _pydoc _python _python_modules _qdbus _qemu _qiv _qtplay _quilt _raggle _rake _ranlib _rar _rcctl _rcs _rdesktop _read _read_comp _readelf _readshortcut _rebootin _redirect _regex_arguments _regex_words _remote_files _renice _reprepro _requested _retrieve_cache _retrieve_mac_apps _ri _rlogin _rm _rpm _rpmbuild _rrdtool _rsync _rubber _ruby _run-help _runit _sablotron _samba _savecore _sccs _sched _schedtool _schroot _scl _screen _script _sed _sep_parts _sequence _service _services _set _set_command _setfacl _setopt _setup _setxkbmap _sh _showmount _signals _sisu _slrn _smit _snoop _socket _sockstat _softwareupdate _sort _source _spamassassin _sqlite _sqsh _ss _ssh _sshfs _stat _stgit _store_cache _strace _strftime _strip _stty _su _sub_commands _subscript _subversion _sudo _suffix_alias_files _surfraw _SUSEconfig _svcadm _svccfg _svcprop _svcs _svcs_fmri _svn-buildpackage _swaks _swift _sys_calls _sysctl _sysrc _sysstat _systat _system_profiler _tags _tail _tar _tar_archive _tardy _tcpdump _tcpsys _tcptraceroute _telnet _terminals _tex _texi _texinfo _tidy _tiff _tilde _tilde_files _time_zone _tin _tla _tmux _todo.sh _toilet _toolchain-source _top _topgit _totd _touch _tpb _tpconfig _tput _tr _tracepath _trap _tree _truss _ttyctl _ttys _tune2fs _twidge _twisted _typeset _ulimit _uml _umountable _unace _uname _unexpand _unhash _uniq _unison _units _update-alternatives _update-rc.d _urls _urpmi _urxvt _uscan _user_admin _user_at_host _user_expand _user_math_func _users _users_on _uzbl _valgrind _value _values _vared _vars _vcsh _vim _vim-addons _vmstat _vnc _volume_groups _vorbis _vorbiscomment _vserver _vux _w3m _wait _wajig _wakeup_capable_devices _wanna-build _wanted _watch _watch-snoop _wc _webbrowser _wget _whereis _which _whois _widgets _wiggle _wpa_cli _xargs _x_arguments _xauth _xautolock _x_borderwidth _xclip _x_color _x_colormapid _x_cursor _x_display _xdvi _x_extension _xfig _x_font _xft_fonts _x_geometry _x_keysym _xloadimage _x_locale _xmlsoft _xmms2 _x_modifier _xmodmap _x_name _xournal _xpdf _xrandr _x_resource _xscreensaver _x_selection_timeout _xset _xt_arguments _xterm _x_title _xt_session_id _x_utils _xv _x_visual _x_window _xwit _xxd _xz _yafc _yast _yodl _yp _yum _zargs _zattr _zcalc _zcalc_line _zcat _zcompile _zdump _zed _zfs _zfs_dataset _zfs_keysource_props _zfs_pool _zftp _zip _zle _zlogin _zmodload _zmv _zoneadm _zones _zpool _zpty _zsh _zsh-mime-handler _zsocket _zstyle _ztodo _zypper
+/root/.zcompdump-localhost-5.4.1:1733> autoload -Uz +X _call_program
+/root/.zcompdump-localhost-5.4.1:1735> typeset -gUa _comp_assocs
+/root/.zcompdump-localhost-5.4.1:1736> _comp_assocs=( '' ) 
+compinit:484> _i_done=yes 
+compinit:491> [[ -z yes ]]
+compinit:528> _i_line=complete-word
+compinit:531> zle -C complete-word .complete-word _main_complete
+compinit:528> _i_line=delete-char-or-list
+compinit:531> zle -C delete-char-or-list .delete-char-or-list _main_complete
+compinit:528> _i_line=expand-or-complete
+compinit:531> zle -C expand-or-complete .expand-or-complete _main_complete
+compinit:528> _i_line=expand-or-complete-prefix
+compinit:531> zle -C expand-or-complete-prefix .expand-or-complete-prefix _main_complete
+compinit:528> _i_line=list-choices
+compinit:531> zle -C list-choices .list-choices _main_complete
+compinit:528> _i_line=menu-complete
+compinit:531> zle -C menu-complete .menu-complete _main_complete
+compinit:528> _i_line=menu-expand-or-complete
+compinit:531> zle -C menu-expand-or-complete .menu-expand-or-complete _main_complete
+compinit:528> _i_line=reverse-menu-complete
+compinit:531> zle -C reverse-menu-complete .reverse-menu-complete _main_complete
+compinit:533> zle -la menu-select
+compinit:533> zle -C menu-select .menu-select _main_complete
+compinit:537> bindkey '^i'
+compinit:537> IFS=$' \t' +compinit:537> read -A _i_line
+compinit:538> [[ fzf-completion = expand-or-complete ]]
+compinit:544> unfunction compinit compaudit
+compinit:545> autoload -Uz compinit compaudit
+compinit:547> return 0
+/root/.oh-my-zsh/oh-my-zsh.sh:81> plugin=git
+/root/.oh-my-zsh/oh-my-zsh.sh:82> [ -f /root/.oh-my-zsh/custom/plugins/git/git.plugin.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:84> [ -f /root/.oh-my-zsh/plugins/git/git.plugin.zsh ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:85> source /root/.oh-my-zsh/plugins/git/git.plugin.zsh
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:2> zstyle -s ':vcs_info:git:*:-all-' command _omz_git_git_cmd
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:3> : git
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:41> alias 'g=git'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:43> alias 'ga=git add'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:44> alias 'gaa=git add --all'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:45> alias 'gapa=git add --patch'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:46> alias 'gau=git add --update'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:47> alias 'gap=git apply'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:49> alias 'gb=git branch'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:50> alias 'gba=git branch -a'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:51> alias 'gbd=git branch -d'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:52> alias 'gbda=git branch --no-color --merged | command grep -vE "^(\*|\s*(master|develop|dev)\s*$)" | command xargs -n 1 git branch -d'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:53> alias 'gbl=git blame -b -w'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:54> alias 'gbnm=git branch --no-merged'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:55> alias 'gbr=git branch --remote'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:56> alias 'gbs=git bisect'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:57> alias 'gbsb=git bisect bad'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:58> alias 'gbsg=git bisect good'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:59> alias 'gbsr=git bisect reset'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:60> alias 'gbss=git bisect start'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:62> alias 'gc=git commit -v'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:63> alias 'gc!=git commit -v --amend'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:64> alias 'gcn!=git commit -v --no-edit --amend'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:65> alias 'gca=git commit -v -a'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:66> alias 'gca!=git commit -v -a --amend'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:67> alias 'gcan!=git commit -v -a --no-edit --amend'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:68> alias 'gcans!=git commit -v -a -s --no-edit --amend'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:69> alias 'gcam=git commit -a -m'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:70> alias 'gcsm=git commit -s -m'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:71> alias 'gcb=git checkout -b'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:72> alias 'gcf=git config --list'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:73> alias 'gcl=git clone --recursive'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:74> alias 'gclean=git clean -fd'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:75> alias 'gpristine=git reset --hard && git clean -dfx'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:76> alias 'gcm=git checkout master'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:77> alias 'gcd=git checkout develop'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:78> alias 'gcmsg=git commit -m'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:79> alias 'gco=git checkout'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:80> alias 'gcount=git shortlog -sn'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:81> compdef _git gcount
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gcount = -N ]]
+compdef:134> [[ gcount = -p ]]
+compdef:136> [[ gcount = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gcount = *=* ]]
+compdef:159> cmd=gcount 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:82> alias 'gcp=git cherry-pick'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:83> alias 'gcpa=git cherry-pick --abort'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:84> alias 'gcpc=git cherry-pick --continue'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:85> alias 'gcs=git commit -S'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:87> alias 'gd=git diff'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:88> alias 'gdca=git diff --cached'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:89> alias 'gdcw=git diff --cached --word-diff'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:90> alias 'gdct=git describe --tags `git rev-list --tags --max-count=1`'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:91> alias 'gdt=git diff-tree --no-commit-id --name-only -r'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:92> alias 'gdw=git diff --word-diff'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:95> compdef _git 'gdv=git-diff'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gdv=git-diff' = -N ]]
+compdef:134> [[ 'gdv=git-diff' = -p ]]
+compdef:136> [[ 'gdv=git-diff' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gdv=git-diff' = *=* ]]
+compdef:156> cmd=gdv 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-diff 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:97> alias 'gf=git fetch'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:98> alias 'gfa=git fetch --all --prune'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:99> alias 'gfo=git fetch origin'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:102> compdef _grep gfg
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _grep = *=* ]]
+compdef:79> func=_grep 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ gfg = -N ]]
+compdef:134> [[ gfg = -p ]]
+compdef:136> [[ gfg = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ gfg = *=* ]]
+compdef:159> cmd=gfg 
+compdef:160> svc='' 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_grep 
+compdef:164> [[ -n '' ]]
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:104> alias 'gg=git gui citool'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:105> alias 'gga=git gui citool --amend'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:115> compdef _git 'ggf=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggf=git-checkout' = -N ]]
+compdef:134> [[ 'ggf=git-checkout' = -p ]]
+compdef:136> [[ 'ggf=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggf=git-checkout' = *=* ]]
+compdef:156> cmd=ggf 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:125> compdef _git 'ggl=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggl=git-checkout' = -N ]]
+compdef:134> [[ 'ggl=git-checkout' = -p ]]
+compdef:136> [[ 'ggl=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggl=git-checkout' = *=* ]]
+compdef:156> cmd=ggl 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:135> compdef _git 'ggp=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggp=git-checkout' = -N ]]
+compdef:134> [[ 'ggp=git-checkout' = -p ]]
+compdef:136> [[ 'ggp=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggp=git-checkout' = *=* ]]
+compdef:156> cmd=ggp 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:144> compdef _git 'ggpnp=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggpnp=git-checkout' = -N ]]
+compdef:134> [[ 'ggpnp=git-checkout' = -p ]]
+compdef:136> [[ 'ggpnp=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggpnp=git-checkout' = *=* ]]
+compdef:156> cmd=ggpnp 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:150> compdef _git 'ggu=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggu=git-checkout' = -N ]]
+compdef:134> [[ 'ggu=git-checkout' = -p ]]
+compdef:136> [[ 'ggu=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggu=git-checkout' = *=* ]]
+compdef:156> cmd=ggu 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:152> alias 'ggpur=ggu'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:153> compdef _git 'ggpur=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggpur=git-checkout' = -N ]]
+compdef:134> [[ 'ggpur=git-checkout' = -p ]]
+compdef:136> [[ 'ggpur=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggpur=git-checkout' = *=* ]]
+compdef:156> cmd=ggpur 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:155> alias 'ggpull=git pull origin $(git_current_branch)'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:156> compdef _git 'ggpull=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggpull=git-checkout' = -N ]]
+compdef:134> [[ 'ggpull=git-checkout' = -p ]]
+compdef:136> [[ 'ggpull=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggpull=git-checkout' = *=* ]]
+compdef:156> cmd=ggpull 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:158> alias 'ggpush=git push origin $(git_current_branch)'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:159> compdef _git 'ggpush=git-checkout'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'ggpush=git-checkout' = -N ]]
+compdef:134> [[ 'ggpush=git-checkout' = -p ]]
+compdef:136> [[ 'ggpush=git-checkout' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'ggpush=git-checkout' = *=* ]]
+compdef:156> cmd=ggpush 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-checkout 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:161> alias 'ggsup=git branch --set-upstream-to=origin/$(git_current_branch)'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:162> alias 'gpsup=git push --set-upstream origin $(git_current_branch)'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:164> alias 'ghh=git help'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:166> alias 'gignore=git update-index --assume-unchanged'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:167> alias 'gignored=git ls-files -v | grep "^[[:lower:]]"'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:168> alias 'git-svn-dcommit-push=git svn dcommit && git push github master:svntrunk'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:169> compdef _git 'git-svn-dcommit-push=git'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'git-svn-dcommit-push=git' = -N ]]
+compdef:134> [[ 'git-svn-dcommit-push=git' = -p ]]
+compdef:136> [[ 'git-svn-dcommit-push=git' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'git-svn-dcommit-push=git' = *=* ]]
+compdef:156> cmd=git-svn-dcommit-push 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:171> alias 'gk=\gitk --all --branches'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:172> compdef _git 'gk=gitk'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gk=gitk' = -N ]]
+compdef:134> [[ 'gk=gitk' = -p ]]
+compdef:136> [[ 'gk=gitk' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gk=gitk' = *=* ]]
+compdef:156> cmd=gk 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gitk 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:173> alias 'gke=\gitk --all $(git log -g --pretty=%h)'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:174> compdef _git 'gke=gitk'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gke=gitk' = -N ]]
+compdef:134> [[ 'gke=gitk' = -p ]]
+compdef:136> [[ 'gke=gitk' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gke=gitk' = *=* ]]
+compdef:156> cmd=gke 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=gitk 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:176> alias 'gl=git pull'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:177> alias 'glg=git log --stat'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:178> alias 'glgp=git log --stat -p'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:179> alias 'glgg=git log --graph'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:180> alias 'glgga=git log --graph --decorate --all'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:181> alias 'glgm=git log --graph --max-count=10'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:182> alias 'glo=git log --oneline --decorate'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:183> alias 'glol=git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --abbrev-commit'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:184> alias 'glola=git log --graph --pretty='\''%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --abbrev-commit --all'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:185> alias 'glog=git log --oneline --decorate --graph'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:186> alias 'gloga=git log --oneline --decorate --graph --all'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:187> alias 'glp=_git_log_prettily'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:188> compdef _git 'glp=git-log'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'glp=git-log' = -N ]]
+compdef:134> [[ 'glp=git-log' = -p ]]
+compdef:136> [[ 'glp=git-log' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'glp=git-log' = *=* ]]
+compdef:156> cmd=glp 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-log 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:190> alias 'gm=git merge'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:191> alias 'gmom=git merge origin/master'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:192> alias 'gmt=git mergetool --no-prompt'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:193> alias 'gmtvim=git mergetool --no-prompt --tool=vimdiff'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:194> alias 'gmum=git merge upstream/master'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:195> alias 'gma=git merge --abort'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:197> alias 'gp=git push'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:198> alias 'gpd=git push --dry-run'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:199> alias 'gpoat=git push origin --all && git push origin --tags'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:200> compdef _git 'gpoat=git-push'
+compdef:1> local opt autol type func delete eval new i ret=0 cmd svc
+compdef:2> local -a match mbegin mend
+compdef:4> emulate -L zsh
+compdef:5> setopt extendedglob
+compdef:9> ((  ! 2  ))
+compdef:14> getopts anpPkKde opt
+compdef:38> shift OPTIND-1
+compdef:40> ((  ! 2  ))
+compdef:45> [[ -z '' ]]
+compdef:49> [[ -z '' ]]
+compdef:49> [[ _git = *=* ]]
+compdef:79> func=_git 
+compdef:80> [[ -n '' ]]
+compdef:81> shift
+compdef:83> case  (widgetkey)
+compdef:83> case  (key)
+compdef:83> case  (*)
+compdef:131> ((  1  ))
+compdef:132> [[ 'gpoat=git-push' = -N ]]
+compdef:134> [[ 'gpoat=git-push' = -p ]]
+compdef:136> [[ 'gpoat=git-push' = -P ]]
+compdef:139> case  (pattern)
+compdef:139> case  (postpattern)
+compdef:139> case  (*)
+compdef:155> [[ 'gpoat=git-push' = *=* ]]
+compdef:156> cmd=gpoat 
+compdef:157> svc=yes 
+compdef:162> [[ -z '' ]]
+compdef:163> _comps[$cmd]=_git 
+compdef:164> [[ -n yes ]]
+compdef:164> _services[$cmd]=git-push 
+compdef:169> shift
+compdef:131> ((  0  ))
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:201> alias 'gpu=git push upstream'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:202> alias 'gpv=git push -v'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:204> alias 'gr=git remote'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:205> alias 'gra=git remote add'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:206> alias 'grb=git rebase'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:207> alias 'grba=git rebase --abort'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:208> alias 'grbc=git rebase --continue'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:209> alias 'grbi=git rebase -i'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:210> alias 'grbm=git rebase master'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:211> alias 'grbs=git rebase --skip'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:212> alias 'grh=git reset HEAD'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:213> alias 'grhh=git reset HEAD --hard'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:214> alias 'grmv=git remote rename'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:215> alias 'grrm=git remote remove'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:216> alias 'grset=git remote set-url'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:217> alias 'grt=cd $(git rev-parse --show-toplevel || echo ".")'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:218> alias 'gru=git reset --'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:219> alias 'grup=git remote update'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:220> alias 'grv=git remote -v'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:222> alias 'gsb=git status -sb'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:223> alias 'gsd=git svn dcommit'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:224> alias 'gsi=git submodule init'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:225> alias 'gsps=git show --pretty=short --show-signature'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:226> alias 'gsr=git svn rebase'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:227> alias 'gss=git status -s'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:228> alias 'gst=git status'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:229> alias 'gsta=git stash save'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:230> alias 'gstaa=git stash apply'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:231> alias 'gstc=git stash clear'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:232> alias 'gstd=git stash drop'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:233> alias 'gstl=git stash list'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:234> alias 'gstp=git stash pop'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:235> alias 'gsts=git stash show --text'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:236> alias 'gsu=git submodule update'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:238> alias 'gts=git tag -s'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:239> alias 'gtv=git tag | sort -V'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:241> alias 'gunignore=git update-index --no-assume-unchanged'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:242> alias 'gunwip=git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:243> alias 'gup=git pull --rebase'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:244> alias 'gupv=git pull --rebase -v'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:245> alias 'glum=git pull upstream master'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:247> alias 'gwch=git whatchanged -p --abbrev-commit --pretty=medium'
+/root/.oh-my-zsh/plugins/git/git.plugin.zsh:248> alias 'gwip=git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify -m "--wip-- [skip ci]"'
+/root/.oh-my-zsh/oh-my-zsh.sh:90> config_file=/root/.oh-my-zsh/custom/example.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:91> source /root/.oh-my-zsh/custom/example.zsh
+/root/.oh-my-zsh/oh-my-zsh.sh:93> unset config_file
+/root/.oh-my-zsh/oh-my-zsh.sh:96> [[ bira == random ]]
+/root/.oh-my-zsh/oh-my-zsh.sh:108> [ '!' bira '=' '' ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:109> [ -f /root/.oh-my-zsh/custom/bira.zsh-theme ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:111> [ -f /root/.oh-my-zsh/custom/themes/bira.zsh-theme ']'
+/root/.oh-my-zsh/oh-my-zsh.sh:114> source /root/.oh-my-zsh/themes/bira.zsh-theme
+/root/.oh-my-zsh/themes/bira.zsh-theme:2> local return_code=$'%(?..%{\C-[[31m%}%? ↵%{\C-[[00m%})'
+/root/.oh-my-zsh/themes/bira.zsh-theme:5> [[ 0 -eq 0 ]]
+/root/.oh-my-zsh/themes/bira.zsh-theme:6> local user_host='%{$terminfo[bold]$fg[red]%}%n@%m%{$reset_color%}'
+/root/.oh-my-zsh/themes/bira.zsh-theme:7> local user_symbol='#'
+/root/.oh-my-zsh/themes/bira.zsh-theme:13> local current_dir='%{$terminfo[bold]$fg[blue]%}%~%{$reset_color%}'
+/root/.oh-my-zsh/themes/bira.zsh-theme:14> local rvm_ruby=''
+/root/.oh-my-zsh/themes/bira.zsh-theme:15> alias
+/root/.oh-my-zsh/themes/bira.zsh-theme:15> /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot rvm-prompt
+/root/.oh-my-zsh/themes/bira.zsh-theme:15> declare -f
+/root/.oh-my-zsh/themes/bira.zsh-theme:18> alias
+/root/.oh-my-zsh/themes/bira.zsh-theme:18> /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot rbenv
+/root/.oh-my-zsh/themes/bira.zsh-theme:18> declare -f
+/root/.oh-my-zsh/themes/bira.zsh-theme:22> local git_branch='$(git_prompt_info)%{$reset_color%}'
+/root/.oh-my-zsh/themes/bira.zsh-theme:24> PROMPT=$'╭─%{$terminfo[bold]$fg[red]%}%n@%m%{$reset_color%} %{$terminfo[bold]$fg[blue]%}%~%{$reset_color%}  $(git_prompt_info)%{$reset_color%}\n╰─%B#%b ' 
+/root/.oh-my-zsh/themes/bira.zsh-theme:26> RPS1=$'%B%(?..%{\C-[[31m%}%? ↵%{\C-[[00m%})%b' 
+/root/.oh-my-zsh/themes/bira.zsh-theme:28> ZSH_THEME_GIT_PROMPT_PREFIX=$'%{\C-[[33m%}‹' 
+/root/.oh-my-zsh/themes/bira.zsh-theme:29> ZSH_THEME_GIT_PROMPT_SUFFIX=$'› %{\C-[[00m%}' 
+/root/.zshrc:99> printf '\e[8;55;215t'
+/root/.zshrc:102> export GOPATH=/root/go
+/root/.zshrc:103> export GOROOT=/usr/local/go
+/root/.zshrc:104> export PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin
+/root/.zshrc:105> alias 'ctagscpp=ctags --c++-kinds=+p --fields=+iaS --extra=+q'
+/root/.zshrc:106> alias 'gl=ghq look $(ghq list|fzf)'
+/root/.zshrc:108> alias 'perldb=perl -d:Trepan'
+/root/.zshrc:109> alias 'chrome=google-chrome-stable --no-sandbox'
+/root/.zshrc:110> alias 'vid=vim --servername gdb'
+/root/.zshrc:111> unalias gr
+/root/.zshrc:112> export PS=/mnt/hgfs/H/work/package
+/root/.zshrc:113> export PG=mirrors.ustc.edu.cn
+/root/.zshrc:114> export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
+/root/.zshrc:115> export LD_LIBRARY_PATH=/usr/local/lib
+/root/.zshrc:116> export PERL5LIB=:/usr/local/lib/perl5/site_perl/5.26.1:/usr/local/lib/perl5/site_perl/5.26.1/x86_64-linux:/usr/local/lib/perl5/site_perl/5.26.1:/usr/local/lib/perl5/site_perl/5.26.1/x86_64-linux:/usr/local/lib/perl5/site_perl/5.26.1:/usr/local/lib/perl5/site_perl/5.26.1/x86_64-linux:/usr/local/lib/perl5/site_perl/5.26.1:/usr/local/lib/perl5/site_perl/5.26.1/x86_64-linux
+/root/.zshrc:122> [ -f /root/.fzf.zsh ']'
+/root/.zshrc:122> source /root/.fzf.zsh
+/root/.fzf.zsh:3> [[ ! /usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin == */root/.fzf/bin* ]]
+/root/.fzf.zsh:9> [[ 569JNRXZghikmx == *i* ]]
+/root/.fzf.zsh:9> source /root/.fzf/shell/completion.zsh
+/root/.fzf/shell/completion.zsh:14> declare -f _fzf_compgen_path
+/root/.fzf/shell/completion.zsh:23> declare -f _fzf_compgen_dir
+/root/.fzf/shell/completion.zsh:192> [ -z expand-or-complete ']'
+/root/.fzf/shell/completion.zsh:198> zle -N fzf-completion
+/root/.fzf/shell/completion.zsh:199> bindkey '^I' fzf-completion
+/root/.fzf.zsh:13> source /root/.fzf/shell/key-bindings.zsh
+/root/.fzf/shell/key-bindings.zsh:3> [[ 569JNRXZghikmx == *i* ]]
+/root/.fzf/shell/key-bindings.zsh:36> zle -N fzf-file-widget
+/root/.fzf/shell/key-bindings.zsh:37> bindkey '^T' fzf-file-widget
+/root/.fzf/shell/key-bindings.zsh:47> zle -N fzf-redraw-prompt
+/root/.fzf/shell/key-bindings.zsh:65> zle -N fzf-cd-widget
+/root/.fzf/shell/key-bindings.zsh:66> bindkey '\ec' fzf-cd-widget
+/root/.fzf/shell/key-bindings.zsh:85> zle -N fzf-history-widget
+/root/.fzf/shell/key-bindings.zsh:86> bindkey '^R' fzf-history-widget
+/root/.zshrc:125> [[ 569JNRXZghikmx != *i* ]]
+/root/.zshrc:126> [[ -z /tmp/tmux-0/default,2061,0 ]]
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:16> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE=gr
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE=gr
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:16> gr
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:17> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE='gr list'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE='gr list'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:17> gr list
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:18> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE='gr tag list'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE='gr tag list'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:18> gr tag list
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:19> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=more
+omz_termsupport_preexec:10> local LINE='more ~/.grconfig.json'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=more
+omz_termsupport_preexec:10> local LINE='more ~/.grconfig.json'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:19> more /root/.grconfig.json
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:20> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=cp
+omz_termsupport_preexec:10> local LINE='cp ~/.grconfig.json dotfile'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=cp
+omz_termsupport_preexec:10> local LINE='cp ~/.grconfig.json dotfile'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:20> cp /root/.grconfig.json dotfile
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:21> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:21> fg
fg: no current job
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:22> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:22> fg
fg: no current job
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:23> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=vim
+omz_termsupport_preexec:10> local LINE='vim install.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=vim
+omz_termsupport_preexec:10> local LINE='vim install.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:23> vim install.sh
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:24> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ln
+omz_termsupport_preexec:10> local LINE='ln -sf /root/git/myfile/dotfile/.grconfig.json ~/.grconfig.json'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ln
+omz_termsupport_preexec:10> local LINE='ln -sf /root/git/myfile/dotfile/.grconfig.json ~/.grconfig.json'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:24> ln -sf /root/git/myfile/dotfile/.grconfig.json /root/.grconfig.json
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:25> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty -l ~/.grconfig.json'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty -l ~/.grconfig.json'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:25> ls '--color=tty' -l /root/.grconfig.json
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:26> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE=gr
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE=gr
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:26> gr
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:27> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE='gr list'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE='gr list'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:27> gr list
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:28> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE='gr get'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=gr
+omz_termsupport_preexec:10> local LINE='gr get'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:28> gr get
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:29> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=get
+omz_termsupport_preexec:10> local LINE=get
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=get
+omz_termsupport_preexec:10> local LINE=get
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:29> get
+command_not_found_handle:1> local runcnf=1
+command_not_found_handle:2> local retval=127
+command_not_found_handle:5> [[ $- -regex-match i ]]
+command_not_found_handle:8> [[ ! -S /run/dbus/system_bus_socket ]]
+command_not_found_handle:11> [[ ! -x /usr/libexec/packagekitd ]]
+command_not_found_handle:14> [[ -n '' ]]
+command_not_found_handle:17> [ 1 -eq 1 ']'
+command_not_found_handle:18> /usr/libexec/pk-command-not-found get
zsh: get: command not found...
Similar command is: 'git'
+command_not_found_handle:19> retval=127 
+command_not_found_handle:25> return 127
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:30> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=which
+omz_termsupport_preexec:10> local LINE='( alias; declare -f; ) | /usr/bin/which --tty-only --read-alias  --show-tilde'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=which
+omz_termsupport_preexec:10> local LINE='( alias; declare -f; ) | /usr/bin/which --tty-only --read-alias  --show-tilde'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:30> alias
+zsh:30> /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot get
+zsh:30> declare -f
/usr/bin/which: no get in (/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin)
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:31> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=where
+omz_termsupport_preexec:10> local LINE='where get'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=where
+omz_termsupport_preexec:10> local LINE='where get'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:31> where get
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:32> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=grget
+omz_termsupport_preexec:10> local LINE=grget
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=grget
+omz_termsupport_preexec:10> local LINE=grget
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:32> grget
+command_not_found_handle:1> local runcnf=1
+command_not_found_handle:2> local retval=127
+command_not_found_handle:5> [[ $- -regex-match i ]]
+command_not_found_handle:8> [[ ! -S /run/dbus/system_bus_socket ]]
+command_not_found_handle:11> [[ ! -x /usr/libexec/packagekitd ]]
+command_not_found_handle:14> [[ -n '' ]]
+command_not_found_handle:17> [ 1 -eq 1 ']'
+command_not_found_handle:18> /usr/libexec/pk-command-not-found grget
zsh: grget: command not found...
+command_not_found_handle:19> retval=127 
+command_not_found_handle:25> return 127
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:33> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=which
+omz_termsupport_preexec:10> local LINE='( alias; declare -f; ) | /usr/bin/which --tty-only --read-alias  --show-tilde'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=which
+omz_termsupport_preexec:10> local LINE='( alias; declare -f; ) | /usr/bin/which --tty-only --read-alias  --show-tilde'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:33> alias
+zsh:33> /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot grget
+zsh:33> declare -f
/usr/bin/which: no grget in (/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/root/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin:/usr/local/go/bin:/root/go/bin:/root/.fzf/bin)
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:34> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=where
+omz_termsupport_preexec:10> local LINE='where grget'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=where
+omz_termsupport_preexec:10> local LINE='where grget'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:34> where grget
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:35> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:35> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:36> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/fedora-release'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/fedora-release'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:36> ls '--color=tty' /etc/fedora-release
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:37> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:37> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:38> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:38> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:38> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:39> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=cp
+omz_termsupport_preexec:10> local LINE='cp install-sub/install-define.sh fedora-27/install-define.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=cp
+omz_termsupport_preexec:10> local LINE='cp install-sub/install-define.sh fedora-27/install-define.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:39> cp install-sub/install-define.sh fedora-27/install-define.sh
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:40> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:40> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:41> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=more
+omz_termsupport_preexec:10> local LINE='more install-define.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=more
+omz_termsupport_preexec:10> local LINE='more install-define.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:41> more install-define.sh
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:42> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:42> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:43> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty fedora-27/fedora-updates-ustc.repo'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty fedora-27/fedora-updates-ustc.repo'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:43> ls '--color=tty' fedora-27/fedora-updates-ustc.repo
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:44> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=echo
+omz_termsupport_preexec:10> local LINE='echo "fedora-updates-ustc.repo" >> install-define.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=echo
+omz_termsupport_preexec:10> local LINE='echo "fedora-updates-ustc.repo" >> install-define.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:44> echo fedora-updates-ustc.repo
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:45> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fedora-27/fedora-ustc.repo
+omz_termsupport_preexec:10> local LINE=fedora-27/fedora-ustc.repo
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fedora-27/fedora-ustc.repo
+omz_termsupport_preexec:10> local LINE=fedora-27/fedora-ustc.repo
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:45> fedora-27/fedora-ustc.repo
fedora-27/fedora-ustc.repo: line 1: $'\r': command not found
fedora-27/fedora-ustc.repo: line 2: [fedora]: command not found
fedora-27/fedora-ustc.repo: line 3: -: command not found
fedora-27/fedora-ustc.repo: line 4: $'\r': command not found
fedora-27/fedora-ustc.repo: line 5: $'\r': command not found
fedora-27/fedora-ustc.repo: line 7: $'\r': command not found
fedora-27/fedora-ustc.repo: line 8: $'\r': command not found
fedora-27/fedora-ustc.repo: line 9: $'\r': command not found
fedora-27/fedora-ustc.repo: line 10: $'\r': command not found
fedora-27/fedora-ustc.repo: line 11: $'\r': command not found
fedora-27/fedora-ustc.repo: line 12: [fedora-debuginfo]: command not found
fedora-27/fedora-ustc.repo: line 13: -: command not found
fedora-27/fedora-ustc.repo: line 14: $'\r': command not found
fedora-27/fedora-ustc.repo: line 15: $'\r': command not found
fedora-27/fedora-ustc.repo: line 17: $'\r': command not found
fedora-27/fedora-ustc.repo: line 18: $'\r': command not found
fedora-27/fedora-ustc.repo: line 20: $'\r': command not found
fedora-27/fedora-ustc.repo: line 21: $'\r': command not found
fedora-27/fedora-ustc.repo: line 22: [fedora-source]: command not found
fedora-27/fedora-ustc.repo: line 23: -: command not found
fedora-27/fedora-ustc.repo: line 24: $'\r': command not found
fedora-27/fedora-ustc.repo: line 25: $'\r': command not found
fedora-27/fedora-ustc.repo: line 27: $'\r': command not found
fedora-27/fedora-ustc.repo: line 28: $'\r': command not found
fedora-27/fedora-ustc.repo: line 29: $'\r': command not found
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:46> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:47> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=echo
+omz_termsupport_preexec:10> local LINE='echo "fedora-ustc.repo" >> install-define.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=echo
+omz_termsupport_preexec:10> local LINE='echo "fedora-ustc.repo" >> install-define.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:47> echo fedora-ustc.repo
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:48> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:48> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:49> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:49> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:49> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:50> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:50> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:51> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh fedora-27/install-fedora.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh fedora-27/install-fedora.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:51> sh fedora-27/install-fedora.sh
ln: invalid option -- 'A'
Try 'ln --help' for more information.
ln: invalid option -- 'A'
Try 'ln --help' for more information.
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:52> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/yum.repos.d/fedora-cisco-openh264.repo'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/yum.repos.d/fedora-cisco-openh264.repo'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:52> ls '--color=tty' /etc/yum.repos.d/fedora-cisco-openh264.repo
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:53> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/yum.repos.d/fedora-cisco-openh264.repo -l'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/yum.repos.d/fedora-cisco-openh264.repo -l'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:53> ls '--color=tty' /etc/yum.repos.d/fedora-cisco-openh264.repo -l
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:54> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:54> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:55> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:55> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh fedora-27/install-fedora.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh fedora-27/install-fedora.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:55> sh fedora-27/install-fedora.sh
ln: invalid option -- 'A'
Try 'ln --help' for more information.
ln: invalid option -- 'A'
Try 'ln --help' for more information.
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:56> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/yum.repos.d/fedora-cisco-openh264.repo -l'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/yum.repos.d/fedora-cisco-openh264.repo -l'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:56> ls '--color=tty' /etc/yum.repos.d/fedora-cisco-openh264.repo -l
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:57> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:57> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:58> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh fedora-27/install-fedora.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh fedora-27/install-fedora.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:58> sh fedora-27/install-fedora.sh
ln: invalid option -- 'A'
Try 'ln --help' for more information.
ln: invalid option -- 'A'
Try 'ln --help' for more information.
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:59> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/yum.repos.d/fedora-cisco-openh264.repo -l'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/yum.repos.d/fedora-cisco-openh264.repo -l'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:59> ls '--color=tty' /etc/yum.repos.d/fedora-cisco-openh264.repo -l
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:60> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh fedora-27/install-fedora.sh -x'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh fedora-27/install-fedora.sh -x'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:60> sh fedora-27/install-fedora.sh -x
ln: invalid option -- 'A'
Try 'ln --help' for more information.
ln: invalid option -- 'A'
Try 'ln --help' for more information.
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:61> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:61> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:62> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x fedora-27/install-fedora.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x fedora-27/install-fedora.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:62> sh -x fedora-27/install-fedora.sh
+ source ./install-define.sh
++ export DOT_PATH=/root/git/myfile/dotfile
++ DOT_PATH=/root/git/myfile/dotfile
++ export MY_GIT=/root/git
++ MY_GIT=/root/git
++ export SHARED_PATH=/mnt/shared
++ SHARED_PATH=/mnt/shared
++ export SUB_INSTALL_PATH=/root/git/myfile/install-sub
++ SUB_INSTALL_PATH=/root/git/myfile/install-sub
++ export FEDORA_PATH=/root/git/myfile/fedora-27
++ FEDORA_PATH=/root/git/myfile/fedora-27
+ ln -fs -PATH/fedora-updates-ustc.repo /etc/yum.repos.d/fedora-updates-ustc.repo
ln: invalid option -- 'A'
Try 'ln --help' for more information.
+ ln -fs -PATH/fedora-ustc.repo /etc/yum.repos.d/fedora-ustc.repo
ln: invalid option -- 'A'
Try 'ln --help' for more information.
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:63> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x fedora-27/install-fedora.sh 2>&1'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x fedora-27/install-fedora.sh 2>&1'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:63> sh -x fedora-27/install-fedora.sh
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:64> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:64> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:65> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:65> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:66> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x fedora-27/install-fedora.sh 2>&1'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x fedora-27/install-fedora.sh 2>&1'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:66> sh -x fedora-27/install-fedora.sh
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:67> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/yum.repos.d/fedora-cisco-openh264.repo -l'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/yum.repos.d/fedora-cisco-openh264.repo -l'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:67> ls '--color=tty' /etc/yum.repos.d/fedora-cisco-openh264.repo -l
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:68> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/yum.repos.d/fedora-updates-ustc.repo -l'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty /etc/yum.repos.d/fedora-updates-ustc.repo -l'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:68> ls '--color=tty' /etc/yum.repos.d/fedora-updates-ustc.repo -l
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:69> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:69> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:70> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x fedora-27/install-fedora.sh 2>&1'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x fedora-27/install-fedora.sh 2>&1'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:70> sh -x fedora-27/install-fedora.sh
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:71> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:71> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:72> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? install-sub/install-zsh.sh' 
+parse_git_dirty:13> [[ -n '?? install-sub/install-zsh.sh' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x fedora-27/install-fedora.sh 2>&1'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x fedora-27/install-fedora.sh 2>&1'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:72> sh -x fedora-27/install-fedora.sh
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:73> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=tar
+omz_termsupport_preexec:10> local LINE='tar tvf yum.repos.d.tar'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=tar
+omz_termsupport_preexec:10> local LINE='tar tvf yum.repos.d.tar'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:73> tar tvf yum.repos.d.tar
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:74> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:74> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:75> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x fedora-27/install-fedora.sh 2>&1'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x fedora-27/install-fedora.sh 2>&1'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:75> sh -x fedora-27/install-fedora.sh
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:76> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=dnf
+omz_termsupport_preexec:10> local LINE='dnf search git'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=dnf
+omz_termsupport_preexec:10> local LINE='dnf search git'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:76> dnf search git
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:77> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=dnf
+omz_termsupport_preexec:10> local LINE='dnf search iftop'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=dnf
+omz_termsupport_preexec:10> local LINE='dnf search iftop'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:77> dnf search iftop
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:78> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:78> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:79> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:79> fg
fg: no current job
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:80> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=..
+omz_termsupport_preexec:10> local LINE=..
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=..
+omz_termsupport_preexec:10> local LINE=..
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:80> cd -- ..
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:81> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref='' 
+git_prompt_info:4> ref=+git_prompt_info:4> git rev-parse --short HEAD
+git_prompt_info:4> ref='' 
+git_prompt_info:4> return 0
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:81> ls '--color=tty'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:82> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref='' 
+git_prompt_info:4> ref=+git_prompt_info:4> git rev-parse --short HEAD
+git_prompt_info:4> ref='' 
+git_prompt_info:4> return 0
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:82> fg
fg: no current job
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:83> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref='' 
+git_prompt_info:4> ref=+git_prompt_info:4> git rev-parse --short HEAD
+git_prompt_info:4> ref='' 
+git_prompt_info:4> return 0
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=cd
+omz_termsupport_preexec:10> local LINE='cd myfile'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=cd
+omz_termsupport_preexec:10> local LINE='cd myfile'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:83> cd myfile
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:84> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=vim
+omz_termsupport_preexec:10> local LINE='vim install-sub/install-gr.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=vim
+omz_termsupport_preexec:10> local LINE='vim install-sub/install-gr.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:84> vim install-sub/install-gr.sh
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:85> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=/usr/bin/env
+omz_termsupport_preexec:10> local LINE='/usr/bin/env sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=/usr/bin/env
+omz_termsupport_preexec:10> local LINE='/usr/bin/env sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:85> /usr/bin/env sh
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:86> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=/usr/bin/env
+omz_termsupport_preexec:10> local LINE='/usr/bin/env sh ls'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=/usr/bin/env
+omz_termsupport_preexec:10> local LINE='/usr/bin/env sh ls'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:86> /usr/bin/env sh ls
/usr/bin/ls: /usr/bin/ls: cannot execute binary file
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:87> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=ls
+omz_termsupport_preexec:10> local LINE='ls --color=tty'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:87> ls '--color=tty'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:88> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:88> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:89> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh install-sub/install-gr.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh install-sub/install-gr.sh'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:89> sh install-sub/install-gr.sh
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:90> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x install-sub/install-gr.sh 2>&1'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=sh
+omz_termsupport_preexec:10> local LINE='sh -x install-sub/install-gr.sh 2>&1'
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:90> sh -x install-sub/install-gr.sh
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:91> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:92> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:93> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:93> fg
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:94> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+omz_termsupport_preexec:1> emulate -L zsh
+omz_termsupport_preexec:2> setopt extended_glob
+omz_termsupport_preexec:4> [[ '' == true ]]
+omz_termsupport_preexec:9> local CMD=fg
+omz_termsupport_preexec:10> local LINE=fg
+omz_termsupport_preexec:12> title '$CMD' '%100>...>$LINE%<<'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%100>...>$LINE%<<'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek\$CMD\e\'
+zsh:94> fg
fg: no current job
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+omz_termsupport_precmd:1> emulate -L zsh
+omz_termsupport_precmd:3> [[ '' == true ]]
+omz_termsupport_precmd:7> title '%15<..<%~%<<' '%n@%m: %~'
+title:1> emulate -L zsh
+title:2> setopt prompt_subst
+title:4> [[ '' == *term* ]]
+title:8> : '%n@%m: %~'
+title:10> case screen (cygwin | xterm* | putty* | rxvt* | ansi)
+title:10> case screen (screen*)
+title:16> print -Pn '\ek%15\<..\<%~%\<\<\e\'
+zsh:95> git_prompt_info
+git_prompt_info:1> local ref
+git_prompt_info:2> [[+git_prompt_info:2> git config --get oh-my-zsh.hide-status
+git_prompt_info:2> [[ '' != 1 ]]
+git_prompt_info:3> ref=+git_prompt_info:3> git symbolic-ref HEAD
+git_prompt_info:3> ref=refs/heads/master 
+git_prompt_info:5> parse_git_dirty
+parse_git_dirty:1> local STATUS=''
+parse_git_dirty:2> local -a FLAGS
+parse_git_dirty:3> FLAGS=( --porcelain ) 
+parse_git_dirty:4> [[+parse_git_dirty:4> git config --get oh-my-zsh.hide-dirty
+parse_git_dirty:4> [[ '' != 1 ]]
+parse_git_dirty:5> [[ 1 -gt 0 ]]
+parse_git_dirty:6> FLAGS+='--ignore-submodules=dirty' 
+parse_git_dirty:8> [[ '' == true ]]
+parse_git_dirty:11> STATUS=+parse_git_dirty:11> STATUS=+parse_git_dirty:11> git status --porcelain '--ignore-submodules=dirty'
+parse_git_dirty:11> tail -n1
+parse_git_dirty:11> STATUS='?? yum.repos.d.tar' 
+parse_git_dirty:13> [[ -n '?? yum.repos.d.tar' ]]
+parse_git_dirty:14> echo '*'
+git_prompt_info:5> echo $'%{\C-[[33m%}‹master*› %{\C-[[00m%}'
